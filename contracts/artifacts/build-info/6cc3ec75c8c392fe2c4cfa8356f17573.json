{
	"id": "6cc3ec75c8c392fe2c4cfa8356f17573",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-21\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC721 {\r\n    function createNFT(address to) external;\r\n}\r\n\r\n// MasterChef is the master of Power. He can make Power and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous power. The ownership\r\n// will be transferred to a governance smart contract once Power is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTMasterChef is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of Powers\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accPowerPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accPowerPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Powers to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that Powers distribution occurs.\r\n        uint256 accPowerPerShare; // Accumulated Powers per share, times 1e12. See below.\r\n    }\r\n\r\n    struct NFTsInfo {\r\n        IERC721 NFT;\r\n        uint256 power;\r\n    }\r\n\r\n    NFTsInfo[] public nftsInfo;\r\n\r\n    // The Power TOKEN!\r\n    IERC20 public DDT;\r\n    // Power tokens created per block.\r\n    uint256 public PowerPerBlock;\r\n    // Bonus muliplier for early Power makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of power. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when Power mining starts.\r\n    uint256 public startBlock;\r\n\r\n    address public NFTStakeAddress;\r\n    address public DDTMasterchefAddress;\r\n\r\n    mapping(address => uint256) public powerBalance;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DDT,\r\n        uint256 _PowerPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DDT = _DDT;\r\n        PowerPerBlock = _PowerPerBlock;\r\n        startBlock = _startBlock;\r\n        \r\n        // staking pool\r\n        poolInfo.push(PoolInfo({\r\n            lpToken: DDT,\r\n            allocPoint: 1000,\r\n            lastRewardBlock: startBlock,\r\n            accPowerPerShare: 0\r\n        }));\r\n\r\n        totalAllocPoint = 1000;\r\n\r\n    }\r\n\r\n    function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r\n        NFTStakeAddress = _NFTStakeAddress;\r\n    }\r\n\r\n    function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{\r\n        DDTMasterchefAddress = _DDTMasterchefAddress;\r\n    }\r\n\r\n    function getPowerBalance(address account) public view returns(uint256) {\r\n        return powerBalance[account];\r\n    }\r\n\r\n    function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r\n        nftsInfo.push(\r\n            NFTsInfo({\r\n                NFT: _NFT,\r\n                power: _power\r\n            })\r\n        );\r\n    }\r\n\r\n    function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r\n        nftsInfo[level].power = _power;\r\n    }\r\n\r\n    function claimNFTReward(uint256 level, uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        NFTsInfo storage nft = nftsInfo[level];\r\n        uint256 total = pending.add(powerBalance[msg.sender]);\r\n        if(total > nft.power){\r\n            if(_pid == 0){\r\n                leaveStaking(0);\r\n            }\r\n            if(_pid != 0){\r\n                withdraw(_pid,0);\r\n            }\r\n        }\r\n        require(nft.power < powerBalance[msg.sender], 'Power is not enough');\r\n        powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power);\r\n        nft.NFT.createNFT(msg.sender);\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accPowerPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's Power allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Migrate lp token to another lp contract. Can be called by anyone. We trust that migrator contract is good.\r\n    function migrate(uint256 _pid) public {\r\n        require(address(migrator) != address(0), 'migrate: no migrator');\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        IERC20 lpToken = pool.lpToken;\r\n        uint256 bal = lpToken.balanceOf(address(this));\r\n        lpToken.safeApprove(address(migrator), bal);\r\n        IERC20 newLpToken = migrator.migrate(lpToken);\r\n        require(bal == newLpToken.balanceOf(address(this)), 'migrate: bad');\r\n        pool.lpToken = newLpToken;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    // View function to see pending Powers on frontend.\r\n    function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for Power allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        require (_pid != 0, 'deposit Power by staking');\r\n        require(_amount > 0, 'Amount is zero');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n            }\r\n        }\r\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, 'withdraw Power by unstaking');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, 'withdraw: not good');\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0){\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        user.amount = user.amount.sub(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n        // Stake Power tokens to MasterChef\r\n    function enterStaking(uint256 _amount) public {\r\n        require(_amount > 0, 'Amount is zero');\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(msg.sender)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, 0, _amount);\r\n    }\r\n\r\n    function enterStakingCompund(uint256 _amount, address _account) public {\r\n        require(_amount > 0, 'Amount is zero');\r\n        require(msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress, 'Caller is not family');\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(_account)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(_account)] = powerBalance[address(_account)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(_account, 0, _amount);\r\n    }\r\n\r\n    // Withdraw Power tokens from STAKING.\r\n    function leaveStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][msg.sender];\r\n        require(user.amount >= _amount, 'withdraw: not good');\r\n        updatePool(0);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0) {\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        if(_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, 0, _amount);\r\n    }\r\n\r\n    \r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n    \r\n    function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r\n        PowerPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTMasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209a0890bc49e9a22990be6f57831b82e6e1e7882e1df5ff5807a7d36212cba58d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a0890bc49e9a22990be6f57831b82e6e1e7882e1df5ff5807a7d36212cba58d64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 ADDMOD SWAP1 0xBC 0x49 0xE9 LOG2 0x29 SWAP1 0xBE PUSH16 0x57831B82E6E1E7882E1DF5FF5807A7D3 PUSH3 0x12CBA5 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a0890bc49e9a22990be6f57831b82e6e1e7882e1df5ff5807a7d36212cba58d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 ADDMOD SWAP1 0xBC 0x49 0xE9 LOG2 0x29 SWAP1 0xBE PUSH16 0x57831B82E6E1E7882E1DF5FF5807A7D3 PUSH3 0x12CBA5 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a0890bc49e9a22990be6f57831b82e6e1e7882e1df5ff5807a7d36212cba58d64736f6c63430008070033",
									".code": [
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "createNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createNFT(address)": "17e5883c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DDT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_PowerPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDT",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDTMasterchefAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFTStakeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PowerPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "addNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "claimNFTReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "enterStakingCompund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPowerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftsInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPowerPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "powerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_DDTMasterchefAddress",
									"type": "address"
								}
							],
							"name": "updateDDTMasterchefAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "updateNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_NFTStakeAddress",
									"type": "address"
								}
							],
							"name": "updateNFTStakeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updatePowerPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":22111:36450  contract NFTMasterChef is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTMasterChef.sol\":23774:23775  1 */\n  0x01\n    /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n  0x04\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24217:24218  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n  0x08\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24731:25193  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  tag_8\n    /* \"contracts/NFTMasterChef.sol\":20003:20013  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTMasterChef.sol\":19984:20002  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTMasterChef.sol\":24852:24856  _DDT */\n  dup3\n    /* \"contracts/NFTMasterChef.sol\":24846:24849  DDT */\n  0x02\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24846:24856  DDT = _DDT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24883:24897  _PowerPerBlock */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":24867:24880  PowerPerBlock */\n  0x03\n    /* \"contracts/NFTMasterChef.sol\":24867:24897  PowerPerBlock = _PowerPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24921:24932  _startBlock */\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":24908:24918  startBlock */\n  0x09\n    /* \"contracts/NFTMasterChef.sol\":24908:24932  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24978:24986  poolInfo */\n  0x06\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({\r... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":25025:25028  DDT */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({\r... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25055:25059  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25091:25101  startBlock */\n  sload(0x09)\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25134:25135  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({\r... */\n  dup2\n  mstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24978:25148  poolInfo.push(PoolInfo({\r... */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":25179:25183  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":25161:25176  totalAllocPoint */\n  0x08\n    /* \"contracts/NFTMasterChef.sol\":25161:25183  totalAllocPoint = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24731:25193  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":22111:36450  contract NFTMasterChef is Ownable {\r... */\n  jump(tag_13)\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\ntag_9:\n    /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n  caller\n    /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTMasterChef.sol\":21438:21566  {\r... */\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:178   */\ntag_17:\n    /* \"#utility.yul\":78:83   */\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup2\n    /* \"#utility.yul\":103:116   */\n  mload\n    /* \"#utility.yul\":94:116   */\n  swap1\n  pop\n    /* \"#utility.yul\":125:172   */\n  tag_19\n    /* \"#utility.yul\":166:171   */\n  dup2\n    /* \"#utility.yul\":125:172   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":184:327   */\ntag_21:\n    /* \"#utility.yul\":241:246   */\n  0x00\n    /* \"#utility.yul\":272:278   */\n  dup2\n    /* \"#utility.yul\":266:279   */\n  mload\n    /* \"#utility.yul\":257:279   */\n  swap1\n  pop\n    /* \"#utility.yul\":288:321   */\n  tag_23\n    /* \"#utility.yul\":315:320   */\n  dup2\n    /* \"#utility.yul\":288:321   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":184:327   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:1024   */\ntag_3:\n    /* \"#utility.yul\":435:441   */\n  0x00\n    /* \"#utility.yul\":443:449   */\n  dup1\n    /* \"#utility.yul\":451:457   */\n  0x00\n    /* \"#utility.yul\":500:502   */\n  0x60\n    /* \"#utility.yul\":488:497   */\n  dup5\n    /* \"#utility.yul\":479:486   */\n  dup7\n    /* \"#utility.yul\":475:498   */\n  sub\n    /* \"#utility.yul\":471:503   */\n  slt\n    /* \"#utility.yul\":468:587   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":506:585   */\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":468:587   */\ntag_26:\n    /* \"#utility.yul\":626:627   */\n  0x00\n    /* \"#utility.yul\":651:729   */\n  tag_29\n    /* \"#utility.yul\":721:728   */\n  dup7\n    /* \"#utility.yul\":712:718   */\n  dup3\n    /* \"#utility.yul\":701:710   */\n  dup8\n    /* \"#utility.yul\":697:719   */\n  add\n    /* \"#utility.yul\":651:729   */\n  tag_17\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":641:729   */\n  swap4\n  pop\n    /* \"#utility.yul\":597:739   */\n  pop\n    /* \"#utility.yul\":778:780   */\n  0x20\n    /* \"#utility.yul\":804:868   */\n  tag_30\n    /* \"#utility.yul\":860:867   */\n  dup7\n    /* \"#utility.yul\":851:857   */\n  dup3\n    /* \"#utility.yul\":840:849   */\n  dup8\n    /* \"#utility.yul\":836:858   */\n  add\n    /* \"#utility.yul\":804:868   */\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":794:868   */\n  swap3\n  pop\n    /* \"#utility.yul\":749:878   */\n  pop\n    /* \"#utility.yul\":917:919   */\n  0x40\n    /* \"#utility.yul\":943:1007   */\n  tag_31\n    /* \"#utility.yul\":999:1006   */\n  dup7\n    /* \"#utility.yul\":990:996   */\n  dup3\n    /* \"#utility.yul\":979:988   */\n  dup8\n    /* \"#utility.yul\":975:997   */\n  add\n    /* \"#utility.yul\":943:1007   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":933:1007   */\n  swap2\n  pop\n    /* \"#utility.yul\":888:1017   */\n  pop\n    /* \"#utility.yul\":333:1024   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1111:1207   */\ntag_34:\n    /* \"#utility.yul\":1148:1155   */\n  0x00\n    /* \"#utility.yul\":1177:1201   */\n  tag_36\n    /* \"#utility.yul\":1195:1200   */\n  dup3\n    /* \"#utility.yul\":1177:1201   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1166:1201   */\n  swap1\n  pop\n    /* \"#utility.yul\":1111:1207   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1213:1323   */\ntag_38:\n    /* \"#utility.yul\":1264:1271   */\n  0x00\n    /* \"#utility.yul\":1293:1317   */\n  tag_40\n    /* \"#utility.yul\":1311:1316   */\n  dup3\n    /* \"#utility.yul\":1293:1317   */\n  tag_34\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1282:1317   */\n  swap1\n  pop\n    /* \"#utility.yul\":1213:1323   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1329:1455   */\ntag_37:\n    /* \"#utility.yul\":1366:1373   */\n  0x00\n    /* \"#utility.yul\":1406:1448   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1399:1404   */\n  dup3\n    /* \"#utility.yul\":1395:1449   */\n  and\n    /* \"#utility.yul\":1384:1449   */\n  swap1\n  pop\n    /* \"#utility.yul\":1329:1455   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1461:1538   */\ntag_42:\n    /* \"#utility.yul\":1498:1505   */\n  0x00\n    /* \"#utility.yul\":1527:1532   */\n  dup2\n    /* \"#utility.yul\":1516:1532   */\n  swap1\n  pop\n    /* \"#utility.yul\":1461:1538   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1667:1784   */\ntag_28:\n    /* \"#utility.yul\":1776:1777   */\n  0x00\n    /* \"#utility.yul\":1773:1774   */\n  dup1\n    /* \"#utility.yul\":1766:1778   */\n  revert\n    /* \"#utility.yul\":1790:1940   */\ntag_20:\n    /* \"#utility.yul\":1877:1915   */\n  tag_48\n    /* \"#utility.yul\":1909:1914   */\n  dup2\n    /* \"#utility.yul\":1877:1915   */\n  tag_38\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1870:1875   */\n  dup2\n    /* \"#utility.yul\":1867:1916   */\n  eq\n    /* \"#utility.yul\":1857:1934   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1930:1931   */\n  0x00\n    /* \"#utility.yul\":1927:1928   */\n  dup1\n    /* \"#utility.yul\":1920:1932   */\n  revert\n    /* \"#utility.yul\":1857:1934   */\ntag_49:\n    /* \"#utility.yul\":1790:1940   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2068   */\ntag_24:\n    /* \"#utility.yul\":2019:2043   */\n  tag_51\n    /* \"#utility.yul\":2037:2042   */\n  dup2\n    /* \"#utility.yul\":2019:2043   */\n  tag_42\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2012:2017   */\n  dup2\n    /* \"#utility.yul\":2009:2044   */\n  eq\n    /* \"#utility.yul\":1999:2062   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2058:2059   */\n  0x00\n    /* \"#utility.yul\":2055:2056   */\n  dup1\n    /* \"#utility.yul\":2048:2060   */\n  revert\n    /* \"#utility.yul\":1999:2062   */\ntag_52:\n    /* \"#utility.yul\":1946:2068   */\n  pop\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":22111:36450  contract NFTMasterChef is Ownable {\r... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":22111:36450  contract NFTMasterChef is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5ffe6146\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xcf35fddf\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xcf35fddf\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd209db8c\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf3239ab5\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc11490cc\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xcb3cba55\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x715018a6\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x83e32135\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x8c51793b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x5ffe6146\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x61c1b724\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x3df7aff3\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4ea2813c\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x4ea2813c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x56b4685f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5990c569\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x3df7aff3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x41441d3b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x454b0608\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x17caf6f1\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1d5fbd87\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x22f58541\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23cf3118\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ba33a58\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1058d281\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":27360:27455  function poolLength() external view returns (uint256) {\r... */\n    tag_3:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25201:25327  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r... */\n    tag_4:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":35144:35891  function leaveStaking(uint256 _amount) public {\r... */\n    tag_5:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_6:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_7:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25953:27221  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n    tag_8:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":27624:28184  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_9:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24347:24382  address public DDTMasterchefAddress */\n    tag_10:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":28662:28764  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_11:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":36338:36447  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_12:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":33264:34110  function enterStaking(uint256 _amount) public {\r... */\n    tag_13:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":32424:33211  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_14:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28887:29378  function migrate(uint256 _pid) public {\r... */\n    tag_15:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_16:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25615:25821  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n    tag_17:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":30769:31459  function updatePool(uint256 _pid) public {\r... */\n    tag_18:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":35970:36326  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_19:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":25335:25481  function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{\r... */\n    tag_20:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_21:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":27229:27352  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_22:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_23:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":30513:30693  function massUpdatePools() public {\r... */\n    tag_24:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28281:28586  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_26:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_27:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24310:24340  address public NFTStakeAddress */\n    tag_28:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_29:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25489:25607  function getPowerBalance(address account) public view returns(uint256) {\r... */\n    tag_30:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n    tag_31:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":29454:29598  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_32:\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_33:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      tag_155\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_156\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25829:25945  function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r... */\n    tag_34:\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_35:\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":34118:35092  function enterStakingCompund(uint256 _amount, address _account) public {\r... */\n    tag_36:\n      tag_165\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n    tag_165:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24391:24438  mapping(address => uint256) public powerBalance */\n    tag_37:\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":31529:32372  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_38:\n      tag_172\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n    tag_172:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_39:\n      tag_175\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n    tag_175:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":29663:30430  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_40:\n      tag_178\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":27360:27455  function poolLength() external view returns (uint256) {\r... */\n    tag_49:\n        /* \"contracts/NFTMasterChef.sol\":27405:27412  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27432:27440  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":27432:27447  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27425:27447  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27360:27455  function poolLength() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25201:25327  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r... */\n    tag_55:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_184\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_186\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/NFTMasterChef.sol\":25303:25319  _NFTStakeAddress */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25285:25300  NFTStakeAddress */\n      0x0a\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25285:25319  NFTStakeAddress = _NFTStakeAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25201:25327  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":35144:35891  function leaveStaking(uint256 _amount) public {\r... */\n    tag_59:\n        /* \"contracts/NFTMasterChef.sol\":35201:35222  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35225:35233  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":35234:35235  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35225:35236  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n    tag_192:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":35201:35236  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35247:35268  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35271:35279  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":35271:35282  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35280:35281  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":35271:35282  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35271:35294  userInfo[0][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35283:35293  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35271:35294  userInfo[0][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35247:35294  UserInfo storage user = userInfo[0][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35328:35335  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35313:35317  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35313:35324  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35313:35335  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":35305:35358  require(user.amount >= _amount, 'withdraw: not good') */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/NFTMasterChef.sol\":35369:35382  updatePool(0) */\n      tag_199\n        /* \"contracts/NFTMasterChef.sol\":35380:35381  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35369:35379  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":35369:35382  updatePool(0) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/NFTMasterChef.sol\":35393:35408  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35411:35480  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_200\n        /* \"contracts/NFTMasterChef.sol\":35464:35468  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35464:35479  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35411:35459  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_201\n        /* \"contracts/NFTMasterChef.sol\":35454:35458  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":35411:35449  user.amount.mul(pool.accPowerPerShare) */\n      tag_202\n        /* \"contracts/NFTMasterChef.sol\":35427:35431  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":35427:35448  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35411:35415  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":35411:35422  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35411:35426  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35411:35449  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"contracts/NFTMasterChef.sol\":35411:35453  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35411:35459  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/NFTMasterChef.sol\":35411:35463  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35411:35480  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/NFTMasterChef.sol\":35393:35480  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35504:35505  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35494:35501  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35494:35505  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":35491:35598  if(pending > 0) {\r... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":35549:35586  powerBalance[msg.sender].add(pending) */\n      tag_207\n        /* \"contracts/NFTMasterChef.sol\":35578:35585  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35549:35561  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":35549:35573  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35562:35572  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35549:35573  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35549:35577  powerBalance[msg.sender].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35549:35586  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/NFTMasterChef.sol\":35522:35534  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":35522:35546  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35535:35545  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35522:35546  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35522:35586  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35491:35598  if(pending > 0) {\r... */\n    tag_206:\n        /* \"contracts/NFTMasterChef.sol\":35621:35622  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35611:35618  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35611:35622  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":35608:35759  if(_amount > 0) {\r... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":35653:35677  user.amount.sub(_amount) */\n      tag_210\n        /* \"contracts/NFTMasterChef.sol\":35669:35676  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35653:35657  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":35653:35664  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35653:35668  user.amount.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35653:35677  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/NFTMasterChef.sol\":35639:35643  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35639:35650  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":35639:35677  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35692:35747  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_211\n        /* \"contracts/NFTMasterChef.sol\":35726:35736  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35739:35746  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35692:35696  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35692:35704  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":35692:35717  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35692:35747  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/NFTMasterChef.sol\":35608:35759  if(_amount > 0) {\r... */\n    tag_209:\n        /* \"contracts/NFTMasterChef.sol\":35787:35835  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_213\n        /* \"contracts/NFTMasterChef.sol\":35830:35834  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":35787:35825  user.amount.mul(pool.accPowerPerShare) */\n      tag_214\n        /* \"contracts/NFTMasterChef.sol\":35803:35807  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35803:35824  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35787:35791  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35787:35798  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35787:35802  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35787:35825  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTMasterChef.sol\":35787:35829  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35787:35835  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/NFTMasterChef.sol\":35769:35773  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35769:35784  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":35769:35835  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35872:35873  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35860:35870  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35851:35883  Withdraw(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":35875:35882  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":35851:35883  Withdraw(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":35190:35891  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35144:35891  function leaveStaking(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_62:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_66:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25953:27221  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n    tag_71:\n        /* \"contracts/NFTMasterChef.sol\":26024:26045  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26048:26056  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":26057:26061  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26048:26062  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_219\n      jumpi\n      tag_220\n      tag_194\n      jump\t// in\n    tag_220:\n    tag_219:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":26024:26062  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26073:26094  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26097:26105  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":26097:26111  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26106:26110  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26097:26111  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":26097:26123  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26112:26122  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26097:26123  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":26073:26123  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26134:26158  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26161:26165  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26161:26182  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26134:26182  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26193:26209  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26212:26216  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":26212:26224  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":26212:26234  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":26243:26247  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":26212:26249  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"contracts/NFTMasterChef.sol\":26193:26249  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26279:26283  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":26279:26299  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26264:26276  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":26264:26299  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26264:26316  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26315:26316  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26303:26311  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26303:26316  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":26264:26316  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_228:\n        /* \"contracts/NFTMasterChef.sol\":26260:26614  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_229\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26333:26351  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26354:26403  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_230\n        /* \"contracts/NFTMasterChef.sol\":26368:26372  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26368:26388  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26390:26402  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":26354:26367  getMultiplier */\n      tag_150\n        /* \"contracts/NFTMasterChef.sol\":26354:26403  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/NFTMasterChef.sol\":26333:26403  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26418:26437  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26440:26511  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_231\n        /* \"contracts/NFTMasterChef.sol\":26495:26510  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":26440:26490  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_232\n        /* \"contracts/NFTMasterChef.sol\":26474:26478  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26474:26489  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26440:26469  multiplier.mul(PowerPerBlock) */\n      tag_233\n        /* \"contracts/NFTMasterChef.sol\":26455:26468  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":26440:26450  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26440:26454  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26440:26469  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/NFTMasterChef.sol\":26440:26473  multiplier.mul(PowerPerBlock).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26440:26490  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/NFTMasterChef.sol\":26440:26494  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26440:26511  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/NFTMasterChef.sol\":26418:26511  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26545:26602  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":26566:26601  PowerReward.mul(1e12).div(lpSupply) */\n      tag_235\n        /* \"contracts/NFTMasterChef.sol\":26592:26600  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26566:26587  PowerReward.mul(1e12) */\n      tag_236\n        /* \"contracts/NFTMasterChef.sol\":26582:26586  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26566:26577  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26566:26581  PowerReward.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26566:26587  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/NFTMasterChef.sol\":26566:26591  PowerReward.mul(1e12).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26566:26601  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/NFTMasterChef.sol\":26545:26561  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26545:26565  accPowerPerShare.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26545:26602  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/NFTMasterChef.sol\":26526:26602  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26318:26614  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26260:26614  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n    tag_229:\n        /* \"contracts/NFTMasterChef.sol\":26624:26639  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26642:26706  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_237\n        /* \"contracts/NFTMasterChef.sol\":26690:26694  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26690:26705  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26642:26685  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_238\n        /* \"contracts/NFTMasterChef.sol\":26680:26684  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26642:26675  user.amount.mul(accPowerPerShare) */\n      tag_239\n        /* \"contracts/NFTMasterChef.sol\":26658:26674  accPowerPerShare */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26642:26646  user */\n      dup10\n        /* \"contracts/NFTMasterChef.sol\":26642:26653  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26642:26657  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26642:26675  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/NFTMasterChef.sol\":26642:26679  user.amount.mul(accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26642:26685  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/NFTMasterChef.sol\":26642:26689  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26642:26706  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/NFTMasterChef.sol\":26624:26706  uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26717:26737  NFTsInfo storage nft */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26740:26748  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":26749:26754  level */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26740:26755  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_241\n      tag_194\n      jump\t// in\n    tag_241:\n    tag_240:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":26717:26755  NFTsInfo storage nft = nftsInfo[level] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26766:26779  uint256 total */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26782:26819  pending.add(powerBalance[msg.sender]) */\n      tag_243\n        /* \"contracts/NFTMasterChef.sol\":26794:26806  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":26794:26818  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26807:26817  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26794:26818  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26782:26789  pending */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26782:26793  pending.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26782:26819  pending.add(powerBalance[msg.sender]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/NFTMasterChef.sol\":26766:26819  uint256 total = pending.add(powerBalance[msg.sender]) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26841:26844  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26841:26850  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26833:26838  total */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26833:26850  total > nft.power */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26830:27018  if(total > nft.power){\r... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26877:26878  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26869:26873  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26869:26878  _pid == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26866:26929  if(_pid == 0){\r... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26898:26913  leaveStaking(0) */\n      tag_246\n        /* \"contracts/NFTMasterChef.sol\":26911:26912  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26898:26910  leaveStaking */\n      tag_59\n        /* \"contracts/NFTMasterChef.sol\":26898:26913  leaveStaking(0) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/NFTMasterChef.sol\":26866:26929  if(_pid == 0){\r... */\n    tag_245:\n        /* \"contracts/NFTMasterChef.sol\":26954:26955  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26946:26950  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26946:26955  _pid != 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26943:27007  if(_pid != 0){\r... */\n      tag_247\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26975:26991  withdraw(_pid,0) */\n      tag_248\n        /* \"contracts/NFTMasterChef.sol\":26984:26988  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26989:26990  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26975:26983  withdraw */\n      tag_92\n        /* \"contracts/NFTMasterChef.sol\":26975:26991  withdraw(_pid,0) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/NFTMasterChef.sol\":26943:27007  if(_pid != 0){\r... */\n    tag_247:\n        /* \"contracts/NFTMasterChef.sol\":26830:27018  if(total > nft.power){\r... */\n    tag_244:\n        /* \"contracts/NFTMasterChef.sol\":27048:27060  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":27048:27072  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27061:27071  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27048:27072  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27036:27039  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":27036:27045  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27036:27072  nft.power < powerBalance[msg.sender] */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":27028:27096  require(nft.power < powerBalance[msg.sender], 'Power is not enough') */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/NFTMasterChef.sol\":27134:27173  powerBalance[msg.sender].sub(nft.power) */\n      tag_252\n        /* \"contracts/NFTMasterChef.sol\":27163:27166  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":27163:27172  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27134:27146  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":27134:27158  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27147:27157  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27134:27158  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27134:27162  powerBalance[msg.sender].sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27134:27173  powerBalance[msg.sender].sub(nft.power) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/NFTMasterChef.sol\":27107:27119  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":27107:27131  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27120:27130  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27107:27131  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":27107:27173  powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27184:27187  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":27184:27191  nft.NFT */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":27184:27201  nft.NFT.createNFT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17e5883c\n        /* \"contracts/NFTMasterChef.sol\":27202:27212  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27184:27213  nft.NFT.createNFT(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_253:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26013:27221  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25953:27221  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27624:28184  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_75:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_258\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_259\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_189\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"contracts/NFTMasterChef.sol\":27727:27738  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27723:27784  if (_withUpdate) {\r... */\n      iszero\n      tag_263\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27755:27772  massUpdatePools() */\n      tag_264\n        /* \"contracts/NFTMasterChef.sol\":27755:27770  massUpdatePools */\n      tag_124\n        /* \"contracts/NFTMasterChef.sol\":27755:27772  massUpdatePools() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/NFTMasterChef.sol\":27723:27784  if (_withUpdate) {\r... */\n    tag_263:\n        /* \"contracts/NFTMasterChef.sol\":27794:27817  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27835:27845  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27820:27832  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27820:27845  block.number > startBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":27820:27873  block.number > startBlock ? block.number : startBlock */\n      tag_265\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27863:27873  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27820:27873  block.number > startBlock ? block.number : startBlock */\n      jump(tag_266)\n    tag_265:\n        /* \"contracts/NFTMasterChef.sol\":27848:27860  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27820:27873  block.number > startBlock ? block.number : startBlock */\n    tag_266:\n        /* \"contracts/NFTMasterChef.sol\":27794:27873  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27902:27934  totalAllocPoint.add(_allocPoint) */\n      tag_267\n        /* \"contracts/NFTMasterChef.sol\":27922:27933  _allocPoint */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":27902:27917  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":27902:27921  totalAllocPoint.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27902:27934  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/NFTMasterChef.sol\":27884:27899  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":27884:27934  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27945:27953  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28010:28018  _lpToken */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":28049:28060  _allocPoint */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":28096:28111  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":28148:28149  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27945:28176  poolInfo.push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27712:28184  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27624:28184  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24347:24382  address public DDTMasterchefAddress */\n    tag_77:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28662:28764  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_83:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_270\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_271\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap1\n      tag_189\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_272:\n        /* \"contracts/NFTMasterChef.sol\":28747:28756  _migrator */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28736:28744  migrator */\n      0x05\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28736:28756  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28662:28764  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":36338:36447  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_86:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_276\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_277\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_277:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_189\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/NFTMasterChef.sol\":36430:36439  newAmount */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":36414:36427  PowerPerBlock */\n      0x03\n        /* \"contracts/NFTMasterChef.sol\":36414:36439  PowerPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36338:36447  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":33264:34110  function enterStaking(uint256 _amount) public {\r... */\n    tag_89:\n        /* \"contracts/NFTMasterChef.sol\":33339:33340  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33329:33336  _amount */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33329:33340  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33321:33359  require(_amount > 0, 'Amount is zero') */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"contracts/NFTMasterChef.sol\":33370:33391  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33394:33402  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":33403:33404  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33394:33405  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_285\n      jumpi\n      tag_286\n      tag_194\n      jump\t// in\n    tag_286:\n    tag_285:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":33370:33405  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33416:33437  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33440:33448  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":33440:33451  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33449:33450  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":33440:33451  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33440:33472  userInfo[0][address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33460:33470  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33440:33472  userInfo[0][address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33416:33472  UserInfo storage user = userInfo[0][address(msg.sender)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33493:33506  updatePool(0) */\n      tag_288\n        /* \"contracts/NFTMasterChef.sol\":33504:33505  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33493:33503  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":33493:33506  updatePool(0) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/NFTMasterChef.sol\":33535:33536  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33521:33525  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33521:33532  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33521:33536  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33517:33799  if (user.amount > 0) {\r... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33553:33568  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33571:33640  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_290\n        /* \"contracts/NFTMasterChef.sol\":33624:33628  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33624:33639  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33571:33619  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_291\n        /* \"contracts/NFTMasterChef.sol\":33614:33618  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33571:33609  user.amount.mul(pool.accPowerPerShare) */\n      tag_292\n        /* \"contracts/NFTMasterChef.sol\":33587:33591  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33587:33608  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33571:33575  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33571:33582  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33571:33586  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33571:33609  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"contracts/NFTMasterChef.sol\":33571:33613  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33571:33619  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/NFTMasterChef.sol\":33571:33623  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33571:33640  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/NFTMasterChef.sol\":33553:33640  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33668:33669  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33658:33665  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33658:33669  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33655:33788  if(pending > 0) {\r... */\n      iszero\n      tag_293\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33726:33772  powerBalance[address(msg.sender)].add(pending) */\n      tag_294\n        /* \"contracts/NFTMasterChef.sol\":33764:33771  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33726:33738  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":33726:33759  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33747:33757  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33726:33759  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33726:33763  powerBalance[address(msg.sender)].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33726:33772  powerBalance[address(msg.sender)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/NFTMasterChef.sol\":33690:33702  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":33690:33723  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33711:33721  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33690:33723  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33690:33772  powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33655:33788  if(pending > 0) {\r... */\n    tag_293:\n        /* \"contracts/NFTMasterChef.sol\":33538:33799  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33517:33799  if (user.amount > 0) {\r... */\n    tag_289:\n        /* \"contracts/NFTMasterChef.sol\":33822:33823  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33812:33819  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33812:33823  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33809:33979  if(_amount > 0) {\r... */\n      iszero\n      tag_295\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33840:33914  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_296\n        /* \"contracts/NFTMasterChef.sol\":33878:33888  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33899:33903  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":33906:33913  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33840:33844  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33840:33852  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33840:33869  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_297\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33840:33914  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"contracts/NFTMasterChef.sol\":33943:33967  user.amount.add(_amount) */\n      tag_298\n        /* \"contracts/NFTMasterChef.sol\":33959:33966  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33943:33947  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33943:33954  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33943:33958  user.amount.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33943:33967  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"contracts/NFTMasterChef.sol\":33929:33933  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33929:33940  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":33929:33967  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33809:33979  if(_amount > 0) {\r... */\n    tag_295:\n        /* \"contracts/NFTMasterChef.sol\":34007:34055  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_299\n        /* \"contracts/NFTMasterChef.sol\":34050:34054  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34007:34045  user.amount.mul(pool.accPowerPerShare) */\n      tag_300\n        /* \"contracts/NFTMasterChef.sol\":34023:34027  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34023:34044  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34007:34011  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34007:34018  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34007:34022  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34007:34045  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"contracts/NFTMasterChef.sol\":34007:34049  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34007:34055  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"contracts/NFTMasterChef.sol\":33989:33993  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33989:34004  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":33989:34055  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34091:34092  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34079:34089  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34071:34102  Deposit(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":34094:34101  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34071:34102  Deposit(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":33310:34110  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33264:34110  function enterStaking(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":32424:33211  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_92:\n        /* \"contracts/NFTMasterChef.sol\":32510:32511  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32502:32506  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32502:32511  _pid != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":32493:32543  require (_pid != 0, 'withdraw Power by unstaking') */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"contracts/NFTMasterChef.sol\":32556:32577  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32580:32588  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":32589:32593  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32580:32594  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_307\n      tag_194\n      jump\t// in\n    tag_307:\n    tag_306:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":32556:32594  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32605:32626  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32629:32637  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":32629:32643  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32638:32642  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32629:32643  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32629:32655  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32644:32654  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32629:32655  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32605:32655  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32689:32696  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32674:32678  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32674:32685  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32674:32696  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":32666:32719  require(user.amount >= _amount, 'withdraw: not good') */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap1\n      tag_198\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"contracts/NFTMasterChef.sol\":32730:32746  updatePool(_pid) */\n      tag_311\n        /* \"contracts/NFTMasterChef.sol\":32741:32745  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32730:32740  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":32730:32746  updatePool(_pid) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/NFTMasterChef.sol\":32757:32772  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32775:32844  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_312\n        /* \"contracts/NFTMasterChef.sol\":32828:32832  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32828:32843  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32775:32823  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_313\n        /* \"contracts/NFTMasterChef.sol\":32818:32822  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32775:32813  user.amount.mul(pool.accPowerPerShare) */\n      tag_314\n        /* \"contracts/NFTMasterChef.sol\":32791:32795  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32791:32812  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32775:32779  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32775:32786  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32775:32790  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32775:32813  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/NFTMasterChef.sol\":32775:32817  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32775:32823  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/NFTMasterChef.sol\":32775:32827  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32775:32844  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_312:\n        /* \"contracts/NFTMasterChef.sol\":32757:32844  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32868:32869  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32858:32865  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32858:32869  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":32855:32961  if(pending > 0){\r... */\n      iszero\n      tag_315\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32912:32949  powerBalance[msg.sender].add(pending) */\n      tag_316\n        /* \"contracts/NFTMasterChef.sol\":32941:32948  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32912:32924  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32912:32936  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32925:32935  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32912:32936  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32912:32940  powerBalance[msg.sender].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32912:32949  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_316:\n        /* \"contracts/NFTMasterChef.sol\":32885:32897  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32885:32909  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32898:32908  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32885:32909  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32885:32949  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32855:32961  if(pending > 0){\r... */\n    tag_315:\n        /* \"contracts/NFTMasterChef.sol\":32985:33009  user.amount.sub(_amount) */\n      tag_317\n        /* \"contracts/NFTMasterChef.sol\":33001:33008  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32985:32989  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32985:32996  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32985:33000  user.amount.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32985:33009  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/NFTMasterChef.sol\":32971:32975  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32971:32982  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":32971:33009  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33038:33086  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_318\n        /* \"contracts/NFTMasterChef.sol\":33081:33085  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33038:33076  user.amount.mul(pool.accPowerPerShare) */\n      tag_319\n        /* \"contracts/NFTMasterChef.sol\":33054:33058  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33054:33075  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33038:33042  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33038:33049  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33038:33053  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33038:33076  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_319:\n        /* \"contracts/NFTMasterChef.sol\":33038:33080  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33038:33086  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/NFTMasterChef.sol\":33020:33024  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33020:33035  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":33020:33086  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33097:33152  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_320\n        /* \"contracts/NFTMasterChef.sol\":33131:33141  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33144:33151  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33097:33101  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33097:33109  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33097:33122  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33097:33152  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"contracts/NFTMasterChef.sol\":33189:33193  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33177:33187  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33168:33203  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":33195:33202  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":33168:33203  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":32480:33211  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32424:33211  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28887:29378  function migrate(uint256 _pid) public {\r... */\n    tag_95:\n        /* \"contracts/NFTMasterChef.sol\":28973:28974  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28944:28975  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28952:28960  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28944:28975  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":28936:29000  require(address(migrator) != address(0), 'migrate: no migrator') */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/NFTMasterChef.sol\":29011:29032  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29035:29043  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":29044:29048  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29035:29049  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_326\n      jumpi\n      tag_327\n      tag_194\n      jump\t// in\n    tag_327:\n    tag_326:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":29011:29049  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29060:29074  IERC20 lpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29077:29081  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":29077:29089  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29060:29089  IERC20 lpToken = pool.lpToken */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29100:29111  uint256 bal */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29114:29121  lpToken */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":29114:29131  lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29140:29144  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29114:29146  lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_329:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_333\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_333:\n        /* \"contracts/NFTMasterChef.sol\":29100:29146  uint256 bal = lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29157:29200  lpToken.safeApprove(address(migrator), bal) */\n      tag_334\n        /* \"contracts/NFTMasterChef.sol\":29185:29193  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29196:29199  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29157:29164  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29157:29176  lpToken.safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_335\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29157:29200  lpToken.safeApprove(address(migrator), bal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"contracts/NFTMasterChef.sol\":29211:29228  IERC20 newLpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29231:29239  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29231:29247  migrator.migrate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce5494bb\n        /* \"contracts/NFTMasterChef.sol\":29248:29255  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29231:29256  migrator.migrate(lpToken) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_336:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_337:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_339\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_339:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_340\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"contracts/NFTMasterChef.sol\":29211:29256  IERC20 newLpToken = migrator.migrate(lpToken) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29282:29292  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29282:29302  newLpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29311:29315  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29282:29317  newLpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_342:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_343:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_345\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_345:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_346\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_346:\n        /* \"contracts/NFTMasterChef.sol\":29275:29278  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29275:29317  bal == newLpToken.balanceOf(address(this)) */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":29267:29334  require(bal == newLpToken.balanceOf(address(this)), 'migrate: bad') */\n      tag_347\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_347:\n        /* \"contracts/NFTMasterChef.sol\":29360:29370  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29345:29349  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29345:29357  pool.lpToken */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29345:29370  pool.lpToken = newLpToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28925:29378  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28887:29378  function migrate(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_97:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25615:25821  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n    tag_102:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_351\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_351:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_352\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_352:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_189\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"contracts/NFTMasterChef.sol\":25689:25697  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25717:25802  NFTsInfo({\r... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25750:25754  _NFT */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25717:25802  NFTsInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":25780:25786  _power */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25717:25802  NFTsInfo({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25689:25813  nftsInfo.push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25615:25821  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30769:31459  function updatePool(uint256 _pid) public {\r... */\n    tag_105:\n        /* \"contracts/NFTMasterChef.sol\":30821:30842  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30845:30853  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30854:30858  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30845:30859  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_358\n      jumpi\n      tag_359\n      tag_194\n      jump\t// in\n    tag_359:\n    tag_358:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":30821:30859  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30890:30894  pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":30890:30910  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30874:30886  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30874:30910  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30870:30945  if (block.number <= pool.lastRewardBlock) {\r... */\n      tag_361\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30927:30934  return; */\n      pop\n      jump(tag_357)\n        /* \"contracts/NFTMasterChef.sol\":30870:30945  if (block.number <= pool.lastRewardBlock) {\r... */\n    tag_361:\n        /* \"contracts/NFTMasterChef.sol\":30955:30971  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30974:30978  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30974:30986  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":30974:30996  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":31005:31009  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":30974:31011  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_362:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_363\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_363:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_365\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_365:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_366\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_366:\n        /* \"contracts/NFTMasterChef.sol\":30955:31011  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31038:31039  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31026:31034  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31026:31039  lpSupply <= 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31022:31124  if (lpSupply <= 0) {\r... */\n      tag_367\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31079:31091  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31056:31060  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31056:31076  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":31056:31091  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31106:31113  return; */\n      pop\n      pop\n      jump(tag_357)\n        /* \"contracts/NFTMasterChef.sol\":31022:31124  if (lpSupply <= 0) {\r... */\n    tag_367:\n        /* \"contracts/NFTMasterChef.sol\":31134:31152  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31155:31204  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_368\n        /* \"contracts/NFTMasterChef.sol\":31169:31173  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31169:31189  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31191:31203  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31155:31168  getMultiplier */\n      tag_150\n        /* \"contracts/NFTMasterChef.sol\":31155:31204  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_368:\n        /* \"contracts/NFTMasterChef.sol\":31134:31204  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31215:31234  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31237:31308  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_369\n        /* \"contracts/NFTMasterChef.sol\":31292:31307  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":31237:31287  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_370\n        /* \"contracts/NFTMasterChef.sol\":31271:31275  pool */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":31271:31286  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31237:31266  multiplier.mul(PowerPerBlock) */\n      tag_371\n        /* \"contracts/NFTMasterChef.sol\":31252:31265  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":31237:31247  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31237:31251  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31237:31266  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_371:\n        /* \"contracts/NFTMasterChef.sol\":31237:31270  multiplier.mul(PowerPerBlock).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31237:31287  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_370:\n        /* \"contracts/NFTMasterChef.sol\":31237:31291  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31237:31308  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_369:\n        /* \"contracts/NFTMasterChef.sol\":31215:31308  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31343:31405  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_372\n        /* \"contracts/NFTMasterChef.sol\":31369:31404  PowerReward.mul(1e12).div(lpSupply) */\n      tag_373\n        /* \"contracts/NFTMasterChef.sol\":31395:31403  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31369:31390  PowerReward.mul(1e12) */\n      tag_374\n        /* \"contracts/NFTMasterChef.sol\":31385:31389  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31369:31380  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31369:31384  PowerReward.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31369:31390  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_374:\n        /* \"contracts/NFTMasterChef.sol\":31369:31394  PowerReward.mul(1e12).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31369:31404  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_373:\n        /* \"contracts/NFTMasterChef.sol\":31343:31347  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31343:31364  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31343:31368  pool.accPowerPerShare.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31343:31405  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_372:\n        /* \"contracts/NFTMasterChef.sol\":31319:31323  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31319:31340  pool.accPowerPerShare */\n      0x03\n      add\n        /* \"contracts/NFTMasterChef.sol\":31319:31405  pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31439:31451  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31416:31420  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31416:31436  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":31416:31451  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30810:31459  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30769:31459  function updatePool(uint256 _pid) public {\r... */\n    tag_357:\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":35970:36326  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_108:\n        /* \"contracts/NFTMasterChef.sol\":36029:36050  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36053:36061  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":36062:36066  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":36053:36067  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_376\n      jumpi\n      tag_377\n      tag_194\n      jump\t// in\n    tag_377:\n    tag_376:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":36029:36067  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36078:36099  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36102:36110  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":36102:36116  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36111:36115  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":36102:36116  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":36102:36128  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36117:36127  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":36102:36128  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":36078:36128  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36139:36198  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_379\n        /* \"contracts/NFTMasterChef.sol\":36173:36183  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":36186:36190  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":36186:36197  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":36139:36143  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":36139:36151  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":36139:36164  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":36139:36198  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_379:\n        /* \"contracts/NFTMasterChef.sol\":36244:36248  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":36232:36242  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":36214:36262  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/NFTMasterChef.sol\":36250:36254  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":36250:36261  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":36214:36262  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_380\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":36287:36288  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36273:36277  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":36273:36284  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":36273:36288  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36317:36318  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36299:36303  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":36299:36314  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":36299:36318  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36018:36326  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35970:36326  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25335:25481  function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{\r... */\n    tag_111:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_382\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_382:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_383\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_383:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_385\n      swap1\n      tag_189\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_384:\n        /* \"contracts/NFTMasterChef.sol\":25452:25473  _DDTMasterchefAddress */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25429:25449  DDTMasterchefAddress */\n      0x0b\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25429:25473  DDTMasterchefAddress = _DDTMasterchefAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25335:25481  function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_113:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27229:27352  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_117:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_388\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_388:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_389\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_389:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap1\n      tag_189\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_390:\n        /* \"contracts/NFTMasterChef.sol\":27328:27344  multiplierNumber */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27309:27325  BONUS_MULTIPLIER */\n      0x04\n        /* \"contracts/NFTMasterChef.sol\":27309:27344  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27229:27352  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_120:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_393\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_393:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30513:30693  function massUpdatePools() public {\r... */\n    tag_124:\n        /* \"contracts/NFTMasterChef.sol\":30558:30572  uint256 length */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30575:30583  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30575:30590  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30558:30590  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30606:30617  uint256 pid */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30601:30686  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_396:\n        /* \"contracts/NFTMasterChef.sol\":30629:30635  length */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30623:30626  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30623:30635  pid < length */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":30601:30686  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_397\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30659:30674  updatePool(pid) */\n      tag_399\n        /* \"contracts/NFTMasterChef.sol\":30670:30673  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30659:30669  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":30659:30674  updatePool(pid) */\n      jump\t// in\n    tag_399:\n        /* \"contracts/NFTMasterChef.sol\":30637:30642  ++pid */\n      dup1\n      tag_400\n      swap1\n      tag_401\n      jump\t// in\n    tag_400:\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30601:30686  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_396)\n    tag_397:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30547:30693  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30513:30693  function massUpdatePools() public {\r... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28281:28586  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_128:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_403\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_403:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_404\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_404:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap1\n      tag_189\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_405:\n        /* \"contracts/NFTMasterChef.sol\":28380:28391  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28376:28437  if (_withUpdate) {\r... */\n      iszero\n      tag_408\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":28408:28425  massUpdatePools() */\n      tag_409\n        /* \"contracts/NFTMasterChef.sol\":28408:28423  massUpdatePools */\n      tag_124\n        /* \"contracts/NFTMasterChef.sol\":28408:28425  massUpdatePools() */\n      jump\t// in\n    tag_409:\n        /* \"contracts/NFTMasterChef.sol\":28376:28437  if (_withUpdate) {\r... */\n    tag_408:\n        /* \"contracts/NFTMasterChef.sol\":28465:28528  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_410\n        /* \"contracts/NFTMasterChef.sol\":28516:28527  _allocPoint */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28465:28511  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_411\n        /* \"contracts/NFTMasterChef.sol\":28485:28493  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28494:28498  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":28485:28499  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_412\n      jumpi\n      tag_413\n      tag_194\n      jump\t// in\n    tag_413:\n    tag_412:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28485:28510  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":28465:28480  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":28465:28484  totalAllocPoint.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28465:28511  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_411:\n        /* \"contracts/NFTMasterChef.sol\":28465:28515  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28465:28528  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_410:\n        /* \"contracts/NFTMasterChef.sol\":28447:28462  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":28447:28528  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28567:28578  _allocPoint */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28539:28547  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28548:28552  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28539:28553  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_415\n      jumpi\n      tag_416\n      tag_194\n      jump\t// in\n    tag_416:\n    tag_415:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28539:28564  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":28539:28578  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28281:28586  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_130:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_419\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_419:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_420\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_420:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_422\n      swap1\n      tag_189\n      jump\t// in\n    tag_422:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_421:\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      tag_424\n        /* \"contracts/NFTMasterChef.sol\":20848:20849  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20821:20839  _transferOwnership */\n      tag_425\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_424:\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_132:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24310:24340  address public NFTStakeAddress */\n    tag_136:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_139:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25489:25607  function getPowerBalance(address account) public view returns(uint256) {\r... */\n    tag_143:\n        /* \"contracts/NFTMasterChef.sol\":25551:25558  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25578:25590  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":25578:25599  powerBalance[account] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25591:25598  account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25578:25599  powerBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25571:25599  return powerBalance[account] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25489:25607  function getPowerBalance(address account) public view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n    tag_146:\n        /* \"contracts/NFTMasterChef.sol\":20151:20158  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20178:20184  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20171:20184  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29454:29598  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_150:\n        /* \"contracts/NFTMasterChef.sol\":29526:29533  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29554:29590  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_429\n        /* \"contracts/NFTMasterChef.sol\":29573:29589  BONUS_MULTIPLIER */\n      sload(0x04)\n        /* \"contracts/NFTMasterChef.sol\":29554:29568  _to.sub(_from) */\n      tag_430\n        /* \"contracts/NFTMasterChef.sol\":29562:29567  _from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29554:29557  _to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29554:29561  _to.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29554:29568  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_430:\n        /* \"contracts/NFTMasterChef.sol\":29554:29572  _to.sub(_from).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29554:29590  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_429:\n        /* \"contracts/NFTMasterChef.sol\":29547:29590  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29454:29598  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_155:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25829:25945  function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r... */\n    tag_160:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_432\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_432:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_433\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_433:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_434\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_435\n      swap1\n      tag_189\n      jump\t// in\n    tag_435:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_434:\n        /* \"contracts/NFTMasterChef.sol\":25931:25937  _power */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25907:25915  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25916:25921  level */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25907:25922  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_437\n      jumpi\n      tag_438\n      tag_194\n      jump\t// in\n    tag_438:\n    tag_437:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":25907:25928  nftsInfo[level].power */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":25907:25937  nftsInfo[level].power = _power */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25829:25945  function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_162:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34118:35092  function enterStakingCompund(uint256 _amount, address _account) public {\r... */\n    tag_167:\n        /* \"contracts/NFTMasterChef.sol\":34218:34219  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34208:34215  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34208:34219  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34200:34238  require(_amount > 0, 'Amount is zero') */\n      tag_441\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_442\n      swap1\n      tag_284\n      jump\t// in\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_441:\n        /* \"contracts/NFTMasterChef.sol\":34271:34286  NFTStakeAddress */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34257:34286  msg.sender == NFTStakeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34257:34267  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34257:34286  msg.sender == NFTStakeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":34257:34324  msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress */\n      dup1\n      tag_443\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34304:34324  DDTMasterchefAddress */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34290:34324  msg.sender == DDTMasterchefAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34290:34300  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34290:34324  msg.sender == DDTMasterchefAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":34257:34324  msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress */\n    tag_443:\n        /* \"contracts/NFTMasterChef.sol\":34249:34349  require(msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress, 'Caller is not family') */\n      tag_444\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_445\n      swap1\n      tag_446\n      jump\t// in\n    tag_445:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_444:\n        /* \"contracts/NFTMasterChef.sol\":34360:34381  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34384:34392  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":34393:34394  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34384:34395  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_447\n      jumpi\n      tag_448\n      tag_194\n      jump\t// in\n    tag_448:\n    tag_447:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":34360:34395  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34406:34427  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34430:34438  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":34430:34441  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34439:34440  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":34430:34441  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34430:34460  userInfo[0][address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34450:34458  _account */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34430:34460  userInfo[0][address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34406:34460  UserInfo storage user = userInfo[0][address(_account)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34481:34494  updatePool(0) */\n      tag_450\n        /* \"contracts/NFTMasterChef.sol\":34492:34493  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34481:34491  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":34481:34494  updatePool(0) */\n      jump\t// in\n    tag_450:\n        /* \"contracts/NFTMasterChef.sol\":34523:34524  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34509:34513  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34509:34520  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34509:34524  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34505:34783  if (user.amount > 0) {\r... */\n      iszero\n      tag_451\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34541:34556  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34559:34628  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_452\n        /* \"contracts/NFTMasterChef.sol\":34612:34616  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34612:34627  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34559:34607  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_453\n        /* \"contracts/NFTMasterChef.sol\":34602:34606  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34559:34597  user.amount.mul(pool.accPowerPerShare) */\n      tag_454\n        /* \"contracts/NFTMasterChef.sol\":34575:34579  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34575:34596  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34559:34563  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34559:34570  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34559:34574  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34559:34597  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_454:\n        /* \"contracts/NFTMasterChef.sol\":34559:34601  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34559:34607  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_453:\n        /* \"contracts/NFTMasterChef.sol\":34559:34611  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34559:34628  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_452:\n        /* \"contracts/NFTMasterChef.sol\":34541:34628  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34656:34657  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34646:34653  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34646:34657  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34643:34772  if(pending > 0) {\r... */\n      iszero\n      tag_455\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34712:34756  powerBalance[address(_account)].add(pending) */\n      tag_456\n        /* \"contracts/NFTMasterChef.sol\":34748:34755  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34712:34724  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":34712:34743  powerBalance[address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34733:34741  _account */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34712:34743  powerBalance[address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34712:34747  powerBalance[address(_account)].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34712:34756  powerBalance[address(_account)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_456:\n        /* \"contracts/NFTMasterChef.sol\":34678:34690  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":34678:34709  powerBalance[address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34699:34707  _account */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34678:34709  powerBalance[address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34678:34756  powerBalance[address(_account)] = powerBalance[address(_account)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34643:34772  if(pending > 0) {\r... */\n    tag_455:\n        /* \"contracts/NFTMasterChef.sol\":34526:34783  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34505:34783  if (user.amount > 0) {\r... */\n    tag_451:\n        /* \"contracts/NFTMasterChef.sol\":34806:34807  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34796:34803  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34796:34807  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34793:34963  if(_amount > 0) {\r... */\n      iszero\n      tag_457\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34824:34898  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_458\n        /* \"contracts/NFTMasterChef.sol\":34862:34872  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34883:34887  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":34890:34897  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34824:34828  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34824:34836  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34824:34853  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_297\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34824:34898  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_458:\n        /* \"contracts/NFTMasterChef.sol\":34927:34951  user.amount.add(_amount) */\n      tag_459\n        /* \"contracts/NFTMasterChef.sol\":34943:34950  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34927:34931  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34927:34938  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34927:34942  user.amount.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34927:34951  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_459:\n        /* \"contracts/NFTMasterChef.sol\":34913:34917  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34913:34924  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":34913:34951  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34793:34963  if(_amount > 0) {\r... */\n    tag_457:\n        /* \"contracts/NFTMasterChef.sol\":34991:35039  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_460\n        /* \"contracts/NFTMasterChef.sol\":35034:35038  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34991:35029  user.amount.mul(pool.accPowerPerShare) */\n      tag_461\n        /* \"contracts/NFTMasterChef.sol\":35007:35011  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35007:35028  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34991:34995  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34991:35002  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34991:35006  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34991:35029  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_461:\n        /* \"contracts/NFTMasterChef.sol\":34991:35033  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34991:35039  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_460:\n        /* \"contracts/NFTMasterChef.sol\":34973:34977  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34973:34988  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":34973:35039  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35073:35074  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35063:35071  _account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":35055:35084  Deposit(_account, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":35076:35083  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":35055:35084  Deposit(_account, 0, _amount) */\n      mload(0x40)\n      tag_462\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_462:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":34189:35092  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34118:35092  function enterStakingCompund(uint256 _amount, address _account) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24391:24438  mapping(address => uint256) public powerBalance */\n    tag_170:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":31529:32372  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_174:\n        /* \"contracts/NFTMasterChef.sol\":31612:31613  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31604:31608  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31604:31613  _pid != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":31595:31642  require (_pid != 0, 'deposit Power by staking') */\n      tag_464\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_465\n      swap1\n      tag_466\n      jump\t// in\n    tag_465:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_464:\n        /* \"contracts/NFTMasterChef.sol\":31671:31672  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31661:31668  _amount */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31661:31672  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31653:31691  require(_amount > 0, 'Amount is zero') */\n      tag_467\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_468\n      swap1\n      tag_284\n      jump\t// in\n    tag_468:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_467:\n        /* \"contracts/NFTMasterChef.sol\":31704:31725  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31728:31736  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":31737:31741  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31728:31742  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_469\n      jumpi\n      tag_470\n      tag_194\n      jump\t// in\n    tag_470:\n    tag_469:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":31704:31742  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31753:31774  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31777:31785  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":31777:31791  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31786:31790  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31777:31791  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31777:31803  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31792:31802  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31777:31803  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31753:31803  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31814:31830  updatePool(_pid) */\n      tag_472\n        /* \"contracts/NFTMasterChef.sol\":31825:31829  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31814:31824  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":31814:31830  updatePool(_pid) */\n      jump\t// in\n    tag_472:\n        /* \"contracts/NFTMasterChef.sol\":31859:31860  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31845:31849  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31845:31856  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31845:31860  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31841:32104  if (user.amount > 0) {\r... */\n      iszero\n      tag_473\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31877:31892  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31895:31964  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_474\n        /* \"contracts/NFTMasterChef.sol\":31948:31952  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31948:31963  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31895:31943  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_475\n        /* \"contracts/NFTMasterChef.sol\":31938:31942  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31895:31933  user.amount.mul(pool.accPowerPerShare) */\n      tag_476\n        /* \"contracts/NFTMasterChef.sol\":31911:31915  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31911:31932  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31895:31899  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31895:31906  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31895:31910  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31895:31933  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_476:\n        /* \"contracts/NFTMasterChef.sol\":31895:31937  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31895:31943  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_475:\n        /* \"contracts/NFTMasterChef.sol\":31895:31947  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31895:31964  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_474:\n        /* \"contracts/NFTMasterChef.sol\":31877:31964  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31992:31993  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31982:31989  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31982:31993  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31979:32093  if(pending > 0){\r... */\n      iszero\n      tag_477\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32040:32077  powerBalance[msg.sender].add(pending) */\n      tag_478\n        /* \"contracts/NFTMasterChef.sol\":32069:32076  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32040:32052  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32040:32064  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32053:32063  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32040:32064  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32040:32068  powerBalance[msg.sender].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32040:32077  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_478:\n        /* \"contracts/NFTMasterChef.sol\":32013:32025  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32013:32037  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32026:32036  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32013:32037  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32013:32077  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31979:32093  if(pending > 0){\r... */\n    tag_477:\n        /* \"contracts/NFTMasterChef.sol\":31862:32104  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31841:32104  if (user.amount > 0) {\r... */\n    tag_473:\n        /* \"contracts/NFTMasterChef.sol\":32114:32188  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_479\n        /* \"contracts/NFTMasterChef.sol\":32152:32162  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32173:32177  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":32180:32187  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32114:32118  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32114:32126  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":32114:32143  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_297\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32114:32188  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_479:\n        /* \"contracts/NFTMasterChef.sol\":32213:32237  user.amount.add(_amount) */\n      tag_480\n        /* \"contracts/NFTMasterChef.sol\":32229:32236  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32213:32217  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32213:32224  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32213:32228  user.amount.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32213:32237  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_480:\n        /* \"contracts/NFTMasterChef.sol\":32199:32203  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32199:32210  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":32199:32237  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32266:32314  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_481\n        /* \"contracts/NFTMasterChef.sol\":32309:32313  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32266:32304  user.amount.mul(pool.accPowerPerShare) */\n      tag_482\n        /* \"contracts/NFTMasterChef.sol\":32282:32286  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32282:32303  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32266:32270  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32266:32277  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32266:32281  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32266:32304  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_482:\n        /* \"contracts/NFTMasterChef.sol\":32266:32308  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32266:32314  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_481:\n        /* \"contracts/NFTMasterChef.sol\":32248:32252  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32248:32263  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":32248:32314  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32350:32354  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32338:32348  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32330:32364  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":32356:32363  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32330:32364  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_483\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_483:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":31584:32372  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31529:32372  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_177:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_485\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_485:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_486\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_486:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_487\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_488\n      swap1\n      tag_189\n      jump\t// in\n    tag_488:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_487:\n        /* \"contracts/NFTMasterChef.sol\":21123:21124  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21103:21111  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":21095:21168  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_490\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_491\n      swap1\n      tag_492\n      jump\t// in\n    tag_491:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_490:\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      tag_493\n        /* \"contracts/NFTMasterChef.sol\":21198:21206  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21179:21197  _transferOwnership */\n      tag_425\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_493:\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29663:30430  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_180:\n        /* \"contracts/NFTMasterChef.sol\":29737:29744  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29756:29777  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29780:29788  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":29789:29793  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29780:29794  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_495\n      jumpi\n      tag_496\n      tag_194\n      jump\t// in\n    tag_496:\n    tag_495:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":29756:29794  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29805:29826  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29829:29837  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":29829:29843  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29838:29842  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":29829:29843  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29829:29850  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29844:29849  _user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29829:29850  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29805:29850  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29861:29885  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29888:29892  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29888:29909  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29861:29909  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29920:29936  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29939:29943  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29939:29951  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29939:29961  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29970:29974  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29939:29976  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_498\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_498:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_499\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_499:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_501\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_501:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_502\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_502:\n        /* \"contracts/NFTMasterChef.sol\":29920:29976  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30006:30010  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30006:30026  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29991:30003  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29991:30026  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":29991:30043  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_503\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30042:30043  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30030:30038  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30030:30043  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":29991:30043  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_503:\n        /* \"contracts/NFTMasterChef.sol\":29987:30341  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_504\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30060:30078  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30081:30130  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_505\n        /* \"contracts/NFTMasterChef.sol\":30095:30099  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30095:30115  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30117:30129  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30081:30094  getMultiplier */\n      tag_150\n        /* \"contracts/NFTMasterChef.sol\":30081:30130  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_505:\n        /* \"contracts/NFTMasterChef.sol\":30060:30130  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30145:30164  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30167:30238  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_506\n        /* \"contracts/NFTMasterChef.sol\":30222:30237  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":30167:30217  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_507\n        /* \"contracts/NFTMasterChef.sol\":30201:30205  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":30201:30216  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30167:30196  multiplier.mul(PowerPerBlock) */\n      tag_508\n        /* \"contracts/NFTMasterChef.sol\":30182:30195  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":30167:30177  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":30167:30181  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30167:30196  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_508:\n        /* \"contracts/NFTMasterChef.sol\":30167:30200  multiplier.mul(PowerPerBlock).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30167:30217  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_507:\n        /* \"contracts/NFTMasterChef.sol\":30167:30221  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30167:30238  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_506:\n        /* \"contracts/NFTMasterChef.sol\":30145:30238  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30272:30329  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_509\n        /* \"contracts/NFTMasterChef.sol\":30293:30328  PowerReward.mul(1e12).div(lpSupply) */\n      tag_510\n        /* \"contracts/NFTMasterChef.sol\":30319:30327  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30293:30314  PowerReward.mul(1e12) */\n      tag_511\n        /* \"contracts/NFTMasterChef.sol\":30309:30313  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30293:30304  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30293:30308  PowerReward.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30293:30314  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_511:\n        /* \"contracts/NFTMasterChef.sol\":30293:30318  PowerReward.mul(1e12).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30293:30328  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_510:\n        /* \"contracts/NFTMasterChef.sol\":30272:30288  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30272:30292  accPowerPerShare.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30272:30329  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_509:\n        /* \"contracts/NFTMasterChef.sol\":30253:30329  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30045:30341  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29987:30341  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n    tag_504:\n        /* \"contracts/NFTMasterChef.sol\":30358:30422  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_512\n        /* \"contracts/NFTMasterChef.sol\":30406:30410  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30406:30421  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30358:30401  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_513\n        /* \"contracts/NFTMasterChef.sol\":30396:30400  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30358:30391  user.amount.mul(accPowerPerShare) */\n      tag_514\n        /* \"contracts/NFTMasterChef.sol\":30374:30390  accPowerPerShare */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":30358:30362  user */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":30358:30369  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30358:30373  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30358:30391  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_514:\n        /* \"contracts/NFTMasterChef.sol\":30358:30395  user.amount.mul(accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30358:30401  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_513:\n        /* \"contracts/NFTMasterChef.sol\":30358:30405  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30358:30422  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_512:\n        /* \"contracts/NFTMasterChef.sol\":30351:30422  return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29663:30430  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_185:\n        /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_203:\n        /* \"contracts/NFTMasterChef.sol\":1815:1822  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2065:2066  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2060:2061  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2060:2066  a == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {\r... */\n      iszero\n      tag_517\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":2090:2091  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2083:2091  return 0 */\n      swap1\n      pop\n      jump(tag_516)\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {\r... */\n    tag_517:\n        /* \"contracts/NFTMasterChef.sol\":2115:2124  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2131:2132  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2127:2128  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2127:2132  a * b */\n      tag_518\n      swap2\n      swap1\n      tag_519\n      jump\t// in\n    tag_518:\n        /* \"contracts/NFTMasterChef.sol\":2115:2132  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2160:2161  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2155:2156  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2151:2152  c */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2151:2156  c / a */\n      tag_520\n      swap2\n      swap1\n      tag_521\n      jump\t// in\n    tag_520:\n        /* \"contracts/NFTMasterChef.sol\":2151:2161  c / a == b */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2143:2199  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_522\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_523\n      swap1\n      tag_524\n      jump\t// in\n    tag_523:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_522:\n        /* \"contracts/NFTMasterChef.sol\":2219:2220  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2212:2220  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_516:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_204:\n        /* \"contracts/NFTMasterChef.sol\":2754:2761  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      tag_526\n        /* \"contracts/NFTMasterChef.sol\":2785:2786  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2788:2789  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2781:2784  div */\n      tag_527\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_526:\n        /* \"contracts/NFTMasterChef.sol\":2774:2820  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_205:\n        /* \"contracts/NFTMasterChef.sol\":899:906  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_529\n        /* \"contracts/NFTMasterChef.sol\":930:931  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":933:934  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":926:929  sub */\n      tag_530\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_529:\n        /* \"contracts/NFTMasterChef.sol\":919:969  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_208:\n        /* \"contracts/NFTMasterChef.sol\":443:450  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":463:472  uint256 c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":479:480  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":475:476  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":475:480  a + b */\n      tag_532\n      swap2\n      swap1\n      tag_533\n      jump\t// in\n    tag_532:\n        /* \"contracts/NFTMasterChef.sol\":463:480  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":504:505  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":499:500  c */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":499:505  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":491:537  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_534\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_535\n      swap1\n      tag_536\n      jump\t// in\n    tag_535:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_534:\n        /* \"contracts/NFTMasterChef.sol\":557:558  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":550:558  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(\r... */\n    tag_212:\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_538\n        /* \"contracts/NFTMasterChef.sol\":16287:16292  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":16317:16340  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/NFTMasterChef.sol\":16342:16344  to */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16346:16351  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16294:16352  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_539\n      swap3\n      swap2\n      swap1\n      tag_540\n      jump\t// in\n    tag_539:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16267:16286  _callOptionalReturn */\n      tag_541\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_538:\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(\r... */\n    tag_297:\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_543\n        /* \"contracts/NFTMasterChef.sol\":16533:16538  token */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16563:16590  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/NFTMasterChef.sol\":16592:16596  from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16598:16600  to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16602:16607  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16540:16608  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_544\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_545\n      jump\t// in\n    tag_544:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16513:16532  _callOptionalReturn */\n      tag_541\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_543:\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(\r... */\n    tag_335:\n        /* \"contracts/NFTMasterChef.sol\":17259:17260  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17250:17255  value */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":17250:17260  value == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_547\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17309:17310  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17266:17271  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17266:17281  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/NFTMasterChef.sol\":17290:17294  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":17297:17304  spender */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":17266:17305  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_548\n      swap3\n      swap2\n      swap1\n      tag_549\n      jump\t// in\n    tag_548:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_550\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_550:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_552\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_552:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_553\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_553:\n        /* \"contracts/NFTMasterChef.sol\":17266:17310  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_547:\n        /* \"contracts/NFTMasterChef.sol\":17227:17393  require(\r... */\n      tag_554\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_555\n      swap1\n      tag_556\n      jump\t// in\n    tag_555:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_554:\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_557\n        /* \"contracts/NFTMasterChef.sol\":17424:17429  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17454:17476  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"contracts/NFTMasterChef.sol\":17478:17485  spender */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17487:17492  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17431:17493  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_558\n      swap3\n      swap2\n      swap1\n      tag_540\n      jump\t// in\n    tag_558:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17404:17423  _callOptionalReturn */\n      tag_541\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_557:\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_425:\n        /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":21438:21566  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_527:\n        /* \"contracts/NFTMasterChef.sol\":3444:3451  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3543:3544  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3539:3540  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3539:3544  b > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":3546:3558  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":3531:3559  require(b > 0, errorMessage) */\n      swap1\n      tag_561\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_562\n      swap2\n      swap1\n      tag_563\n      jump\t// in\n    tag_562:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_561:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3570:3579  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3586:3587  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3582:3583  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":3582:3587  a / b */\n      tag_564\n      swap2\n      swap1\n      tag_521\n      jump\t// in\n    tag_564:\n        /* \"contracts/NFTMasterChef.sol\":3570:3587  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3694:3695  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3687:3695  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_530:\n        /* \"contracts/NFTMasterChef.sol\":1400:1407  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1433:1434  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1429  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1434  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":1436:1448  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":1420:1449  require(b <= a, errorMessage) */\n      swap1\n      tag_566\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_567\n      swap2\n      swap1\n      tag_563\n      jump\t// in\n    tag_567:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_566:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1460:1469  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1476:1477  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1472:1473  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":1472:1477  a - b */\n      tag_568\n      swap2\n      swap1\n      tag_569\n      jump\t// in\n    tag_568:\n        /* \"contracts/NFTMasterChef.sol\":1460:1477  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1497:1498  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":1490:1498  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_541:\n        /* \"contracts/NFTMasterChef.sol\":19147:19170  bytes memory returndata */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_571\n        /* \"contracts/NFTMasterChef.sol\":19201:19205  data */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19181:19186  token */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":19173:19200  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_572\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_571:\n        /* \"contracts/NFTMasterChef.sol\":19147:19242  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19277:19278  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19257:19267  returndata */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":19257:19274  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":19257:19278  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {\r... */\n      iszero\n      tag_573\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":19354:19364  returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":19343:19373  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_574\n      swap2\n      swap1\n      tag_575\n      jump\t// in\n    tag_574:\n        /* \"contracts/NFTMasterChef.sol\":19335:19420  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_576\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_577\n      swap1\n      tag_578\n      jump\t// in\n    tag_577:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_576:\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {\r... */\n    tag_573:\n        /* \"contracts/NFTMasterChef.sol\":18793:19439  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(\r... */\n    tag_572:\n        /* \"contracts/NFTMasterChef.sol\":11703:11715  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_580\n        /* \"contracts/NFTMasterChef.sol\":11757:11763  target */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11765:11769  data */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11771:11772  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":11774:11786  errorMessage */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":11735:11756  functionCallWithValue */\n      tag_581\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_580:\n        /* \"contracts/NFTMasterChef.sol\":11728:11787  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(\r... */\n    tag_581:\n        /* \"contracts/NFTMasterChef.sol\":12856:12868  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":12914:12919  value */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":12889:12910  address(this).balance */\n      selfbalance\n        /* \"contracts/NFTMasterChef.sol\":12889:12919  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":12881:12962  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_583\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_584\n      swap1\n      tag_585\n      jump\t// in\n    tag_584:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_583:\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      tag_586\n        /* \"contracts/NFTMasterChef.sol\":12992:12998  target */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":12981:12991  isContract */\n      tag_587\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      jump\t// in\n    tag_586:\n        /* \"contracts/NFTMasterChef.sol\":12973:13033  require(isContract(target), \"Address: call to non-contract\") */\n      tag_588\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_589\n      swap1\n      tag_590\n      jump\t// in\n    tag_589:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_588:\n        /* \"contracts/NFTMasterChef.sol\":13047:13059  bool success */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":13061:13084  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":13088:13094  target */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13088:13099  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":13107:13112  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":13114:13118  data */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":13088:13119  target.call{value: value}(data) */\n      mload(0x40)\n      tag_591\n      swap2\n      swap1\n      tag_592\n      jump\t// in\n    tag_591:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_595\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_594)\n    tag_595:\n      0x60\n      swap2\n      pop\n    tag_594:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13046:13119  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      tag_596\n        /* \"contracts/NFTMasterChef.sol\":13154:13161  success */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13163:13173  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13175:13187  errorMessage */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13137:13153  verifyCallResult */\n      tag_597\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_596:\n        /* \"contracts/NFTMasterChef.sol\":13130:13188  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {\r... */\n    tag_587:\n        /* \"contracts/NFTMasterChef.sol\":8881:8885  bool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":9138:9139  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":9116:9123  account */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":9116:9135  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/NFTMasterChef.sol\":9116:9139  account.code.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":9109:9139  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(\r... */\n    tag_597:\n        /* \"contracts/NFTMasterChef.sol\":15522:15534  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":15551:15558  success */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {\r... */\n      iszero\n      tag_600\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15582:15592  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15575:15592  return returndata */\n      swap1\n      pop\n      jump(tag_599)\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {\r... */\n    tag_600:\n        /* \"contracts/NFTMasterChef.sol\":15716:15717  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":15696:15706  returndata */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15696:15713  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15696:15717  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {\r... */\n      iszero\n      tag_602\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15894:15904  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15888:15905  mload(returndata) */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15955:15970  returndata_size */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":15942:15952  returndata */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":15938:15940  32 */\n      0x20\n        /* \"contracts/NFTMasterChef.sol\":15934:15953  add(32, returndata) */\n      add\n        /* \"contracts/NFTMasterChef.sol\":15927:15971  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {\r... */\n    tag_602:\n        /* \"contracts/NFTMasterChef.sol\":16037:16049  errorMessage */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":16030:16050  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_604\n      swap2\n      swap1\n      tag_563\n      jump\t// in\n    tag_604:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(\r... */\n    tag_599:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_606:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_608\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_609\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:285   */\n    tag_610:\n        /* \"#utility.yul\":195:200   */\n      0x00\n        /* \"#utility.yul\":233:239   */\n      dup2\n        /* \"#utility.yul\":220:240   */\n      calldataload\n        /* \"#utility.yul\":211:240   */\n      swap1\n      pop\n        /* \"#utility.yul\":249:279   */\n      tag_612\n        /* \"#utility.yul\":273:278   */\n      dup2\n        /* \"#utility.yul\":249:279   */\n      tag_613\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":152:285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":291:428   */\n    tag_614:\n        /* \"#utility.yul\":345:350   */\n      0x00\n        /* \"#utility.yul\":376:382   */\n      dup2\n        /* \"#utility.yul\":370:383   */\n      mload\n        /* \"#utility.yul\":361:383   */\n      swap1\n      pop\n        /* \"#utility.yul\":392:422   */\n      tag_616\n        /* \"#utility.yul\":416:421   */\n      dup2\n        /* \"#utility.yul\":392:422   */\n      tag_613\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":291:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:601   */\n    tag_617:\n        /* \"#utility.yul\":494:499   */\n      0x00\n        /* \"#utility.yul\":532:538   */\n      dup2\n        /* \"#utility.yul\":519:539   */\n      calldataload\n        /* \"#utility.yul\":510:539   */\n      swap1\n      pop\n        /* \"#utility.yul\":548:595   */\n      tag_619\n        /* \"#utility.yul\":589:594   */\n      dup2\n        /* \"#utility.yul\":548:595   */\n      tag_620\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":434:601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":607:778   */\n    tag_621:\n        /* \"#utility.yul\":678:683   */\n      0x00\n        /* \"#utility.yul\":709:715   */\n      dup2\n        /* \"#utility.yul\":703:716   */\n      mload\n        /* \"#utility.yul\":694:716   */\n      swap1\n      pop\n        /* \"#utility.yul\":725:772   */\n      tag_623\n        /* \"#utility.yul\":766:771   */\n      dup2\n        /* \"#utility.yul\":725:772   */\n      tag_620\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":607:778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":784:953   */\n    tag_624:\n        /* \"#utility.yul\":845:850   */\n      0x00\n        /* \"#utility.yul\":883:889   */\n      dup2\n        /* \"#utility.yul\":870:890   */\n      calldataload\n        /* \"#utility.yul\":861:890   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:947   */\n      tag_626\n        /* \"#utility.yul\":941:946   */\n      dup2\n        /* \"#utility.yul\":899:947   */\n      tag_627\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":784:953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":959:1140   */\n    tag_628:\n        /* \"#utility.yul\":1026:1031   */\n      0x00\n        /* \"#utility.yul\":1064:1070   */\n      dup2\n        /* \"#utility.yul\":1051:1071   */\n      calldataload\n        /* \"#utility.yul\":1042:1071   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1134   */\n      tag_630\n        /* \"#utility.yul\":1128:1133   */\n      dup2\n        /* \"#utility.yul\":1080:1134   */\n      tag_631\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":959:1140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1146:1285   */\n    tag_632:\n        /* \"#utility.yul\":1192:1197   */\n      0x00\n        /* \"#utility.yul\":1230:1236   */\n      dup2\n        /* \"#utility.yul\":1217:1237   */\n      calldataload\n        /* \"#utility.yul\":1208:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1246:1279   */\n      tag_634\n        /* \"#utility.yul\":1273:1278   */\n      dup2\n        /* \"#utility.yul\":1246:1279   */\n      tag_635\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":1146:1285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1291:1434   */\n    tag_636:\n        /* \"#utility.yul\":1348:1353   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup2\n        /* \"#utility.yul\":1373:1386   */\n      mload\n        /* \"#utility.yul\":1364:1386   */\n      swap1\n      pop\n        /* \"#utility.yul\":1395:1428   */\n      tag_638\n        /* \"#utility.yul\":1422:1427   */\n      dup2\n        /* \"#utility.yul\":1395:1428   */\n      tag_635\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":1291:1434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1440:1769   */\n    tag_54:\n        /* \"#utility.yul\":1499:1505   */\n      0x00\n        /* \"#utility.yul\":1548:1550   */\n      0x20\n        /* \"#utility.yul\":1536:1545   */\n      dup3\n        /* \"#utility.yul\":1527:1534   */\n      dup5\n        /* \"#utility.yul\":1523:1546   */\n      sub\n        /* \"#utility.yul\":1519:1551   */\n      slt\n        /* \"#utility.yul\":1516:1635   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":1554:1633   */\n      tag_641\n      tag_642\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":1516:1635   */\n    tag_640:\n        /* \"#utility.yul\":1674:1675   */\n      0x00\n        /* \"#utility.yul\":1699:1752   */\n      tag_643\n        /* \"#utility.yul\":1744:1751   */\n      dup5\n        /* \"#utility.yul\":1735:1741   */\n      dup3\n        /* \"#utility.yul\":1724:1733   */\n      dup6\n        /* \"#utility.yul\":1720:1742   */\n      add\n        /* \"#utility.yul\":1699:1752   */\n      tag_606\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":1689:1752   */\n      swap2\n      pop\n        /* \"#utility.yul\":1645:1762   */\n      pop\n        /* \"#utility.yul\":1440:1769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1775:2120   */\n    tag_575:\n        /* \"#utility.yul\":1842:1848   */\n      0x00\n        /* \"#utility.yul\":1891:1893   */\n      0x20\n        /* \"#utility.yul\":1879:1888   */\n      dup3\n        /* \"#utility.yul\":1870:1877   */\n      dup5\n        /* \"#utility.yul\":1866:1889   */\n      sub\n        /* \"#utility.yul\":1862:1894   */\n      slt\n        /* \"#utility.yul\":1859:1978   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":1897:1976   */\n      tag_646\n      tag_642\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":1859:1978   */\n    tag_645:\n        /* \"#utility.yul\":2017:2018   */\n      0x00\n        /* \"#utility.yul\":2042:2103   */\n      tag_647\n        /* \"#utility.yul\":2095:2102   */\n      dup5\n        /* \"#utility.yul\":2086:2092   */\n      dup3\n        /* \"#utility.yul\":2075:2084   */\n      dup6\n        /* \"#utility.yul\":2071:2093   */\n      add\n        /* \"#utility.yul\":2042:2103   */\n      tag_614\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":2032:2103   */\n      swap2\n      pop\n        /* \"#utility.yul\":1988:2113   */\n      pop\n        /* \"#utility.yul\":1775:2120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2505   */\n    tag_341:\n        /* \"#utility.yul\":2210:2216   */\n      0x00\n        /* \"#utility.yul\":2259:2261   */\n      0x20\n        /* \"#utility.yul\":2247:2256   */\n      dup3\n        /* \"#utility.yul\":2238:2245   */\n      dup5\n        /* \"#utility.yul\":2234:2257   */\n      sub\n        /* \"#utility.yul\":2230:2262   */\n      slt\n        /* \"#utility.yul\":2227:2346   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":2265:2344   */\n      tag_650\n      tag_642\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":2227:2346   */\n    tag_649:\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2410:2488   */\n      tag_651\n        /* \"#utility.yul\":2480:2487   */\n      dup5\n        /* \"#utility.yul\":2471:2477   */\n      dup3\n        /* \"#utility.yul\":2460:2469   */\n      dup6\n        /* \"#utility.yul\":2456:2478   */\n      add\n        /* \"#utility.yul\":2410:2488   */\n      tag_621\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":2400:2488   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2498   */\n      pop\n        /* \"#utility.yul\":2126:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:3015   */\n    tag_101:\n        /* \"#utility.yul\":2594:2600   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup1\n        /* \"#utility.yul\":2651:2653   */\n      0x40\n        /* \"#utility.yul\":2639:2648   */\n      dup4\n        /* \"#utility.yul\":2630:2637   */\n      dup6\n        /* \"#utility.yul\":2626:2649   */\n      sub\n        /* \"#utility.yul\":2622:2654   */\n      slt\n        /* \"#utility.yul\":2619:2738   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":2657:2736   */\n      tag_654\n      tag_642\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":2619:2738   */\n    tag_653:\n        /* \"#utility.yul\":2777:2778   */\n      0x00\n        /* \"#utility.yul\":2802:2870   */\n      tag_655\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2802:2870   */\n      tag_624\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":2792:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2748:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_656\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_632\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2511:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3392   */\n    tag_82:\n        /* \"#utility.yul\":3101:3107   */\n      0x00\n        /* \"#utility.yul\":3150:3152   */\n      0x20\n        /* \"#utility.yul\":3138:3147   */\n      dup3\n        /* \"#utility.yul\":3129:3136   */\n      dup5\n        /* \"#utility.yul\":3125:3148   */\n      sub\n        /* \"#utility.yul\":3121:3153   */\n      slt\n        /* \"#utility.yul\":3118:3237   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":3156:3235   */\n      tag_659\n      tag_642\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":3118:3237   */\n    tag_658:\n        /* \"#utility.yul\":3276:3277   */\n      0x00\n        /* \"#utility.yul\":3301:3375   */\n      tag_660\n        /* \"#utility.yul\":3367:3374   */\n      dup5\n        /* \"#utility.yul\":3358:3364   */\n      dup3\n        /* \"#utility.yul\":3347:3356   */\n      dup6\n        /* \"#utility.yul\":3343:3365   */\n      add\n        /* \"#utility.yul\":3301:3375   */\n      tag_628\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":3291:3375   */\n      swap2\n      pop\n        /* \"#utility.yul\":3247:3385   */\n      pop\n        /* \"#utility.yul\":3021:3392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3398:3727   */\n    tag_58:\n        /* \"#utility.yul\":3457:3463   */\n      0x00\n        /* \"#utility.yul\":3506:3508   */\n      0x20\n        /* \"#utility.yul\":3494:3503   */\n      dup3\n        /* \"#utility.yul\":3485:3492   */\n      dup5\n        /* \"#utility.yul\":3481:3504   */\n      sub\n        /* \"#utility.yul\":3477:3509   */\n      slt\n        /* \"#utility.yul\":3474:3593   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":3512:3591   */\n      tag_663\n      tag_642\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":3474:3593   */\n    tag_662:\n        /* \"#utility.yul\":3632:3633   */\n      0x00\n        /* \"#utility.yul\":3657:3710   */\n      tag_664\n        /* \"#utility.yul\":3702:3709   */\n      dup5\n        /* \"#utility.yul\":3693:3699   */\n      dup3\n        /* \"#utility.yul\":3682:3691   */\n      dup6\n        /* \"#utility.yul\":3678:3700   */\n      add\n        /* \"#utility.yul\":3657:3710   */\n      tag_632\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":3647:3710   */\n      swap2\n      pop\n        /* \"#utility.yul\":3603:3720   */\n      pop\n        /* \"#utility.yul\":3398:3727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3733:4084   */\n    tag_227:\n        /* \"#utility.yul\":3803:3809   */\n      0x00\n        /* \"#utility.yul\":3852:3854   */\n      0x20\n        /* \"#utility.yul\":3840:3849   */\n      dup3\n        /* \"#utility.yul\":3831:3838   */\n      dup5\n        /* \"#utility.yul\":3827:3850   */\n      sub\n        /* \"#utility.yul\":3823:3855   */\n      slt\n        /* \"#utility.yul\":3820:3939   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":3858:3937   */\n      tag_667\n      tag_642\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":3820:3939   */\n    tag_666:\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":4003:4067   */\n      tag_668\n        /* \"#utility.yul\":4059:4066   */\n      dup5\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4039:4048   */\n      dup6\n        /* \"#utility.yul\":4035:4057   */\n      add\n        /* \"#utility.yul\":4003:4067   */\n      tag_636\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":3993:4067   */\n      swap2\n      pop\n        /* \"#utility.yul\":3949:4077   */\n      pop\n        /* \"#utility.yul\":3733:4084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4090:4564   */\n    tag_154:\n        /* \"#utility.yul\":4158:4164   */\n      0x00\n        /* \"#utility.yul\":4166:4172   */\n      dup1\n        /* \"#utility.yul\":4215:4217   */\n      0x40\n        /* \"#utility.yul\":4203:4212   */\n      dup4\n        /* \"#utility.yul\":4194:4201   */\n      dup6\n        /* \"#utility.yul\":4190:4213   */\n      sub\n        /* \"#utility.yul\":4186:4218   */\n      slt\n        /* \"#utility.yul\":4183:4302   */\n      iszero\n      tag_670\n      jumpi\n        /* \"#utility.yul\":4221:4300   */\n      tag_671\n      tag_642\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":4183:4302   */\n    tag_670:\n        /* \"#utility.yul\":4341:4342   */\n      0x00\n        /* \"#utility.yul\":4366:4419   */\n      tag_672\n        /* \"#utility.yul\":4411:4418   */\n      dup6\n        /* \"#utility.yul\":4402:4408   */\n      dup3\n        /* \"#utility.yul\":4391:4400   */\n      dup7\n        /* \"#utility.yul\":4387:4409   */\n      add\n        /* \"#utility.yul\":4366:4419   */\n      tag_632\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":4356:4419   */\n      swap3\n      pop\n        /* \"#utility.yul\":4312:4429   */\n      pop\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4494:4547   */\n      tag_673\n        /* \"#utility.yul\":4539:4546   */\n      dup6\n        /* \"#utility.yul\":4530:4536   */\n      dup3\n        /* \"#utility.yul\":4519:4528   */\n      dup7\n        /* \"#utility.yul\":4515:4537   */\n      add\n        /* \"#utility.yul\":4494:4547   */\n      tag_606\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":4484:4547   */\n      swap2\n      pop\n        /* \"#utility.yul\":4439:4557   */\n      pop\n        /* \"#utility.yul\":4090:4564   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4570:5211   */\n    tag_74:\n        /* \"#utility.yul\":4658:4664   */\n      0x00\n        /* \"#utility.yul\":4666:4672   */\n      dup1\n        /* \"#utility.yul\":4674:4680   */\n      0x00\n        /* \"#utility.yul\":4723:4725   */\n      0x60\n        /* \"#utility.yul\":4711:4720   */\n      dup5\n        /* \"#utility.yul\":4702:4709   */\n      dup7\n        /* \"#utility.yul\":4698:4721   */\n      sub\n        /* \"#utility.yul\":4694:4726   */\n      slt\n        /* \"#utility.yul\":4691:4810   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":4729:4808   */\n      tag_676\n      tag_642\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":4691:4810   */\n    tag_675:\n        /* \"#utility.yul\":4849:4850   */\n      0x00\n        /* \"#utility.yul\":4874:4927   */\n      tag_677\n        /* \"#utility.yul\":4919:4926   */\n      dup7\n        /* \"#utility.yul\":4910:4916   */\n      dup3\n        /* \"#utility.yul\":4899:4908   */\n      dup8\n        /* \"#utility.yul\":4895:4917   */\n      add\n        /* \"#utility.yul\":4874:4927   */\n      tag_632\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":4864:4927   */\n      swap4\n      pop\n        /* \"#utility.yul\":4820:4937   */\n      pop\n        /* \"#utility.yul\":4976:4978   */\n      0x20\n        /* \"#utility.yul\":5002:5069   */\n      tag_678\n        /* \"#utility.yul\":5061:5068   */\n      dup7\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5041:5050   */\n      dup8\n        /* \"#utility.yul\":5037:5059   */\n      add\n        /* \"#utility.yul\":5002:5069   */\n      tag_617\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":4992:5069   */\n      swap3\n      pop\n        /* \"#utility.yul\":4947:5079   */\n      pop\n        /* \"#utility.yul\":5118:5120   */\n      0x40\n        /* \"#utility.yul\":5144:5194   */\n      tag_679\n        /* \"#utility.yul\":5186:5193   */\n      dup7\n        /* \"#utility.yul\":5177:5183   */\n      dup3\n        /* \"#utility.yul\":5166:5175   */\n      dup8\n        /* \"#utility.yul\":5162:5184   */\n      add\n        /* \"#utility.yul\":5144:5194   */\n      tag_610\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":5134:5194   */\n      swap2\n      pop\n        /* \"#utility.yul\":5089:5204   */\n      pop\n        /* \"#utility.yul\":4570:5211   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5217:5691   */\n    tag_70:\n        /* \"#utility.yul\":5285:5291   */\n      0x00\n        /* \"#utility.yul\":5293:5299   */\n      dup1\n        /* \"#utility.yul\":5342:5344   */\n      0x40\n        /* \"#utility.yul\":5330:5339   */\n      dup4\n        /* \"#utility.yul\":5321:5328   */\n      dup6\n        /* \"#utility.yul\":5317:5340   */\n      sub\n        /* \"#utility.yul\":5313:5345   */\n      slt\n        /* \"#utility.yul\":5310:5429   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":5348:5427   */\n      tag_682\n      tag_642\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":5310:5429   */\n    tag_681:\n        /* \"#utility.yul\":5468:5469   */\n      0x00\n        /* \"#utility.yul\":5493:5546   */\n      tag_683\n        /* \"#utility.yul\":5538:5545   */\n      dup6\n        /* \"#utility.yul\":5529:5535   */\n      dup3\n        /* \"#utility.yul\":5518:5527   */\n      dup7\n        /* \"#utility.yul\":5514:5536   */\n      add\n        /* \"#utility.yul\":5493:5546   */\n      tag_632\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":5483:5546   */\n      swap3\n      pop\n        /* \"#utility.yul\":5439:5556   */\n      pop\n        /* \"#utility.yul\":5595:5597   */\n      0x20\n        /* \"#utility.yul\":5621:5674   */\n      tag_684\n        /* \"#utility.yul\":5666:5673   */\n      dup6\n        /* \"#utility.yul\":5657:5663   */\n      dup3\n        /* \"#utility.yul\":5646:5655   */\n      dup7\n        /* \"#utility.yul\":5642:5664   */\n      add\n        /* \"#utility.yul\":5621:5674   */\n      tag_632\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":5611:5674   */\n      swap2\n      pop\n        /* \"#utility.yul\":5566:5684   */\n      pop\n        /* \"#utility.yul\":5217:5691   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:6310   */\n    tag_127:\n        /* \"#utility.yul\":5771:5777   */\n      0x00\n        /* \"#utility.yul\":5779:5785   */\n      dup1\n        /* \"#utility.yul\":5787:5793   */\n      0x00\n        /* \"#utility.yul\":5836:5838   */\n      0x60\n        /* \"#utility.yul\":5824:5833   */\n      dup5\n        /* \"#utility.yul\":5815:5822   */\n      dup7\n        /* \"#utility.yul\":5811:5834   */\n      sub\n        /* \"#utility.yul\":5807:5839   */\n      slt\n        /* \"#utility.yul\":5804:5923   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":5842:5921   */\n      tag_687\n      tag_642\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":5804:5923   */\n    tag_686:\n        /* \"#utility.yul\":5962:5963   */\n      0x00\n        /* \"#utility.yul\":5987:6040   */\n      tag_688\n        /* \"#utility.yul\":6032:6039   */\n      dup7\n        /* \"#utility.yul\":6023:6029   */\n      dup3\n        /* \"#utility.yul\":6012:6021   */\n      dup8\n        /* \"#utility.yul\":6008:6030   */\n      add\n        /* \"#utility.yul\":5987:6040   */\n      tag_632\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":5977:6040   */\n      swap4\n      pop\n        /* \"#utility.yul\":5933:6050   */\n      pop\n        /* \"#utility.yul\":6089:6091   */\n      0x20\n        /* \"#utility.yul\":6115:6168   */\n      tag_689\n        /* \"#utility.yul\":6160:6167   */\n      dup7\n        /* \"#utility.yul\":6151:6157   */\n      dup3\n        /* \"#utility.yul\":6140:6149   */\n      dup8\n        /* \"#utility.yul\":6136:6158   */\n      add\n        /* \"#utility.yul\":6115:6168   */\n      tag_632\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":6105:6168   */\n      swap3\n      pop\n        /* \"#utility.yul\":6060:6178   */\n      pop\n        /* \"#utility.yul\":6217:6219   */\n      0x40\n        /* \"#utility.yul\":6243:6293   */\n      tag_690\n        /* \"#utility.yul\":6285:6292   */\n      dup7\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6265:6274   */\n      dup8\n        /* \"#utility.yul\":6261:6283   */\n      add\n        /* \"#utility.yul\":6243:6293   */\n      tag_610\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":6233:6293   */\n      swap2\n      pop\n        /* \"#utility.yul\":6188:6303   */\n      pop\n        /* \"#utility.yul\":5697:6310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6316:6434   */\n    tag_691:\n        /* \"#utility.yul\":6403:6427   */\n      tag_693\n        /* \"#utility.yul\":6421:6426   */\n      dup2\n        /* \"#utility.yul\":6403:6427   */\n      tag_694\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":6398:6401   */\n      dup3\n        /* \"#utility.yul\":6391:6428   */\n      mstore\n        /* \"#utility.yul\":6316:6434   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6440:6813   */\n    tag_695:\n        /* \"#utility.yul\":6544:6547   */\n      0x00\n        /* \"#utility.yul\":6572:6610   */\n      tag_697\n        /* \"#utility.yul\":6604:6609   */\n      dup3\n        /* \"#utility.yul\":6572:6610   */\n      tag_698\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":6626:6714   */\n      tag_699\n        /* \"#utility.yul\":6707:6713   */\n      dup2\n        /* \"#utility.yul\":6702:6705   */\n      dup6\n        /* \"#utility.yul\":6626:6714   */\n      tag_700\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":6619:6714   */\n      swap4\n      pop\n        /* \"#utility.yul\":6723:6775   */\n      tag_701\n        /* \"#utility.yul\":6768:6774   */\n      dup2\n        /* \"#utility.yul\":6763:6766   */\n      dup6\n        /* \"#utility.yul\":6756:6760   */\n      0x20\n        /* \"#utility.yul\":6749:6754   */\n      dup7\n        /* \"#utility.yul\":6745:6761   */\n      add\n        /* \"#utility.yul\":6723:6775   */\n      tag_702\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":6800:6806   */\n      dup1\n        /* \"#utility.yul\":6795:6798   */\n      dup5\n        /* \"#utility.yul\":6791:6807   */\n      add\n        /* \"#utility.yul\":6784:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6548:6813   */\n      pop\n        /* \"#utility.yul\":6440:6813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6819:6978   */\n    tag_703:\n        /* \"#utility.yul\":6920:6971   */\n      tag_705\n        /* \"#utility.yul\":6965:6970   */\n      dup2\n        /* \"#utility.yul\":6920:6971   */\n      tag_706\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":6915:6918   */\n      dup3\n        /* \"#utility.yul\":6908:6972   */\n      mstore\n        /* \"#utility.yul\":6819:6978   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6984:7145   */\n    tag_707:\n        /* \"#utility.yul\":7086:7138   */\n      tag_709\n        /* \"#utility.yul\":7132:7137   */\n      dup2\n        /* \"#utility.yul\":7086:7138   */\n      tag_710\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":7081:7084   */\n      dup3\n        /* \"#utility.yul\":7074:7139   */\n      mstore\n        /* \"#utility.yul\":6984:7145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7151:7324   */\n    tag_711:\n        /* \"#utility.yul\":7259:7317   */\n      tag_713\n        /* \"#utility.yul\":7311:7316   */\n      dup2\n        /* \"#utility.yul\":7259:7317   */\n      tag_714\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":7254:7257   */\n      dup3\n        /* \"#utility.yul\":7247:7318   */\n      mstore\n        /* \"#utility.yul\":7151:7324   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7330:7694   */\n    tag_715:\n        /* \"#utility.yul\":7418:7421   */\n      0x00\n        /* \"#utility.yul\":7446:7485   */\n      tag_717\n        /* \"#utility.yul\":7479:7484   */\n      dup3\n        /* \"#utility.yul\":7446:7485   */\n      tag_718\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":7501:7572   */\n      tag_719\n        /* \"#utility.yul\":7565:7571   */\n      dup2\n        /* \"#utility.yul\":7560:7563   */\n      dup6\n        /* \"#utility.yul\":7501:7572   */\n      tag_720\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":7494:7572   */\n      swap4\n      pop\n        /* \"#utility.yul\":7581:7633   */\n      tag_721\n        /* \"#utility.yul\":7626:7632   */\n      dup2\n        /* \"#utility.yul\":7621:7624   */\n      dup6\n        /* \"#utility.yul\":7614:7618   */\n      0x20\n        /* \"#utility.yul\":7607:7612   */\n      dup7\n        /* \"#utility.yul\":7603:7619   */\n      add\n        /* \"#utility.yul\":7581:7633   */\n      tag_702\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":7658:7687   */\n      tag_722\n        /* \"#utility.yul\":7680:7686   */\n      dup2\n        /* \"#utility.yul\":7658:7687   */\n      tag_723\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":7653:7656   */\n      dup5\n        /* \"#utility.yul\":7649:7688   */\n      add\n        /* \"#utility.yul\":7642:7688   */\n      swap2\n      pop\n        /* \"#utility.yul\":7422:7694   */\n      pop\n        /* \"#utility.yul\":7330:7694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7700:8066   */\n    tag_724:\n        /* \"#utility.yul\":7842:7845   */\n      0x00\n        /* \"#utility.yul\":7863:7930   */\n      tag_726\n        /* \"#utility.yul\":7927:7929   */\n      0x26\n        /* \"#utility.yul\":7922:7925   */\n      dup4\n        /* \"#utility.yul\":7863:7930   */\n      tag_720\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":7856:7930   */\n      swap2\n      pop\n        /* \"#utility.yul\":7939:8032   */\n      tag_727\n        /* \"#utility.yul\":8028:8031   */\n      dup3\n        /* \"#utility.yul\":7939:8032   */\n      tag_728\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":8057:8059   */\n      0x40\n        /* \"#utility.yul\":8052:8055   */\n      dup3\n        /* \"#utility.yul\":8048:8060   */\n      add\n        /* \"#utility.yul\":8041:8060   */\n      swap1\n      pop\n        /* \"#utility.yul\":7700:8066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8072:8438   */\n    tag_729:\n        /* \"#utility.yul\":8214:8217   */\n      0x00\n        /* \"#utility.yul\":8235:8302   */\n      tag_731\n        /* \"#utility.yul\":8299:8301   */\n      0x13\n        /* \"#utility.yul\":8294:8297   */\n      dup4\n        /* \"#utility.yul\":8235:8302   */\n      tag_720\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":8228:8302   */\n      swap2\n      pop\n        /* \"#utility.yul\":8311:8404   */\n      tag_732\n        /* \"#utility.yul\":8400:8403   */\n      dup3\n        /* \"#utility.yul\":8311:8404   */\n      tag_733\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":8429:8431   */\n      0x20\n        /* \"#utility.yul\":8424:8427   */\n      dup3\n        /* \"#utility.yul\":8420:8432   */\n      add\n        /* \"#utility.yul\":8413:8432   */\n      swap1\n      pop\n        /* \"#utility.yul\":8072:8438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8444:8810   */\n    tag_734:\n        /* \"#utility.yul\":8586:8589   */\n      0x00\n        /* \"#utility.yul\":8607:8674   */\n      tag_736\n        /* \"#utility.yul\":8671:8673   */\n      0x1b\n        /* \"#utility.yul\":8666:8669   */\n      dup4\n        /* \"#utility.yul\":8607:8674   */\n      tag_720\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":8600:8674   */\n      swap2\n      pop\n        /* \"#utility.yul\":8683:8776   */\n      tag_737\n        /* \"#utility.yul\":8772:8775   */\n      dup3\n        /* \"#utility.yul\":8683:8776   */\n      tag_738\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":8801:8803   */\n      0x20\n        /* \"#utility.yul\":8796:8799   */\n      dup3\n        /* \"#utility.yul\":8792:8804   */\n      add\n        /* \"#utility.yul\":8785:8804   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8816:9182   */\n    tag_739:\n        /* \"#utility.yul\":8958:8961   */\n      0x00\n        /* \"#utility.yul\":8979:9046   */\n      tag_741\n        /* \"#utility.yul\":9043:9045   */\n      0x1b\n        /* \"#utility.yul\":9038:9041   */\n      dup4\n        /* \"#utility.yul\":8979:9046   */\n      tag_720\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":8972:9046   */\n      swap2\n      pop\n        /* \"#utility.yul\":9055:9148   */\n      tag_742\n        /* \"#utility.yul\":9144:9147   */\n      dup3\n        /* \"#utility.yul\":9055:9148   */\n      tag_743\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":9173:9175   */\n      0x20\n        /* \"#utility.yul\":9168:9171   */\n      dup3\n        /* \"#utility.yul\":9164:9176   */\n      add\n        /* \"#utility.yul\":9157:9176   */\n      swap1\n      pop\n        /* \"#utility.yul\":8816:9182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9188:9554   */\n    tag_744:\n        /* \"#utility.yul\":9330:9333   */\n      0x00\n        /* \"#utility.yul\":9351:9418   */\n      tag_746\n        /* \"#utility.yul\":9415:9417   */\n      0x26\n        /* \"#utility.yul\":9410:9413   */\n      dup4\n        /* \"#utility.yul\":9351:9418   */\n      tag_720\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":9344:9418   */\n      swap2\n      pop\n        /* \"#utility.yul\":9427:9520   */\n      tag_747\n        /* \"#utility.yul\":9516:9519   */\n      dup3\n        /* \"#utility.yul\":9427:9520   */\n      tag_748\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":9545:9547   */\n      0x40\n        /* \"#utility.yul\":9540:9543   */\n      dup3\n        /* \"#utility.yul\":9536:9548   */\n      add\n        /* \"#utility.yul\":9529:9548   */\n      swap1\n      pop\n        /* \"#utility.yul\":9188:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9926   */\n    tag_749:\n        /* \"#utility.yul\":9702:9705   */\n      0x00\n        /* \"#utility.yul\":9723:9790   */\n      tag_751\n        /* \"#utility.yul\":9787:9789   */\n      0x0e\n        /* \"#utility.yul\":9782:9785   */\n      dup4\n        /* \"#utility.yul\":9723:9790   */\n      tag_720\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":9716:9790   */\n      swap2\n      pop\n        /* \"#utility.yul\":9799:9892   */\n      tag_752\n        /* \"#utility.yul\":9888:9891   */\n      dup3\n        /* \"#utility.yul\":9799:9892   */\n      tag_753\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":9917:9919   */\n      0x20\n        /* \"#utility.yul\":9912:9915   */\n      dup3\n        /* \"#utility.yul\":9908:9920   */\n      add\n        /* \"#utility.yul\":9901:9920   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9932:10298   */\n    tag_754:\n        /* \"#utility.yul\":10074:10077   */\n      0x00\n        /* \"#utility.yul\":10095:10162   */\n      tag_756\n        /* \"#utility.yul\":10159:10161   */\n      0x18\n        /* \"#utility.yul\":10154:10157   */\n      dup4\n        /* \"#utility.yul\":10095:10162   */\n      tag_720\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":10088:10162   */\n      swap2\n      pop\n        /* \"#utility.yul\":10171:10264   */\n      tag_757\n        /* \"#utility.yul\":10260:10263   */\n      dup3\n        /* \"#utility.yul\":10171:10264   */\n      tag_758\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":10289:10291   */\n      0x20\n        /* \"#utility.yul\":10284:10287   */\n      dup3\n        /* \"#utility.yul\":10280:10292   */\n      add\n        /* \"#utility.yul\":10273:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9932:10298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10304:10670   */\n    tag_759:\n        /* \"#utility.yul\":10446:10449   */\n      0x00\n        /* \"#utility.yul\":10467:10534   */\n      tag_761\n        /* \"#utility.yul\":10531:10533   */\n      0x21\n        /* \"#utility.yul\":10526:10529   */\n      dup4\n        /* \"#utility.yul\":10467:10534   */\n      tag_720\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":10460:10534   */\n      swap2\n      pop\n        /* \"#utility.yul\":10543:10636   */\n      tag_762\n        /* \"#utility.yul\":10632:10635   */\n      dup3\n        /* \"#utility.yul\":10543:10636   */\n      tag_763\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":10661:10663   */\n      0x40\n        /* \"#utility.yul\":10656:10659   */\n      dup3\n        /* \"#utility.yul\":10652:10664   */\n      add\n        /* \"#utility.yul\":10645:10664   */\n      swap1\n      pop\n        /* \"#utility.yul\":10304:10670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10676:11042   */\n    tag_764:\n        /* \"#utility.yul\":10818:10821   */\n      0x00\n        /* \"#utility.yul\":10839:10906   */\n      tag_766\n        /* \"#utility.yul\":10903:10905   */\n      0x20\n        /* \"#utility.yul\":10898:10901   */\n      dup4\n        /* \"#utility.yul\":10839:10906   */\n      tag_720\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":10832:10906   */\n      swap2\n      pop\n        /* \"#utility.yul\":10915:11008   */\n      tag_767\n        /* \"#utility.yul\":11004:11007   */\n      dup3\n        /* \"#utility.yul\":10915:11008   */\n      tag_768\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11028:11031   */\n      dup3\n        /* \"#utility.yul\":11024:11036   */\n      add\n        /* \"#utility.yul\":11017:11036   */\n      swap1\n      pop\n        /* \"#utility.yul\":10676:11042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11048:11414   */\n    tag_769:\n        /* \"#utility.yul\":11190:11193   */\n      0x00\n        /* \"#utility.yul\":11211:11278   */\n      tag_771\n        /* \"#utility.yul\":11275:11277   */\n      0x14\n        /* \"#utility.yul\":11270:11273   */\n      dup4\n        /* \"#utility.yul\":11211:11278   */\n      tag_720\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":11204:11278   */\n      swap2\n      pop\n        /* \"#utility.yul\":11287:11380   */\n      tag_772\n        /* \"#utility.yul\":11376:11379   */\n      dup3\n        /* \"#utility.yul\":11287:11380   */\n      tag_773\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":11405:11407   */\n      0x20\n        /* \"#utility.yul\":11400:11403   */\n      dup3\n        /* \"#utility.yul\":11396:11408   */\n      add\n        /* \"#utility.yul\":11389:11408   */\n      swap1\n      pop\n        /* \"#utility.yul\":11048:11414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11420:11786   */\n    tag_774:\n        /* \"#utility.yul\":11562:11565   */\n      0x00\n        /* \"#utility.yul\":11583:11650   */\n      tag_776\n        /* \"#utility.yul\":11647:11649   */\n      0x1d\n        /* \"#utility.yul\":11642:11645   */\n      dup4\n        /* \"#utility.yul\":11583:11650   */\n      tag_720\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":11576:11650   */\n      swap2\n      pop\n        /* \"#utility.yul\":11659:11752   */\n      tag_777\n        /* \"#utility.yul\":11748:11751   */\n      dup3\n        /* \"#utility.yul\":11659:11752   */\n      tag_778\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":11777:11779   */\n      0x20\n        /* \"#utility.yul\":11772:11775   */\n      dup3\n        /* \"#utility.yul\":11768:11780   */\n      add\n        /* \"#utility.yul\":11761:11780   */\n      swap1\n      pop\n        /* \"#utility.yul\":11420:11786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11792:12158   */\n    tag_779:\n        /* \"#utility.yul\":11934:11937   */\n      0x00\n        /* \"#utility.yul\":11955:12022   */\n      tag_781\n        /* \"#utility.yul\":12019:12021   */\n      0x12\n        /* \"#utility.yul\":12014:12017   */\n      dup4\n        /* \"#utility.yul\":11955:12022   */\n      tag_720\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":11948:12022   */\n      swap2\n      pop\n        /* \"#utility.yul\":12031:12124   */\n      tag_782\n        /* \"#utility.yul\":12120:12123   */\n      dup3\n        /* \"#utility.yul\":12031:12124   */\n      tag_783\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":12149:12151   */\n      0x20\n        /* \"#utility.yul\":12144:12147   */\n      dup3\n        /* \"#utility.yul\":12140:12152   */\n      add\n        /* \"#utility.yul\":12133:12152   */\n      swap1\n      pop\n        /* \"#utility.yul\":11792:12158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12164:12530   */\n    tag_784:\n        /* \"#utility.yul\":12306:12309   */\n      0x00\n        /* \"#utility.yul\":12327:12394   */\n      tag_786\n        /* \"#utility.yul\":12391:12393   */\n      0x2a\n        /* \"#utility.yul\":12386:12389   */\n      dup4\n        /* \"#utility.yul\":12327:12394   */\n      tag_720\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":12320:12394   */\n      swap2\n      pop\n        /* \"#utility.yul\":12403:12496   */\n      tag_787\n        /* \"#utility.yul\":12492:12495   */\n      dup3\n        /* \"#utility.yul\":12403:12496   */\n      tag_788\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":12521:12523   */\n      0x40\n        /* \"#utility.yul\":12516:12519   */\n      dup3\n        /* \"#utility.yul\":12512:12524   */\n      add\n        /* \"#utility.yul\":12505:12524   */\n      swap1\n      pop\n        /* \"#utility.yul\":12164:12530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12536:12902   */\n    tag_789:\n        /* \"#utility.yul\":12678:12681   */\n      0x00\n        /* \"#utility.yul\":12699:12766   */\n      tag_791\n        /* \"#utility.yul\":12763:12765   */\n      0x0c\n        /* \"#utility.yul\":12758:12761   */\n      dup4\n        /* \"#utility.yul\":12699:12766   */\n      tag_720\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":12692:12766   */\n      swap2\n      pop\n        /* \"#utility.yul\":12775:12868   */\n      tag_792\n        /* \"#utility.yul\":12864:12867   */\n      dup3\n        /* \"#utility.yul\":12775:12868   */\n      tag_793\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":12893:12895   */\n      0x20\n        /* \"#utility.yul\":12888:12891   */\n      dup3\n        /* \"#utility.yul\":12884:12896   */\n      add\n        /* \"#utility.yul\":12877:12896   */\n      swap1\n      pop\n        /* \"#utility.yul\":12536:12902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12908:13274   */\n    tag_794:\n        /* \"#utility.yul\":13050:13053   */\n      0x00\n        /* \"#utility.yul\":13071:13138   */\n      tag_796\n        /* \"#utility.yul\":13135:13137   */\n      0x36\n        /* \"#utility.yul\":13130:13133   */\n      dup4\n        /* \"#utility.yul\":13071:13138   */\n      tag_720\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":13064:13138   */\n      swap2\n      pop\n        /* \"#utility.yul\":13147:13240   */\n      tag_797\n        /* \"#utility.yul\":13236:13239   */\n      dup3\n        /* \"#utility.yul\":13147:13240   */\n      tag_798\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":13265:13267   */\n      0x40\n        /* \"#utility.yul\":13260:13263   */\n      dup3\n        /* \"#utility.yul\":13256:13268   */\n      add\n        /* \"#utility.yul\":13249:13268   */\n      swap1\n      pop\n        /* \"#utility.yul\":12908:13274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13280:13646   */\n    tag_799:\n        /* \"#utility.yul\":13422:13425   */\n      0x00\n        /* \"#utility.yul\":13443:13510   */\n      tag_801\n        /* \"#utility.yul\":13507:13509   */\n      0x14\n        /* \"#utility.yul\":13502:13505   */\n      dup4\n        /* \"#utility.yul\":13443:13510   */\n      tag_720\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":13436:13510   */\n      swap2\n      pop\n        /* \"#utility.yul\":13519:13612   */\n      tag_802\n        /* \"#utility.yul\":13608:13611   */\n      dup3\n        /* \"#utility.yul\":13519:13612   */\n      tag_803\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":13637:13639   */\n      0x20\n        /* \"#utility.yul\":13632:13635   */\n      dup3\n        /* \"#utility.yul\":13628:13640   */\n      add\n        /* \"#utility.yul\":13621:13640   */\n      swap1\n      pop\n        /* \"#utility.yul\":13280:13646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13652:13770   */\n    tag_804:\n        /* \"#utility.yul\":13739:13763   */\n      tag_806\n        /* \"#utility.yul\":13757:13762   */\n      dup2\n        /* \"#utility.yul\":13739:13763   */\n      tag_807\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":13734:13737   */\n      dup3\n        /* \"#utility.yul\":13727:13764   */\n      mstore\n        /* \"#utility.yul\":13652:13770   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13776:14047   */\n    tag_592:\n        /* \"#utility.yul\":13906:13909   */\n      0x00\n        /* \"#utility.yul\":13928:14021   */\n      tag_809\n        /* \"#utility.yul\":14017:14020   */\n      dup3\n        /* \"#utility.yul\":14008:14014   */\n      dup5\n        /* \"#utility.yul\":13928:14021   */\n      tag_695\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":13921:14021   */\n      swap2\n      pop\n        /* \"#utility.yul\":14038:14041   */\n      dup2\n        /* \"#utility.yul\":14031:14041   */\n      swap1\n      pop\n        /* \"#utility.yul\":13776:14047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14053:14275   */\n    tag_79:\n        /* \"#utility.yul\":14146:14150   */\n      0x00\n        /* \"#utility.yul\":14184:14186   */\n      0x20\n        /* \"#utility.yul\":14173:14182   */\n      dup3\n        /* \"#utility.yul\":14169:14187   */\n      add\n        /* \"#utility.yul\":14161:14187   */\n      swap1\n      pop\n        /* \"#utility.yul\":14197:14268   */\n      tag_811\n        /* \"#utility.yul\":14265:14266   */\n      0x00\n        /* \"#utility.yul\":14254:14263   */\n      dup4\n        /* \"#utility.yul\":14250:14267   */\n      add\n        /* \"#utility.yul\":14241:14247   */\n      dup5\n        /* \"#utility.yul\":14197:14268   */\n      tag_691\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":14053:14275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14281:14613   */\n    tag_549:\n        /* \"#utility.yul\":14402:14406   */\n      0x00\n        /* \"#utility.yul\":14440:14442   */\n      0x40\n        /* \"#utility.yul\":14429:14438   */\n      dup3\n        /* \"#utility.yul\":14425:14443   */\n      add\n        /* \"#utility.yul\":14417:14443   */\n      swap1\n      pop\n        /* \"#utility.yul\":14453:14524   */\n      tag_813\n        /* \"#utility.yul\":14521:14522   */\n      0x00\n        /* \"#utility.yul\":14510:14519   */\n      dup4\n        /* \"#utility.yul\":14506:14523   */\n      add\n        /* \"#utility.yul\":14497:14503   */\n      dup6\n        /* \"#utility.yul\":14453:14524   */\n      tag_691\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":14534:14606   */\n      tag_814\n        /* \"#utility.yul\":14602:14604   */\n      0x20\n        /* \"#utility.yul\":14591:14600   */\n      dup4\n        /* \"#utility.yul\":14587:14605   */\n      add\n        /* \"#utility.yul\":14578:14584   */\n      dup5\n        /* \"#utility.yul\":14534:14606   */\n      tag_691\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":14281:14613   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14619:15061   */\n    tag_545:\n        /* \"#utility.yul\":14768:14772   */\n      0x00\n        /* \"#utility.yul\":14806:14808   */\n      0x60\n        /* \"#utility.yul\":14795:14804   */\n      dup3\n        /* \"#utility.yul\":14791:14809   */\n      add\n        /* \"#utility.yul\":14783:14809   */\n      swap1\n      pop\n        /* \"#utility.yul\":14819:14890   */\n      tag_816\n        /* \"#utility.yul\":14887:14888   */\n      0x00\n        /* \"#utility.yul\":14876:14885   */\n      dup4\n        /* \"#utility.yul\":14872:14889   */\n      add\n        /* \"#utility.yul\":14863:14869   */\n      dup7\n        /* \"#utility.yul\":14819:14890   */\n      tag_691\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":14900:14972   */\n      tag_817\n        /* \"#utility.yul\":14968:14970   */\n      0x20\n        /* \"#utility.yul\":14957:14966   */\n      dup4\n        /* \"#utility.yul\":14953:14971   */\n      add\n        /* \"#utility.yul\":14944:14950   */\n      dup6\n        /* \"#utility.yul\":14900:14972   */\n      tag_691\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":14982:15054   */\n      tag_818\n        /* \"#utility.yul\":15050:15052   */\n      0x40\n        /* \"#utility.yul\":15039:15048   */\n      dup4\n        /* \"#utility.yul\":15035:15053   */\n      add\n        /* \"#utility.yul\":15026:15032   */\n      dup5\n        /* \"#utility.yul\":14982:15054   */\n      tag_804\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":14619:15061   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15067:15399   */\n    tag_540:\n        /* \"#utility.yul\":15188:15192   */\n      0x00\n        /* \"#utility.yul\":15226:15228   */\n      0x40\n        /* \"#utility.yul\":15215:15224   */\n      dup3\n        /* \"#utility.yul\":15211:15229   */\n      add\n        /* \"#utility.yul\":15203:15229   */\n      swap1\n      pop\n        /* \"#utility.yul\":15239:15310   */\n      tag_820\n        /* \"#utility.yul\":15307:15308   */\n      0x00\n        /* \"#utility.yul\":15296:15305   */\n      dup4\n        /* \"#utility.yul\":15292:15309   */\n      add\n        /* \"#utility.yul\":15283:15289   */\n      dup6\n        /* \"#utility.yul\":15239:15310   */\n      tag_691\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":15320:15392   */\n      tag_821\n        /* \"#utility.yul\":15388:15390   */\n      0x20\n        /* \"#utility.yul\":15377:15386   */\n      dup4\n        /* \"#utility.yul\":15373:15391   */\n      add\n        /* \"#utility.yul\":15364:15370   */\n      dup5\n        /* \"#utility.yul\":15320:15392   */\n      tag_804\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":15067:15399   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15405:15655   */\n    tag_164:\n        /* \"#utility.yul\":15512:15516   */\n      0x00\n        /* \"#utility.yul\":15550:15552   */\n      0x20\n        /* \"#utility.yul\":15539:15548   */\n      dup3\n        /* \"#utility.yul\":15535:15553   */\n      add\n        /* \"#utility.yul\":15527:15553   */\n      swap1\n      pop\n        /* \"#utility.yul\":15563:15648   */\n      tag_823\n        /* \"#utility.yul\":15645:15646   */\n      0x00\n        /* \"#utility.yul\":15634:15643   */\n      dup4\n        /* \"#utility.yul\":15630:15647   */\n      add\n        /* \"#utility.yul\":15621:15627   */\n      dup5\n        /* \"#utility.yul\":15563:15648   */\n      tag_703\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":15405:15655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15661:16242   */\n    tag_64:\n        /* \"#utility.yul\":15852:15856   */\n      0x00\n        /* \"#utility.yul\":15890:15893   */\n      0x80\n        /* \"#utility.yul\":15879:15888   */\n      dup3\n        /* \"#utility.yul\":15875:15894   */\n      add\n        /* \"#utility.yul\":15867:15894   */\n      swap1\n      pop\n        /* \"#utility.yul\":15904:15989   */\n      tag_825\n        /* \"#utility.yul\":15986:15987   */\n      0x00\n        /* \"#utility.yul\":15975:15984   */\n      dup4\n        /* \"#utility.yul\":15971:15988   */\n      add\n        /* \"#utility.yul\":15962:15968   */\n      dup8\n        /* \"#utility.yul\":15904:15989   */\n      tag_703\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":15999:16071   */\n      tag_826\n        /* \"#utility.yul\":16067:16069   */\n      0x20\n        /* \"#utility.yul\":16056:16065   */\n      dup4\n        /* \"#utility.yul\":16052:16070   */\n      add\n        /* \"#utility.yul\":16043:16049   */\n      dup7\n        /* \"#utility.yul\":15999:16071   */\n      tag_804\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":16081:16153   */\n      tag_827\n        /* \"#utility.yul\":16149:16151   */\n      0x40\n        /* \"#utility.yul\":16138:16147   */\n      dup4\n        /* \"#utility.yul\":16134:16152   */\n      add\n        /* \"#utility.yul\":16125:16131   */\n      dup6\n        /* \"#utility.yul\":16081:16153   */\n      tag_804\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":16163:16235   */\n      tag_828\n        /* \"#utility.yul\":16231:16233   */\n      0x60\n        /* \"#utility.yul\":16220:16229   */\n      dup4\n        /* \"#utility.yul\":16216:16234   */\n      add\n        /* \"#utility.yul\":16207:16213   */\n      dup5\n        /* \"#utility.yul\":16163:16235   */\n      tag_804\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":15661:16242   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16248:16610   */\n    tag_122:\n        /* \"#utility.yul\":16384:16388   */\n      0x00\n        /* \"#utility.yul\":16422:16424   */\n      0x40\n        /* \"#utility.yul\":16411:16420   */\n      dup3\n        /* \"#utility.yul\":16407:16425   */\n      add\n        /* \"#utility.yul\":16399:16425   */\n      swap1\n      pop\n        /* \"#utility.yul\":16435:16521   */\n      tag_830\n        /* \"#utility.yul\":16518:16519   */\n      0x00\n        /* \"#utility.yul\":16507:16516   */\n      dup4\n        /* \"#utility.yul\":16503:16520   */\n      add\n        /* \"#utility.yul\":16494:16500   */\n      dup6\n        /* \"#utility.yul\":16435:16521   */\n      tag_707\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":16531:16603   */\n      tag_831\n        /* \"#utility.yul\":16599:16601   */\n      0x20\n        /* \"#utility.yul\":16588:16597   */\n      dup4\n        /* \"#utility.yul\":16584:16602   */\n      add\n        /* \"#utility.yul\":16575:16581   */\n      dup5\n        /* \"#utility.yul\":16531:16603   */\n      tag_804\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":16248:16610   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16616:16880   */\n    tag_134:\n        /* \"#utility.yul\":16730:16734   */\n      0x00\n        /* \"#utility.yul\":16768:16770   */\n      0x20\n        /* \"#utility.yul\":16757:16766   */\n      dup3\n        /* \"#utility.yul\":16753:16771   */\n      add\n        /* \"#utility.yul\":16745:16771   */\n      swap1\n      pop\n        /* \"#utility.yul\":16781:16873   */\n      tag_833\n        /* \"#utility.yul\":16870:16871   */\n      0x00\n        /* \"#utility.yul\":16859:16868   */\n      dup4\n        /* \"#utility.yul\":16855:16872   */\n      add\n        /* \"#utility.yul\":16846:16852   */\n      dup5\n        /* \"#utility.yul\":16781:16873   */\n      tag_711\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":16616:16880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16886:17199   */\n    tag_563:\n        /* \"#utility.yul\":16999:17003   */\n      0x00\n        /* \"#utility.yul\":17037:17039   */\n      0x20\n        /* \"#utility.yul\":17026:17035   */\n      dup3\n        /* \"#utility.yul\":17022:17040   */\n      add\n        /* \"#utility.yul\":17014:17040   */\n      swap1\n      pop\n        /* \"#utility.yul\":17086:17095   */\n      dup2\n        /* \"#utility.yul\":17080:17084   */\n      dup2\n        /* \"#utility.yul\":17076:17096   */\n      sub\n        /* \"#utility.yul\":17072:17073   */\n      0x00\n        /* \"#utility.yul\":17061:17070   */\n      dup4\n        /* \"#utility.yul\":17057:17074   */\n      add\n        /* \"#utility.yul\":17050:17097   */\n      mstore\n        /* \"#utility.yul\":17114:17192   */\n      tag_835\n        /* \"#utility.yul\":17187:17191   */\n      dup2\n        /* \"#utility.yul\":17178:17184   */\n      dup5\n        /* \"#utility.yul\":17114:17192   */\n      tag_715\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":17106:17192   */\n      swap1\n      pop\n        /* \"#utility.yul\":16886:17199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17205:17624   */\n    tag_492:\n        /* \"#utility.yul\":17371:17375   */\n      0x00\n        /* \"#utility.yul\":17409:17411   */\n      0x20\n        /* \"#utility.yul\":17398:17407   */\n      dup3\n        /* \"#utility.yul\":17394:17412   */\n      add\n        /* \"#utility.yul\":17386:17412   */\n      swap1\n      pop\n        /* \"#utility.yul\":17458:17467   */\n      dup2\n        /* \"#utility.yul\":17452:17456   */\n      dup2\n        /* \"#utility.yul\":17448:17468   */\n      sub\n        /* \"#utility.yul\":17444:17445   */\n      0x00\n        /* \"#utility.yul\":17433:17442   */\n      dup4\n        /* \"#utility.yul\":17429:17446   */\n      add\n        /* \"#utility.yul\":17422:17469   */\n      mstore\n        /* \"#utility.yul\":17486:17617   */\n      tag_837\n        /* \"#utility.yul\":17612:17616   */\n      dup2\n        /* \"#utility.yul\":17486:17617   */\n      tag_724\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":17478:17617   */\n      swap1\n      pop\n        /* \"#utility.yul\":17205:17624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17630:18049   */\n    tag_251:\n        /* \"#utility.yul\":17796:17800   */\n      0x00\n        /* \"#utility.yul\":17834:17836   */\n      0x20\n        /* \"#utility.yul\":17823:17832   */\n      dup3\n        /* \"#utility.yul\":17819:17837   */\n      add\n        /* \"#utility.yul\":17811:17837   */\n      swap1\n      pop\n        /* \"#utility.yul\":17883:17892   */\n      dup2\n        /* \"#utility.yul\":17877:17881   */\n      dup2\n        /* \"#utility.yul\":17873:17893   */\n      sub\n        /* \"#utility.yul\":17869:17870   */\n      0x00\n        /* \"#utility.yul\":17858:17867   */\n      dup4\n        /* \"#utility.yul\":17854:17871   */\n      add\n        /* \"#utility.yul\":17847:17894   */\n      mstore\n        /* \"#utility.yul\":17911:18042   */\n      tag_839\n        /* \"#utility.yul\":18037:18041   */\n      dup2\n        /* \"#utility.yul\":17911:18042   */\n      tag_729\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":17903:18042   */\n      swap1\n      pop\n        /* \"#utility.yul\":17630:18049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18055:18474   */\n    tag_305:\n        /* \"#utility.yul\":18221:18225   */\n      0x00\n        /* \"#utility.yul\":18259:18261   */\n      0x20\n        /* \"#utility.yul\":18248:18257   */\n      dup3\n        /* \"#utility.yul\":18244:18262   */\n      add\n        /* \"#utility.yul\":18236:18262   */\n      swap1\n      pop\n        /* \"#utility.yul\":18308:18317   */\n      dup2\n        /* \"#utility.yul\":18302:18306   */\n      dup2\n        /* \"#utility.yul\":18298:18318   */\n      sub\n        /* \"#utility.yul\":18294:18295   */\n      0x00\n        /* \"#utility.yul\":18283:18292   */\n      dup4\n        /* \"#utility.yul\":18279:18296   */\n      add\n        /* \"#utility.yul\":18272:18319   */\n      mstore\n        /* \"#utility.yul\":18336:18467   */\n      tag_841\n        /* \"#utility.yul\":18462:18466   */\n      dup2\n        /* \"#utility.yul\":18336:18467   */\n      tag_734\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":18328:18467   */\n      swap1\n      pop\n        /* \"#utility.yul\":18055:18474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18480:18899   */\n    tag_536:\n        /* \"#utility.yul\":18646:18650   */\n      0x00\n        /* \"#utility.yul\":18684:18686   */\n      0x20\n        /* \"#utility.yul\":18673:18682   */\n      dup3\n        /* \"#utility.yul\":18669:18687   */\n      add\n        /* \"#utility.yul\":18661:18687   */\n      swap1\n      pop\n        /* \"#utility.yul\":18733:18742   */\n      dup2\n        /* \"#utility.yul\":18727:18731   */\n      dup2\n        /* \"#utility.yul\":18723:18743   */\n      sub\n        /* \"#utility.yul\":18719:18720   */\n      0x00\n        /* \"#utility.yul\":18708:18717   */\n      dup4\n        /* \"#utility.yul\":18704:18721   */\n      add\n        /* \"#utility.yul\":18697:18744   */\n      mstore\n        /* \"#utility.yul\":18761:18892   */\n      tag_843\n        /* \"#utility.yul\":18887:18891   */\n      dup2\n        /* \"#utility.yul\":18761:18892   */\n      tag_739\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":18753:18892   */\n      swap1\n      pop\n        /* \"#utility.yul\":18480:18899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18905:19324   */\n    tag_585:\n        /* \"#utility.yul\":19071:19075   */\n      0x00\n        /* \"#utility.yul\":19109:19111   */\n      0x20\n        /* \"#utility.yul\":19098:19107   */\n      dup3\n        /* \"#utility.yul\":19094:19112   */\n      add\n        /* \"#utility.yul\":19086:19112   */\n      swap1\n      pop\n        /* \"#utility.yul\":19158:19167   */\n      dup2\n        /* \"#utility.yul\":19152:19156   */\n      dup2\n        /* \"#utility.yul\":19148:19168   */\n      sub\n        /* \"#utility.yul\":19144:19145   */\n      0x00\n        /* \"#utility.yul\":19133:19142   */\n      dup4\n        /* \"#utility.yul\":19129:19146   */\n      add\n        /* \"#utility.yul\":19122:19169   */\n      mstore\n        /* \"#utility.yul\":19186:19317   */\n      tag_845\n        /* \"#utility.yul\":19312:19316   */\n      dup2\n        /* \"#utility.yul\":19186:19317   */\n      tag_744\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":19178:19317   */\n      swap1\n      pop\n        /* \"#utility.yul\":18905:19324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19330:19749   */\n    tag_284:\n        /* \"#utility.yul\":19496:19500   */\n      0x00\n        /* \"#utility.yul\":19534:19536   */\n      0x20\n        /* \"#utility.yul\":19523:19532   */\n      dup3\n        /* \"#utility.yul\":19519:19537   */\n      add\n        /* \"#utility.yul\":19511:19537   */\n      swap1\n      pop\n        /* \"#utility.yul\":19583:19592   */\n      dup2\n        /* \"#utility.yul\":19577:19581   */\n      dup2\n        /* \"#utility.yul\":19573:19593   */\n      sub\n        /* \"#utility.yul\":19569:19570   */\n      0x00\n        /* \"#utility.yul\":19558:19567   */\n      dup4\n        /* \"#utility.yul\":19554:19571   */\n      add\n        /* \"#utility.yul\":19547:19594   */\n      mstore\n        /* \"#utility.yul\":19611:19742   */\n      tag_847\n        /* \"#utility.yul\":19737:19741   */\n      dup2\n        /* \"#utility.yul\":19611:19742   */\n      tag_749\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":19603:19742   */\n      swap1\n      pop\n        /* \"#utility.yul\":19330:19749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19755:20174   */\n    tag_466:\n        /* \"#utility.yul\":19921:19925   */\n      0x00\n        /* \"#utility.yul\":19959:19961   */\n      0x20\n        /* \"#utility.yul\":19948:19957   */\n      dup3\n        /* \"#utility.yul\":19944:19962   */\n      add\n        /* \"#utility.yul\":19936:19962   */\n      swap1\n      pop\n        /* \"#utility.yul\":20008:20017   */\n      dup2\n        /* \"#utility.yul\":20002:20006   */\n      dup2\n        /* \"#utility.yul\":19998:20018   */\n      sub\n        /* \"#utility.yul\":19994:19995   */\n      0x00\n        /* \"#utility.yul\":19983:19992   */\n      dup4\n        /* \"#utility.yul\":19979:19996   */\n      add\n        /* \"#utility.yul\":19972:20019   */\n      mstore\n        /* \"#utility.yul\":20036:20167   */\n      tag_849\n        /* \"#utility.yul\":20162:20166   */\n      dup2\n        /* \"#utility.yul\":20036:20167   */\n      tag_754\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":20028:20167   */\n      swap1\n      pop\n        /* \"#utility.yul\":19755:20174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20180:20599   */\n    tag_524:\n        /* \"#utility.yul\":20346:20350   */\n      0x00\n        /* \"#utility.yul\":20384:20386   */\n      0x20\n        /* \"#utility.yul\":20373:20382   */\n      dup3\n        /* \"#utility.yul\":20369:20387   */\n      add\n        /* \"#utility.yul\":20361:20387   */\n      swap1\n      pop\n        /* \"#utility.yul\":20433:20442   */\n      dup2\n        /* \"#utility.yul\":20427:20431   */\n      dup2\n        /* \"#utility.yul\":20423:20443   */\n      sub\n        /* \"#utility.yul\":20419:20420   */\n      0x00\n        /* \"#utility.yul\":20408:20417   */\n      dup4\n        /* \"#utility.yul\":20404:20421   */\n      add\n        /* \"#utility.yul\":20397:20444   */\n      mstore\n        /* \"#utility.yul\":20461:20592   */\n      tag_851\n        /* \"#utility.yul\":20587:20591   */\n      dup2\n        /* \"#utility.yul\":20461:20592   */\n      tag_759\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":20453:20592   */\n      swap1\n      pop\n        /* \"#utility.yul\":20180:20599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20605:21024   */\n    tag_189:\n        /* \"#utility.yul\":20771:20775   */\n      0x00\n        /* \"#utility.yul\":20809:20811   */\n      0x20\n        /* \"#utility.yul\":20798:20807   */\n      dup3\n        /* \"#utility.yul\":20794:20812   */\n      add\n        /* \"#utility.yul\":20786:20812   */\n      swap1\n      pop\n        /* \"#utility.yul\":20858:20867   */\n      dup2\n        /* \"#utility.yul\":20852:20856   */\n      dup2\n        /* \"#utility.yul\":20848:20868   */\n      sub\n        /* \"#utility.yul\":20844:20845   */\n      0x00\n        /* \"#utility.yul\":20833:20842   */\n      dup4\n        /* \"#utility.yul\":20829:20846   */\n      add\n        /* \"#utility.yul\":20822:20869   */\n      mstore\n        /* \"#utility.yul\":20886:21017   */\n      tag_853\n        /* \"#utility.yul\":21012:21016   */\n      dup2\n        /* \"#utility.yul\":20886:21017   */\n      tag_764\n      jump\t// in\n    tag_853:\n        /* \"#utility.yul\":20878:21017   */\n      swap1\n      pop\n        /* \"#utility.yul\":20605:21024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21030:21449   */\n    tag_446:\n        /* \"#utility.yul\":21196:21200   */\n      0x00\n        /* \"#utility.yul\":21234:21236   */\n      0x20\n        /* \"#utility.yul\":21223:21232   */\n      dup3\n        /* \"#utility.yul\":21219:21237   */\n      add\n        /* \"#utility.yul\":21211:21237   */\n      swap1\n      pop\n        /* \"#utility.yul\":21283:21292   */\n      dup2\n        /* \"#utility.yul\":21277:21281   */\n      dup2\n        /* \"#utility.yul\":21273:21293   */\n      sub\n        /* \"#utility.yul\":21269:21270   */\n      0x00\n        /* \"#utility.yul\":21258:21267   */\n      dup4\n        /* \"#utility.yul\":21254:21271   */\n      add\n        /* \"#utility.yul\":21247:21294   */\n      mstore\n        /* \"#utility.yul\":21311:21442   */\n      tag_855\n        /* \"#utility.yul\":21437:21441   */\n      dup2\n        /* \"#utility.yul\":21311:21442   */\n      tag_769\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":21303:21442   */\n      swap1\n      pop\n        /* \"#utility.yul\":21030:21449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21455:21874   */\n    tag_590:\n        /* \"#utility.yul\":21621:21625   */\n      0x00\n        /* \"#utility.yul\":21659:21661   */\n      0x20\n        /* \"#utility.yul\":21648:21657   */\n      dup3\n        /* \"#utility.yul\":21644:21662   */\n      add\n        /* \"#utility.yul\":21636:21662   */\n      swap1\n      pop\n        /* \"#utility.yul\":21708:21717   */\n      dup2\n        /* \"#utility.yul\":21702:21706   */\n      dup2\n        /* \"#utility.yul\":21698:21718   */\n      sub\n        /* \"#utility.yul\":21694:21695   */\n      0x00\n        /* \"#utility.yul\":21683:21692   */\n      dup4\n        /* \"#utility.yul\":21679:21696   */\n      add\n        /* \"#utility.yul\":21672:21719   */\n      mstore\n        /* \"#utility.yul\":21736:21867   */\n      tag_857\n        /* \"#utility.yul\":21862:21866   */\n      dup2\n        /* \"#utility.yul\":21736:21867   */\n      tag_774\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":21728:21867   */\n      swap1\n      pop\n        /* \"#utility.yul\":21455:21874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21880:22299   */\n    tag_198:\n        /* \"#utility.yul\":22046:22050   */\n      0x00\n        /* \"#utility.yul\":22084:22086   */\n      0x20\n        /* \"#utility.yul\":22073:22082   */\n      dup3\n        /* \"#utility.yul\":22069:22087   */\n      add\n        /* \"#utility.yul\":22061:22087   */\n      swap1\n      pop\n        /* \"#utility.yul\":22133:22142   */\n      dup2\n        /* \"#utility.yul\":22127:22131   */\n      dup2\n        /* \"#utility.yul\":22123:22143   */\n      sub\n        /* \"#utility.yul\":22119:22120   */\n      0x00\n        /* \"#utility.yul\":22108:22117   */\n      dup4\n        /* \"#utility.yul\":22104:22121   */\n      add\n        /* \"#utility.yul\":22097:22144   */\n      mstore\n        /* \"#utility.yul\":22161:22292   */\n      tag_859\n        /* \"#utility.yul\":22287:22291   */\n      dup2\n        /* \"#utility.yul\":22161:22292   */\n      tag_779\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":22153:22292   */\n      swap1\n      pop\n        /* \"#utility.yul\":21880:22299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22305:22724   */\n    tag_578:\n        /* \"#utility.yul\":22471:22475   */\n      0x00\n        /* \"#utility.yul\":22509:22511   */\n      0x20\n        /* \"#utility.yul\":22498:22507   */\n      dup3\n        /* \"#utility.yul\":22494:22512   */\n      add\n        /* \"#utility.yul\":22486:22512   */\n      swap1\n      pop\n        /* \"#utility.yul\":22558:22567   */\n      dup2\n        /* \"#utility.yul\":22552:22556   */\n      dup2\n        /* \"#utility.yul\":22548:22568   */\n      sub\n        /* \"#utility.yul\":22544:22545   */\n      0x00\n        /* \"#utility.yul\":22533:22542   */\n      dup4\n        /* \"#utility.yul\":22529:22546   */\n      add\n        /* \"#utility.yul\":22522:22569   */\n      mstore\n        /* \"#utility.yul\":22586:22717   */\n      tag_861\n        /* \"#utility.yul\":22712:22716   */\n      dup2\n        /* \"#utility.yul\":22586:22717   */\n      tag_784\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":22578:22717   */\n      swap1\n      pop\n        /* \"#utility.yul\":22305:22724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22730:23149   */\n    tag_349:\n        /* \"#utility.yul\":22896:22900   */\n      0x00\n        /* \"#utility.yul\":22934:22936   */\n      0x20\n        /* \"#utility.yul\":22923:22932   */\n      dup3\n        /* \"#utility.yul\":22919:22937   */\n      add\n        /* \"#utility.yul\":22911:22937   */\n      swap1\n      pop\n        /* \"#utility.yul\":22983:22992   */\n      dup2\n        /* \"#utility.yul\":22977:22981   */\n      dup2\n        /* \"#utility.yul\":22973:22993   */\n      sub\n        /* \"#utility.yul\":22969:22970   */\n      0x00\n        /* \"#utility.yul\":22958:22967   */\n      dup4\n        /* \"#utility.yul\":22954:22971   */\n      add\n        /* \"#utility.yul\":22947:22994   */\n      mstore\n        /* \"#utility.yul\":23011:23142   */\n      tag_863\n        /* \"#utility.yul\":23137:23141   */\n      dup2\n        /* \"#utility.yul\":23011:23142   */\n      tag_789\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":23003:23142   */\n      swap1\n      pop\n        /* \"#utility.yul\":22730:23149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23155:23574   */\n    tag_556:\n        /* \"#utility.yul\":23321:23325   */\n      0x00\n        /* \"#utility.yul\":23359:23361   */\n      0x20\n        /* \"#utility.yul\":23348:23357   */\n      dup3\n        /* \"#utility.yul\":23344:23362   */\n      add\n        /* \"#utility.yul\":23336:23362   */\n      swap1\n      pop\n        /* \"#utility.yul\":23408:23417   */\n      dup2\n        /* \"#utility.yul\":23402:23406   */\n      dup2\n        /* \"#utility.yul\":23398:23418   */\n      sub\n        /* \"#utility.yul\":23394:23395   */\n      0x00\n        /* \"#utility.yul\":23383:23392   */\n      dup4\n        /* \"#utility.yul\":23379:23396   */\n      add\n        /* \"#utility.yul\":23372:23419   */\n      mstore\n        /* \"#utility.yul\":23436:23567   */\n      tag_865\n        /* \"#utility.yul\":23562:23566   */\n      dup2\n        /* \"#utility.yul\":23436:23567   */\n      tag_794\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":23428:23567   */\n      swap1\n      pop\n        /* \"#utility.yul\":23155:23574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23580:23999   */\n    tag_325:\n        /* \"#utility.yul\":23746:23750   */\n      0x00\n        /* \"#utility.yul\":23784:23786   */\n      0x20\n        /* \"#utility.yul\":23773:23782   */\n      dup3\n        /* \"#utility.yul\":23769:23787   */\n      add\n        /* \"#utility.yul\":23761:23787   */\n      swap1\n      pop\n        /* \"#utility.yul\":23833:23842   */\n      dup2\n        /* \"#utility.yul\":23827:23831   */\n      dup2\n        /* \"#utility.yul\":23823:23843   */\n      sub\n        /* \"#utility.yul\":23819:23820   */\n      0x00\n        /* \"#utility.yul\":23808:23817   */\n      dup4\n        /* \"#utility.yul\":23804:23821   */\n      add\n        /* \"#utility.yul\":23797:23844   */\n      mstore\n        /* \"#utility.yul\":23861:23992   */\n      tag_867\n        /* \"#utility.yul\":23987:23991   */\n      dup2\n        /* \"#utility.yul\":23861:23992   */\n      tag_799\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":23853:23992   */\n      swap1\n      pop\n        /* \"#utility.yul\":23580:23999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24005:24227   */\n    tag_51:\n        /* \"#utility.yul\":24098:24102   */\n      0x00\n        /* \"#utility.yul\":24136:24138   */\n      0x20\n        /* \"#utility.yul\":24125:24134   */\n      dup3\n        /* \"#utility.yul\":24121:24139   */\n      add\n        /* \"#utility.yul\":24113:24139   */\n      swap1\n      pop\n        /* \"#utility.yul\":24149:24220   */\n      tag_869\n        /* \"#utility.yul\":24217:24218   */\n      0x00\n        /* \"#utility.yul\":24206:24215   */\n      dup4\n        /* \"#utility.yul\":24202:24219   */\n      add\n        /* \"#utility.yul\":24193:24199   */\n      dup5\n        /* \"#utility.yul\":24149:24220   */\n      tag_804\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":24005:24227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24233:24565   */\n    tag_157:\n        /* \"#utility.yul\":24354:24358   */\n      0x00\n        /* \"#utility.yul\":24392:24394   */\n      0x40\n        /* \"#utility.yul\":24381:24390   */\n      dup3\n        /* \"#utility.yul\":24377:24395   */\n      add\n        /* \"#utility.yul\":24369:24395   */\n      swap1\n      pop\n        /* \"#utility.yul\":24405:24476   */\n      tag_871\n        /* \"#utility.yul\":24473:24474   */\n      0x00\n        /* \"#utility.yul\":24462:24471   */\n      dup4\n        /* \"#utility.yul\":24458:24475   */\n      add\n        /* \"#utility.yul\":24449:24455   */\n      dup6\n        /* \"#utility.yul\":24405:24476   */\n      tag_804\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":24486:24558   */\n      tag_872\n        /* \"#utility.yul\":24554:24556   */\n      0x20\n        /* \"#utility.yul\":24543:24552   */\n      dup4\n        /* \"#utility.yul\":24539:24557   */\n      add\n        /* \"#utility.yul\":24530:24536   */\n      dup5\n        /* \"#utility.yul\":24486:24558   */\n      tag_804\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":24233:24565   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24652:24750   */\n    tag_698:\n        /* \"#utility.yul\":24703:24709   */\n      0x00\n        /* \"#utility.yul\":24737:24742   */\n      dup2\n        /* \"#utility.yul\":24731:24743   */\n      mload\n        /* \"#utility.yul\":24721:24743   */\n      swap1\n      pop\n        /* \"#utility.yul\":24652:24750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24756:24855   */\n    tag_718:\n        /* \"#utility.yul\":24808:24814   */\n      0x00\n        /* \"#utility.yul\":24842:24847   */\n      dup2\n        /* \"#utility.yul\":24836:24848   */\n      mload\n        /* \"#utility.yul\":24826:24848   */\n      swap1\n      pop\n        /* \"#utility.yul\":24756:24855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24861:25008   */\n    tag_700:\n        /* \"#utility.yul\":24962:24973   */\n      0x00\n        /* \"#utility.yul\":24999:25002   */\n      dup2\n        /* \"#utility.yul\":24984:25002   */\n      swap1\n      pop\n        /* \"#utility.yul\":24861:25008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25014:25183   */\n    tag_720:\n        /* \"#utility.yul\":25098:25109   */\n      0x00\n        /* \"#utility.yul\":25132:25138   */\n      dup3\n        /* \"#utility.yul\":25127:25130   */\n      dup3\n        /* \"#utility.yul\":25120:25139   */\n      mstore\n        /* \"#utility.yul\":25172:25176   */\n      0x20\n        /* \"#utility.yul\":25167:25170   */\n      dup3\n        /* \"#utility.yul\":25163:25177   */\n      add\n        /* \"#utility.yul\":25148:25177   */\n      swap1\n      pop\n        /* \"#utility.yul\":25014:25183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25189:25494   */\n    tag_533:\n        /* \"#utility.yul\":25229:25232   */\n      0x00\n        /* \"#utility.yul\":25248:25268   */\n      tag_880\n        /* \"#utility.yul\":25266:25267   */\n      dup3\n        /* \"#utility.yul\":25248:25268   */\n      tag_807\n      jump\t// in\n    tag_880:\n        /* \"#utility.yul\":25243:25268   */\n      swap2\n      pop\n        /* \"#utility.yul\":25282:25302   */\n      tag_881\n        /* \"#utility.yul\":25300:25301   */\n      dup4\n        /* \"#utility.yul\":25282:25302   */\n      tag_807\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":25277:25302   */\n      swap3\n      pop\n        /* \"#utility.yul\":25436:25437   */\n      dup3\n        /* \"#utility.yul\":25368:25434   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25364:25438   */\n      sub\n        /* \"#utility.yul\":25361:25362   */\n      dup3\n        /* \"#utility.yul\":25358:25439   */\n      gt\n        /* \"#utility.yul\":25355:25462   */\n      iszero\n      tag_882\n      jumpi\n        /* \"#utility.yul\":25442:25460   */\n      tag_883\n      tag_884\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":25355:25462   */\n    tag_882:\n        /* \"#utility.yul\":25486:25487   */\n      dup3\n        /* \"#utility.yul\":25483:25484   */\n      dup3\n        /* \"#utility.yul\":25479:25488   */\n      add\n        /* \"#utility.yul\":25472:25488   */\n      swap1\n      pop\n        /* \"#utility.yul\":25189:25494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25500:25685   */\n    tag_521:\n        /* \"#utility.yul\":25540:25541   */\n      0x00\n        /* \"#utility.yul\":25557:25577   */\n      tag_886\n        /* \"#utility.yul\":25575:25576   */\n      dup3\n        /* \"#utility.yul\":25557:25577   */\n      tag_807\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":25552:25577   */\n      swap2\n      pop\n        /* \"#utility.yul\":25591:25611   */\n      tag_887\n        /* \"#utility.yul\":25609:25610   */\n      dup4\n        /* \"#utility.yul\":25591:25611   */\n      tag_807\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":25586:25611   */\n      swap3\n      pop\n        /* \"#utility.yul\":25630:25631   */\n      dup3\n        /* \"#utility.yul\":25620:25655   */\n      tag_888\n      jumpi\n        /* \"#utility.yul\":25635:25653   */\n      tag_889\n      tag_890\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":25620:25655   */\n    tag_888:\n        /* \"#utility.yul\":25677:25678   */\n      dup3\n        /* \"#utility.yul\":25674:25675   */\n      dup3\n        /* \"#utility.yul\":25670:25679   */\n      div\n        /* \"#utility.yul\":25665:25679   */\n      swap1\n      pop\n        /* \"#utility.yul\":25500:25685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25691:26039   */\n    tag_519:\n        /* \"#utility.yul\":25731:25738   */\n      0x00\n        /* \"#utility.yul\":25754:25774   */\n      tag_892\n        /* \"#utility.yul\":25772:25773   */\n      dup3\n        /* \"#utility.yul\":25754:25774   */\n      tag_807\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":25749:25774   */\n      swap2\n      pop\n        /* \"#utility.yul\":25788:25808   */\n      tag_893\n        /* \"#utility.yul\":25806:25807   */\n      dup4\n        /* \"#utility.yul\":25788:25808   */\n      tag_807\n      jump\t// in\n    tag_893:\n        /* \"#utility.yul\":25783:25808   */\n      swap3\n      pop\n        /* \"#utility.yul\":25976:25977   */\n      dup2\n        /* \"#utility.yul\":25908:25974   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25904:25978   */\n      div\n        /* \"#utility.yul\":25901:25902   */\n      dup4\n        /* \"#utility.yul\":25898:25979   */\n      gt\n        /* \"#utility.yul\":25893:25894   */\n      dup3\n        /* \"#utility.yul\":25886:25895   */\n      iszero\n        /* \"#utility.yul\":25879:25896   */\n      iszero\n        /* \"#utility.yul\":25875:25980   */\n      and\n        /* \"#utility.yul\":25872:26003   */\n      iszero\n      tag_894\n      jumpi\n        /* \"#utility.yul\":25983:26001   */\n      tag_895\n      tag_884\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":25872:26003   */\n    tag_894:\n        /* \"#utility.yul\":26031:26032   */\n      dup3\n        /* \"#utility.yul\":26028:26029   */\n      dup3\n        /* \"#utility.yul\":26024:26033   */\n      mul\n        /* \"#utility.yul\":26013:26033   */\n      swap1\n      pop\n        /* \"#utility.yul\":25691:26039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26045:26236   */\n    tag_569:\n        /* \"#utility.yul\":26085:26089   */\n      0x00\n        /* \"#utility.yul\":26105:26125   */\n      tag_897\n        /* \"#utility.yul\":26123:26124   */\n      dup3\n        /* \"#utility.yul\":26105:26125   */\n      tag_807\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":26100:26125   */\n      swap2\n      pop\n        /* \"#utility.yul\":26139:26159   */\n      tag_898\n        /* \"#utility.yul\":26157:26158   */\n      dup4\n        /* \"#utility.yul\":26139:26159   */\n      tag_807\n      jump\t// in\n    tag_898:\n        /* \"#utility.yul\":26134:26159   */\n      swap3\n      pop\n        /* \"#utility.yul\":26178:26179   */\n      dup3\n        /* \"#utility.yul\":26175:26176   */\n      dup3\n        /* \"#utility.yul\":26172:26180   */\n      lt\n        /* \"#utility.yul\":26169:26203   */\n      iszero\n      tag_899\n      jumpi\n        /* \"#utility.yul\":26183:26201   */\n      tag_900\n      tag_884\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":26169:26203   */\n    tag_899:\n        /* \"#utility.yul\":26228:26229   */\n      dup3\n        /* \"#utility.yul\":26225:26226   */\n      dup3\n        /* \"#utility.yul\":26221:26230   */\n      sub\n        /* \"#utility.yul\":26213:26230   */\n      swap1\n      pop\n        /* \"#utility.yul\":26045:26236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26242:26338   */\n    tag_694:\n        /* \"#utility.yul\":26279:26286   */\n      0x00\n        /* \"#utility.yul\":26308:26332   */\n      tag_902\n        /* \"#utility.yul\":26326:26331   */\n      dup3\n        /* \"#utility.yul\":26308:26332   */\n      tag_903\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":26297:26332   */\n      swap1\n      pop\n        /* \"#utility.yul\":26242:26338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26344:26434   */\n    tag_904:\n        /* \"#utility.yul\":26378:26385   */\n      0x00\n        /* \"#utility.yul\":26421:26426   */\n      dup2\n        /* \"#utility.yul\":26414:26427   */\n      iszero\n        /* \"#utility.yul\":26407:26428   */\n      iszero\n        /* \"#utility.yul\":26396:26428   */\n      swap1\n      pop\n        /* \"#utility.yul\":26344:26434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26440:26550   */\n    tag_906:\n        /* \"#utility.yul\":26491:26498   */\n      0x00\n        /* \"#utility.yul\":26520:26544   */\n      tag_908\n        /* \"#utility.yul\":26538:26543   */\n      dup3\n        /* \"#utility.yul\":26520:26544   */\n      tag_694\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":26509:26544   */\n      swap1\n      pop\n        /* \"#utility.yul\":26440:26550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26556:26667   */\n    tag_909:\n        /* \"#utility.yul\":26608:26615   */\n      0x00\n        /* \"#utility.yul\":26637:26661   */\n      tag_911\n        /* \"#utility.yul\":26655:26660   */\n      dup3\n        /* \"#utility.yul\":26637:26661   */\n      tag_694\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":26626:26661   */\n      swap1\n      pop\n        /* \"#utility.yul\":26556:26667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26673:26790   */\n    tag_912:\n        /* \"#utility.yul\":26731:26738   */\n      0x00\n        /* \"#utility.yul\":26760:26784   */\n      tag_914\n        /* \"#utility.yul\":26778:26783   */\n      dup3\n        /* \"#utility.yul\":26760:26784   */\n      tag_694\n      jump\t// in\n    tag_914:\n        /* \"#utility.yul\":26749:26784   */\n      swap1\n      pop\n        /* \"#utility.yul\":26673:26790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26796:26922   */\n    tag_903:\n        /* \"#utility.yul\":26833:26840   */\n      0x00\n        /* \"#utility.yul\":26873:26915   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26866:26871   */\n      dup3\n        /* \"#utility.yul\":26862:26916   */\n      and\n        /* \"#utility.yul\":26851:26916   */\n      swap1\n      pop\n        /* \"#utility.yul\":26796:26922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26928:27005   */\n    tag_807:\n        /* \"#utility.yul\":26965:26972   */\n      0x00\n        /* \"#utility.yul\":26994:26999   */\n      dup2\n        /* \"#utility.yul\":26983:26999   */\n      swap1\n      pop\n        /* \"#utility.yul\":26928:27005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27011:27151   */\n    tag_706:\n        /* \"#utility.yul\":27075:27084   */\n      0x00\n        /* \"#utility.yul\":27108:27145   */\n      tag_918\n        /* \"#utility.yul\":27139:27144   */\n      dup3\n        /* \"#utility.yul\":27108:27145   */\n      tag_919\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":27095:27145   */\n      swap1\n      pop\n        /* \"#utility.yul\":27011:27151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27157:27298   */\n    tag_710:\n        /* \"#utility.yul\":27222:27231   */\n      0x00\n        /* \"#utility.yul\":27255:27292   */\n      tag_921\n        /* \"#utility.yul\":27286:27291   */\n      dup3\n        /* \"#utility.yul\":27255:27292   */\n      tag_919\n      jump\t// in\n    tag_921:\n        /* \"#utility.yul\":27242:27292   */\n      swap1\n      pop\n        /* \"#utility.yul\":27157:27298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27304:27451   */\n    tag_714:\n        /* \"#utility.yul\":27375:27384   */\n      0x00\n        /* \"#utility.yul\":27408:27445   */\n      tag_923\n        /* \"#utility.yul\":27439:27444   */\n      dup3\n        /* \"#utility.yul\":27408:27445   */\n      tag_919\n      jump\t// in\n    tag_923:\n        /* \"#utility.yul\":27395:27445   */\n      swap1\n      pop\n        /* \"#utility.yul\":27304:27451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27457:27583   */\n    tag_919:\n        /* \"#utility.yul\":27507:27516   */\n      0x00\n        /* \"#utility.yul\":27540:27577   */\n      tag_925\n        /* \"#utility.yul\":27571:27576   */\n      dup3\n        /* \"#utility.yul\":27540:27577   */\n      tag_926\n      jump\t// in\n    tag_925:\n        /* \"#utility.yul\":27527:27577   */\n      swap1\n      pop\n        /* \"#utility.yul\":27457:27583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27589:27702   */\n    tag_926:\n        /* \"#utility.yul\":27639:27648   */\n      0x00\n        /* \"#utility.yul\":27672:27696   */\n      tag_928\n        /* \"#utility.yul\":27690:27695   */\n      dup3\n        /* \"#utility.yul\":27672:27696   */\n      tag_903\n      jump\t// in\n    tag_928:\n        /* \"#utility.yul\":27659:27696   */\n      swap1\n      pop\n        /* \"#utility.yul\":27589:27702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27708:28015   */\n    tag_702:\n        /* \"#utility.yul\":27776:27777   */\n      0x00\n        /* \"#utility.yul\":27786:27899   */\n    tag_930:\n        /* \"#utility.yul\":27800:27806   */\n      dup4\n        /* \"#utility.yul\":27797:27798   */\n      dup2\n        /* \"#utility.yul\":27794:27807   */\n      lt\n        /* \"#utility.yul\":27786:27899   */\n      iszero\n      tag_932\n      jumpi\n        /* \"#utility.yul\":27885:27886   */\n      dup1\n        /* \"#utility.yul\":27880:27883   */\n      dup3\n        /* \"#utility.yul\":27876:27887   */\n      add\n        /* \"#utility.yul\":27870:27888   */\n      mload\n        /* \"#utility.yul\":27866:27867   */\n      dup2\n        /* \"#utility.yul\":27861:27864   */\n      dup5\n        /* \"#utility.yul\":27857:27868   */\n      add\n        /* \"#utility.yul\":27850:27889   */\n      mstore\n        /* \"#utility.yul\":27822:27824   */\n      0x20\n        /* \"#utility.yul\":27819:27820   */\n      dup2\n        /* \"#utility.yul\":27815:27825   */\n      add\n        /* \"#utility.yul\":27810:27825   */\n      swap1\n      pop\n        /* \"#utility.yul\":27786:27899   */\n      jump(tag_930)\n    tag_932:\n        /* \"#utility.yul\":27917:27923   */\n      dup4\n        /* \"#utility.yul\":27914:27915   */\n      dup2\n        /* \"#utility.yul\":27911:27924   */\n      gt\n        /* \"#utility.yul\":27908:28009   */\n      iszero\n      tag_933\n      jumpi\n        /* \"#utility.yul\":27997:27998   */\n      0x00\n        /* \"#utility.yul\":27988:27994   */\n      dup5\n        /* \"#utility.yul\":27983:27986   */\n      dup5\n        /* \"#utility.yul\":27979:27995   */\n      add\n        /* \"#utility.yul\":27972:27999   */\n      mstore\n        /* \"#utility.yul\":27908:28009   */\n    tag_933:\n        /* \"#utility.yul\":27757:28015   */\n      pop\n        /* \"#utility.yul\":27708:28015   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28021:28254   */\n    tag_401:\n        /* \"#utility.yul\":28060:28063   */\n      0x00\n        /* \"#utility.yul\":28083:28107   */\n      tag_935\n        /* \"#utility.yul\":28101:28106   */\n      dup3\n        /* \"#utility.yul\":28083:28107   */\n      tag_807\n      jump\t// in\n    tag_935:\n        /* \"#utility.yul\":28074:28107   */\n      swap2\n      pop\n        /* \"#utility.yul\":28129:28195   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":28122:28127   */\n      dup3\n        /* \"#utility.yul\":28119:28196   */\n      eq\n        /* \"#utility.yul\":28116:28219   */\n      iszero\n      tag_936\n      jumpi\n        /* \"#utility.yul\":28199:28217   */\n      tag_937\n      tag_884\n      jump\t// in\n    tag_937:\n        /* \"#utility.yul\":28116:28219   */\n    tag_936:\n        /* \"#utility.yul\":28246:28247   */\n      0x01\n        /* \"#utility.yul\":28239:28244   */\n      dup3\n        /* \"#utility.yul\":28235:28248   */\n      add\n        /* \"#utility.yul\":28228:28248   */\n      swap1\n      pop\n        /* \"#utility.yul\":28021:28254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28260:28440   */\n    tag_884:\n        /* \"#utility.yul\":28308:28385   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28305:28306   */\n      0x00\n        /* \"#utility.yul\":28298:28386   */\n      mstore\n        /* \"#utility.yul\":28405:28409   */\n      0x11\n        /* \"#utility.yul\":28402:28403   */\n      0x04\n        /* \"#utility.yul\":28395:28410   */\n      mstore\n        /* \"#utility.yul\":28429:28433   */\n      0x24\n        /* \"#utility.yul\":28426:28427   */\n      0x00\n        /* \"#utility.yul\":28419:28434   */\n      revert\n        /* \"#utility.yul\":28446:28626   */\n    tag_890:\n        /* \"#utility.yul\":28494:28571   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28491:28492   */\n      0x00\n        /* \"#utility.yul\":28484:28572   */\n      mstore\n        /* \"#utility.yul\":28591:28595   */\n      0x12\n        /* \"#utility.yul\":28588:28589   */\n      0x04\n        /* \"#utility.yul\":28581:28596   */\n      mstore\n        /* \"#utility.yul\":28615:28619   */\n      0x24\n        /* \"#utility.yul\":28612:28613   */\n      0x00\n        /* \"#utility.yul\":28605:28620   */\n      revert\n        /* \"#utility.yul\":28632:28812   */\n    tag_194:\n        /* \"#utility.yul\":28680:28757   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28677:28678   */\n      0x00\n        /* \"#utility.yul\":28670:28758   */\n      mstore\n        /* \"#utility.yul\":28777:28781   */\n      0x32\n        /* \"#utility.yul\":28774:28775   */\n      0x04\n        /* \"#utility.yul\":28767:28782   */\n      mstore\n        /* \"#utility.yul\":28801:28805   */\n      0x24\n        /* \"#utility.yul\":28798:28799   */\n      0x00\n        /* \"#utility.yul\":28791:28806   */\n      revert\n        /* \"#utility.yul\":28941:29058   */\n    tag_642:\n        /* \"#utility.yul\":29050:29051   */\n      0x00\n        /* \"#utility.yul\":29047:29048   */\n      dup1\n        /* \"#utility.yul\":29040:29052   */\n      revert\n        /* \"#utility.yul\":29064:29166   */\n    tag_723:\n        /* \"#utility.yul\":29105:29111   */\n      0x00\n        /* \"#utility.yul\":29156:29158   */\n      0x1f\n        /* \"#utility.yul\":29152:29159   */\n      not\n        /* \"#utility.yul\":29147:29149   */\n      0x1f\n        /* \"#utility.yul\":29140:29145   */\n      dup4\n        /* \"#utility.yul\":29136:29150   */\n      add\n        /* \"#utility.yul\":29132:29160   */\n      and\n        /* \"#utility.yul\":29122:29160   */\n      swap1\n      pop\n        /* \"#utility.yul\":29064:29166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29172:29397   */\n    tag_728:\n        /* \"#utility.yul\":29312:29346   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":29308:29309   */\n      0x00\n        /* \"#utility.yul\":29300:29306   */\n      dup3\n        /* \"#utility.yul\":29296:29310   */\n      add\n        /* \"#utility.yul\":29289:29347   */\n      mstore\n        /* \"#utility.yul\":29381:29389   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29376:29378   */\n      0x20\n        /* \"#utility.yul\":29368:29374   */\n      dup3\n        /* \"#utility.yul\":29364:29379   */\n      add\n        /* \"#utility.yul\":29357:29390   */\n      mstore\n        /* \"#utility.yul\":29172:29397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29403:29572   */\n    tag_733:\n        /* \"#utility.yul\":29543:29564   */\n      0x506f776572206973206e6f7420656e6f75676800000000000000000000000000\n        /* \"#utility.yul\":29539:29540   */\n      0x00\n        /* \"#utility.yul\":29531:29537   */\n      dup3\n        /* \"#utility.yul\":29527:29541   */\n      add\n        /* \"#utility.yul\":29520:29565   */\n      mstore\n        /* \"#utility.yul\":29403:29572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29578:29755   */\n    tag_738:\n        /* \"#utility.yul\":29718:29747   */\n      0x776974686472617720506f77657220627920756e7374616b696e670000000000\n        /* \"#utility.yul\":29714:29715   */\n      0x00\n        /* \"#utility.yul\":29706:29712   */\n      dup3\n        /* \"#utility.yul\":29702:29716   */\n      add\n        /* \"#utility.yul\":29695:29748   */\n      mstore\n        /* \"#utility.yul\":29578:29755   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29761:29938   */\n    tag_743:\n        /* \"#utility.yul\":29901:29930   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":29897:29898   */\n      0x00\n        /* \"#utility.yul\":29889:29895   */\n      dup3\n        /* \"#utility.yul\":29885:29899   */\n      add\n        /* \"#utility.yul\":29878:29931   */\n      mstore\n        /* \"#utility.yul\":29761:29938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29944:30169   */\n    tag_748:\n        /* \"#utility.yul\":30084:30118   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":30080:30081   */\n      0x00\n        /* \"#utility.yul\":30072:30078   */\n      dup3\n        /* \"#utility.yul\":30068:30082   */\n      add\n        /* \"#utility.yul\":30061:30119   */\n      mstore\n        /* \"#utility.yul\":30153:30161   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30148:30150   */\n      0x20\n        /* \"#utility.yul\":30140:30146   */\n      dup3\n        /* \"#utility.yul\":30136:30151   */\n      add\n        /* \"#utility.yul\":30129:30162   */\n      mstore\n        /* \"#utility.yul\":29944:30169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30175:30339   */\n    tag_753:\n        /* \"#utility.yul\":30315:30331   */\n      0x416d6f756e74206973207a65726f000000000000000000000000000000000000\n        /* \"#utility.yul\":30311:30312   */\n      0x00\n        /* \"#utility.yul\":30303:30309   */\n      dup3\n        /* \"#utility.yul\":30299:30313   */\n      add\n        /* \"#utility.yul\":30292:30332   */\n      mstore\n        /* \"#utility.yul\":30175:30339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30345:30519   */\n    tag_758:\n        /* \"#utility.yul\":30485:30511   */\n      0x6465706f73697420506f776572206279207374616b696e670000000000000000\n        /* \"#utility.yul\":30481:30482   */\n      0x00\n        /* \"#utility.yul\":30473:30479   */\n      dup3\n        /* \"#utility.yul\":30469:30483   */\n      add\n        /* \"#utility.yul\":30462:30512   */\n      mstore\n        /* \"#utility.yul\":30345:30519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30525:30745   */\n    tag_763:\n        /* \"#utility.yul\":30665:30699   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":30661:30662   */\n      0x00\n        /* \"#utility.yul\":30653:30659   */\n      dup3\n        /* \"#utility.yul\":30649:30663   */\n      add\n        /* \"#utility.yul\":30642:30700   */\n      mstore\n        /* \"#utility.yul\":30734:30737   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30729:30731   */\n      0x20\n        /* \"#utility.yul\":30721:30727   */\n      dup3\n        /* \"#utility.yul\":30717:30732   */\n      add\n        /* \"#utility.yul\":30710:30738   */\n      mstore\n        /* \"#utility.yul\":30525:30745   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30751:30933   */\n    tag_768:\n        /* \"#utility.yul\":30891:30925   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":30887:30888   */\n      0x00\n        /* \"#utility.yul\":30879:30885   */\n      dup3\n        /* \"#utility.yul\":30875:30889   */\n      add\n        /* \"#utility.yul\":30868:30926   */\n      mstore\n        /* \"#utility.yul\":30751:30933   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30939:31109   */\n    tag_773:\n        /* \"#utility.yul\":31079:31101   */\n      0x43616c6c6572206973206e6f742066616d696c79000000000000000000000000\n        /* \"#utility.yul\":31075:31076   */\n      0x00\n        /* \"#utility.yul\":31067:31073   */\n      dup3\n        /* \"#utility.yul\":31063:31077   */\n      add\n        /* \"#utility.yul\":31056:31102   */\n      mstore\n        /* \"#utility.yul\":30939:31109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31115:31294   */\n    tag_778:\n        /* \"#utility.yul\":31255:31286   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":31251:31252   */\n      0x00\n        /* \"#utility.yul\":31243:31249   */\n      dup3\n        /* \"#utility.yul\":31239:31253   */\n      add\n        /* \"#utility.yul\":31232:31287   */\n      mstore\n        /* \"#utility.yul\":31115:31294   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31300:31468   */\n    tag_783:\n        /* \"#utility.yul\":31440:31460   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":31436:31437   */\n      0x00\n        /* \"#utility.yul\":31428:31434   */\n      dup3\n        /* \"#utility.yul\":31424:31438   */\n      add\n        /* \"#utility.yul\":31417:31461   */\n      mstore\n        /* \"#utility.yul\":31300:31468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31474:31703   */\n    tag_788:\n        /* \"#utility.yul\":31614:31648   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":31610:31611   */\n      0x00\n        /* \"#utility.yul\":31602:31608   */\n      dup3\n        /* \"#utility.yul\":31598:31612   */\n      add\n        /* \"#utility.yul\":31591:31649   */\n      mstore\n        /* \"#utility.yul\":31683:31695   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31678:31680   */\n      0x20\n        /* \"#utility.yul\":31670:31676   */\n      dup3\n        /* \"#utility.yul\":31666:31681   */\n      add\n        /* \"#utility.yul\":31659:31696   */\n      mstore\n        /* \"#utility.yul\":31474:31703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31709:31871   */\n    tag_793:\n        /* \"#utility.yul\":31849:31863   */\n      0x6d6967726174653a206261640000000000000000000000000000000000000000\n        /* \"#utility.yul\":31845:31846   */\n      0x00\n        /* \"#utility.yul\":31837:31843   */\n      dup3\n        /* \"#utility.yul\":31833:31847   */\n      add\n        /* \"#utility.yul\":31826:31864   */\n      mstore\n        /* \"#utility.yul\":31709:31871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31877:32118   */\n    tag_798:\n        /* \"#utility.yul\":32017:32051   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":32013:32014   */\n      0x00\n        /* \"#utility.yul\":32005:32011   */\n      dup3\n        /* \"#utility.yul\":32001:32015   */\n      add\n        /* \"#utility.yul\":31994:32052   */\n      mstore\n        /* \"#utility.yul\":32086:32110   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":32081:32083   */\n      0x20\n        /* \"#utility.yul\":32073:32079   */\n      dup3\n        /* \"#utility.yul\":32069:32084   */\n      add\n        /* \"#utility.yul\":32062:32111   */\n      mstore\n        /* \"#utility.yul\":31877:32118   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32124:32294   */\n    tag_803:\n        /* \"#utility.yul\":32264:32286   */\n      0x6d6967726174653a206e6f206d69677261746f72000000000000000000000000\n        /* \"#utility.yul\":32260:32261   */\n      0x00\n        /* \"#utility.yul\":32252:32258   */\n      dup3\n        /* \"#utility.yul\":32248:32262   */\n      add\n        /* \"#utility.yul\":32241:32287   */\n      mstore\n        /* \"#utility.yul\":32124:32294   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32300:32422   */\n    tag_609:\n        /* \"#utility.yul\":32373:32397   */\n      tag_962\n        /* \"#utility.yul\":32391:32396   */\n      dup2\n        /* \"#utility.yul\":32373:32397   */\n      tag_694\n      jump\t// in\n    tag_962:\n        /* \"#utility.yul\":32366:32371   */\n      dup2\n        /* \"#utility.yul\":32363:32398   */\n      eq\n        /* \"#utility.yul\":32353:32416   */\n      tag_963\n      jumpi\n        /* \"#utility.yul\":32412:32413   */\n      0x00\n        /* \"#utility.yul\":32409:32410   */\n      dup1\n        /* \"#utility.yul\":32402:32414   */\n      revert\n        /* \"#utility.yul\":32353:32416   */\n    tag_963:\n        /* \"#utility.yul\":32300:32422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32428:32544   */\n    tag_613:\n        /* \"#utility.yul\":32498:32519   */\n      tag_965\n        /* \"#utility.yul\":32513:32518   */\n      dup2\n        /* \"#utility.yul\":32498:32519   */\n      tag_904\n      jump\t// in\n    tag_965:\n        /* \"#utility.yul\":32491:32496   */\n      dup2\n        /* \"#utility.yul\":32488:32520   */\n      eq\n        /* \"#utility.yul\":32478:32538   */\n      tag_966\n      jumpi\n        /* \"#utility.yul\":32534:32535   */\n      0x00\n        /* \"#utility.yul\":32531:32532   */\n      dup1\n        /* \"#utility.yul\":32524:32536   */\n      revert\n        /* \"#utility.yul\":32478:32538   */\n    tag_966:\n        /* \"#utility.yul\":32428:32544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32550:32700   */\n    tag_620:\n        /* \"#utility.yul\":32637:32675   */\n      tag_968\n        /* \"#utility.yul\":32669:32674   */\n      dup2\n        /* \"#utility.yul\":32637:32675   */\n      tag_906\n      jump\t// in\n    tag_968:\n        /* \"#utility.yul\":32630:32635   */\n      dup2\n        /* \"#utility.yul\":32627:32676   */\n      eq\n        /* \"#utility.yul\":32617:32694   */\n      tag_969\n      jumpi\n        /* \"#utility.yul\":32690:32691   */\n      0x00\n        /* \"#utility.yul\":32687:32688   */\n      dup1\n        /* \"#utility.yul\":32680:32692   */\n      revert\n        /* \"#utility.yul\":32617:32694   */\n    tag_969:\n        /* \"#utility.yul\":32550:32700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32706:32858   */\n    tag_627:\n        /* \"#utility.yul\":32794:32833   */\n      tag_971\n        /* \"#utility.yul\":32827:32832   */\n      dup2\n        /* \"#utility.yul\":32794:32833   */\n      tag_909\n      jump\t// in\n    tag_971:\n        /* \"#utility.yul\":32787:32792   */\n      dup2\n        /* \"#utility.yul\":32784:32834   */\n      eq\n        /* \"#utility.yul\":32774:32852   */\n      tag_972\n      jumpi\n        /* \"#utility.yul\":32848:32849   */\n      0x00\n        /* \"#utility.yul\":32845:32846   */\n      dup1\n        /* \"#utility.yul\":32838:32850   */\n      revert\n        /* \"#utility.yul\":32774:32852   */\n    tag_972:\n        /* \"#utility.yul\":32706:32858   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32864:33028   */\n    tag_631:\n        /* \"#utility.yul\":32958:33003   */\n      tag_974\n        /* \"#utility.yul\":32997:33002   */\n      dup2\n        /* \"#utility.yul\":32958:33003   */\n      tag_912\n      jump\t// in\n    tag_974:\n        /* \"#utility.yul\":32951:32956   */\n      dup2\n        /* \"#utility.yul\":32948:33004   */\n      eq\n        /* \"#utility.yul\":32938:33022   */\n      tag_975\n      jumpi\n        /* \"#utility.yul\":33018:33019   */\n      0x00\n        /* \"#utility.yul\":33015:33016   */\n      dup1\n        /* \"#utility.yul\":33008:33020   */\n      revert\n        /* \"#utility.yul\":32938:33022   */\n    tag_975:\n        /* \"#utility.yul\":32864:33028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33034:33156   */\n    tag_635:\n        /* \"#utility.yul\":33107:33131   */\n      tag_977\n        /* \"#utility.yul\":33125:33130   */\n      dup2\n        /* \"#utility.yul\":33107:33131   */\n      tag_807\n      jump\t// in\n    tag_977:\n        /* \"#utility.yul\":33100:33105   */\n      dup2\n        /* \"#utility.yul\":33097:33132   */\n      eq\n        /* \"#utility.yul\":33087:33150   */\n      tag_978\n      jumpi\n        /* \"#utility.yul\":33146:33147   */\n      0x00\n        /* \"#utility.yul\":33143:33144   */\n      dup1\n        /* \"#utility.yul\":33136:33148   */\n      revert\n        /* \"#utility.yul\":33087:33150   */\n    tag_978:\n        /* \"#utility.yul\":33034:33156   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220962cf93e4ccc25697da1448128fa4db6cf4b560440b897cf8161f3e66a909ec164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1064": {
									"entryPoint": null,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 434,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 442,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2071:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "94:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "109:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "103:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "166:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "125:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "125:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "7:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "247:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "257:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "272:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "266:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "266:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "257:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "315:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "288:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "288:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "225:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "233:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "241:5:1",
														"type": ""
													}
												],
												"src": "184:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "458:566:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "504:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "506:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "506:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "506:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "479:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "488:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "475:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:32:1"
															},
															"nodeType": "YulIf",
															"src": "468:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "597:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "612:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "626:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "616:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "641:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "701:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "697:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "697:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "721:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "651:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "641:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "749:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "764:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "768:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "794:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "804:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "804:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "794:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "888:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "917:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "933:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "979:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "990:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "975:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "975:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "999:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "943:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "412:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "423:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "435:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "443:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													}
												],
												"src": "333:691:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1090:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1080:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1063:6:1",
														"type": ""
													}
												],
												"src": "1030:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1156:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1166:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1177:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1166:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1138:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1148:7:1",
														"type": ""
													}
												],
												"src": "1111:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1272:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1282:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1311:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1293:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1282:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1254:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1264:7:1",
														"type": ""
													}
												],
												"src": "1213:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1374:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1384:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1399:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1406:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1395:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1384:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1356:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1366:7:1",
														"type": ""
													}
												],
												"src": "1329:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1527:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1516:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1488:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1498:7:1",
														"type": ""
													}
												],
												"src": "1461:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1633:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1650:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1643:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1544:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1756:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1766:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1667:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1918:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1930:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1920:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1920:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1870:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1909:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "1877:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1877:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1867:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1867:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:57:1"
															},
															"nodeType": "YulIf",
															"src": "1857:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1840:5:1",
														"type": ""
													}
												],
												"src": "1790:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1989:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2046:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2055:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2058:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2048:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2048:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2048:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2012:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2037:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2019:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2019:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2009:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:43:1"
															},
															"nodeType": "YulIf",
															"src": "1999:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1982:5:1",
														"type": ""
													}
												],
												"src": "1946:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160045560006008553480156200001b57600080fd5b5060405162004bc338038062004bc38339818101604052810190620000419190620002ac565b6200006162000055620001b260201b60201c565b620001ba60201b60201c565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060098190555060066040518060800160405280600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016103e8815260200160095481526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550506103e860088190555050505062000393565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200028f816200035f565b92915050565b600081519050620002a68162000379565b92915050565b600080600060608486031215620002c857620002c76200035a565b5b6000620002d8868287016200027e565b9350506020620002eb8682870162000295565b9250506040620002fe8682870162000295565b9150509250925092565b6000620003158262000330565b9050919050565b6000620003298262000308565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6200036a816200031c565b81146200037657600080fd5b50565b620003848162000350565b81146200039057600080fd5b50565b61482080620003a36000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80635ffe6146116101305780638da5cb5b116100b8578063cf35fddf1161007c578063cf35fddf1461062c578063d209db8c14610648578063e2bbb15814610678578063f2fde38b14610694578063f3239ab5146106b057610232565b80638da5cb5b146105735780638dbb1e3a1461059157806393f1a40b146105c1578063c11490cc146105f2578063cb3cba551461060e57610232565b8063715018a6116100ff578063715018a6146104df5780637cd07e47146104e957806383e32135146105075780638aa28550146105255780638c51793b1461054357610232565b80635ffe61461461046c57806361c1b72414610488578063630b5ba1146104b957806364482f79146104c357610232565b80633df7aff3116101be5780634ea2813c116101825780634ea2813c146103de57806351eb05a6146103fa5780635312ea8e1461041657806356b4685f146104325780635990c5691461044e57610232565b80633df7aff31461035057806341441d3b1461036c578063441a3e7014610388578063454b0608146103a457806348cd4cb1146103c057610232565b806317caf6f11161020557806317caf6f1146102c05780631d5fbd87146102de5780631eaaa045146102fa57806322f585411461031657806323cf31181461033457610232565b8063081e3eda146102375780630ba33a58146102555780631058d281146102715780631526fe271461028d575b600080fd5b61023f6106e0565b60405161024c9190614090565b60405180910390f35b61026f600480360381019061026a91906137b6565b6106ed565b005b61028b600480360381019061028691906138aa565b6107ad565b005b6102a760048036038101906102a291906138aa565b610a6c565b6040516102b79493929190613de5565b60405180910390f35b6102c8610acc565b6040516102d59190614090565b60405180910390f35b6102f860048036038101906102f39190613997565b610ad2565b005b610314600480360381019061030f9190613944565b610f66565b005b61031e6110f3565b60405161032b9190613d26565b60405180910390f35b61034e6004803603810190610349919061387d565b611119565b005b61036a600480360381019061036591906138aa565b6111d9565b005b610386600480360381019061038191906138aa565b61125f565b005b6103a2600480360381019061039d9190613997565b61152a565b005b6103be60048036038101906103b991906138aa565b611821565b005b6103c8611ba1565b6040516103d59190614090565b60405180910390f35b6103f860048036038101906103f3919061383d565b611ba7565b005b610414600480360381019061040f91906138aa565b611cd0565b005b610430600480360381019061042b91906138aa565b611e7e565b005b61044c600480360381019061044791906137b6565b611fb7565b005b610456612077565b6040516104639190614090565b60405180910390f35b610486600480360381019061048191906138aa565b61207d565b005b6104a2600480360381019061049d91906138aa565b612103565b6040516104b0929190613e2a565b60405180910390f35b6104c1612157565b005b6104dd60048036038101906104d891906139d7565b61218a565b005b6104e7612296565b005b6104f161231e565b6040516104fe9190613e53565b60405180910390f35b61050f612344565b60405161051c9190613d26565b60405180910390f35b61052d61236a565b60405161053a9190614090565b60405180910390f35b61055d600480360381019061055891906137b6565b612370565b60405161056a9190614090565b60405180910390f35b61057b6123b9565b6040516105889190613d26565b60405180910390f35b6105ab60048036038101906105a69190613997565b6123e2565b6040516105b89190614090565b60405180910390f35b6105db60048036038101906105d69190613904565b612413565b6040516105e99291906140ab565b60405180910390f35b61060c60048036038101906106079190613997565b612444565b005b6106166124ee565b6040516106239190613dca565b60405180910390f35b61064660048036038101906106419190613904565b612514565b005b610662600480360381019061065d91906137b6565b6128c8565b60405161066f9190614090565b60405180910390f35b610692600480360381019061068d9190613997565b6128e0565b005b6106ae60048036038101906106a991906137b6565b612be3565b005b6106ca60048036038101906106c59190613904565b612cdb565b6040516106d79190614090565b60405180910390f35b6000600680549050905090565b6106f5612f0f565b73ffffffffffffffffffffffffffffffffffffffff166107136123b9565b73ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090613f90565b60405180910390fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060066000815481106107c4576107c36143cd565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690613ff0565b60405180910390fd5b6108796000611cd0565b60006108c382600101546108b564e8d4a510006108a787600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b905060008111156109645761092081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411156109dc57610984848360000154612fdc90919063ffffffff16565b82600001819055506109db33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130849092919063ffffffff16565b5b610a0e64e8d4a51000610a0085600301548560000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610a5e9190614090565b60405180910390a350505050565b60068181548110610a7c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b600060068281548110610ae857610ae76143cd565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bb49190613d26565b60206040518083038186803b158015610bcc57600080fd5b505afa158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0491906138d7565b9050836002015443118015610c1a575060008114155b15610cb5576000610c2f8560020154436123e2565b90506000610c72600854610c648860010154610c5660035487612f1790919063ffffffff16565b612f1790919063ffffffff16565b612f9290919063ffffffff16565b9050610cb0610ca184610c9364e8d4a5100085612f1790919063ffffffff16565b612f9290919063ffffffff16565b8561302690919063ffffffff16565b935050505b6000610cfb8460010154610ced64e8d4a51000610cdf878960000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b9050600060018881548110610d1357610d126143cd565b5b906000526020600020906002020190506000610d77600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461302690919063ffffffff16565b90508160010154811115610dae576000881415610d9957610d9860006107ad565b5b60008814610dad57610dac88600061152a565b5b5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90613eb0565b60405180910390fd5b610e898260010154600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fdc90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610f299190613d26565b600060405180830381600087803b158015610f4357600080fd5b505af1158015610f57573d6000803e3d6000fd5b50505050505050505050505050565b610f6e612f0f565b73ffffffffffffffffffffffffffffffffffffffff16610f8c6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614610fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd990613f90565b60405180910390fd5b8015610ff157610ff0612157565b5b6000600954431161100457600954611006565b435b905061101d8460085461302690919063ffffffff16565b600881905550600660405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611121612f0f565b73ffffffffffffffffffffffffffffffffffffffff1661113f6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614611195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118c90613f90565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6111e1612f0f565b73ffffffffffffffffffffffffffffffffffffffff166111ff6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614611255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124c90613f90565b60405180910390fd5b8060038190555050565b600081116112a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129990613f30565b60405180910390fd5b600060066000815481106112b9576112b86143cd565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506113276000611cd0565b60008160000154111561142157600061137e826001015461137064e8d4a5100061136287600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b9050600081111561141f576113db81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b600083111561149b5761147b3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661310a909392919063ffffffff16565b61149283826000015461302690919063ffffffff16565b81600001819055505b6114cd64e8d4a510006114bf84600301548460000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161151d9190614090565b60405180910390a3505050565b600082141561156e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156590613ed0565b60405180910390fd5b600060068381548110611584576115836143cd565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561162f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162690613ff0565b60405180910390fd5b61163884611cd0565b6000611682826001015461167464e8d4a5100061166687600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b90506000811115611723576116df81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61173a848360000154612fdc90919063ffffffff16565b826000018190555061177464e8d4a5100061176685600301548560000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b82600101819055506117cb33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130849092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516118129190614090565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118aa90614070565b60405180910390fd5b6000600682815481106118c9576118c86143cd565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161193d9190613d26565b60206040518083038186803b15801561195557600080fd5b505afa158015611969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198d91906138d7565b90506119dc600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166131939092919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b8152600401611a399190613dca565b602060405180830381600087803b158015611a5357600080fd5b505af1158015611a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8b9190613810565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ac69190613d26565b60206040518083038186803b158015611ade57600080fd5b505afa158015611af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1691906138d7565b8214611b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4e90614030565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60095481565b611baf612f0f565b73ffffffffffffffffffffffffffffffffffffffff16611bcd6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614611c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1a90613f90565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060068281548110611ce657611ce56143cd565b5b9060005260206000209060040201905080600201544311611d075750611e7b565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d669190613d26565b60206040518083038186803b158015611d7e57600080fd5b505afa158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db691906138d7565b905060008111611dd0574382600201819055505050611e7b565b6000611de08360020154436123e2565b90506000611e23600854611e158660010154611e0760035487612f1790919063ffffffff16565b612f1790919063ffffffff16565b612f9290919063ffffffff16565b9050611e65611e5284611e4464e8d4a5100085612f1790919063ffffffff16565b612f9290919063ffffffff16565b856003015461302690919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060068281548110611e9457611e936143cd565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611f4b3382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130849092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611f969190614090565b60405180910390a36000816000018190555060008160010181905550505050565b611fbf612f0f565b73ffffffffffffffffffffffffffffffffffffffff16611fdd6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612033576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202a90613f90565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b612085612f0f565b73ffffffffffffffffffffffffffffffffffffffff166120a36123b9565b73ffffffffffffffffffffffffffffffffffffffff16146120f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120f090613f90565b60405180910390fd5b8060048190555050565b6001818154811061211357600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600680549050905060005b818110156121865761217581611cd0565b8061217f90614326565b9050612164565b5050565b612192612f0f565b73ffffffffffffffffffffffffffffffffffffffff166121b06123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121fd90613f90565b60405180910390fd5b801561221557612214612157565b5b61226182612253600686815481106122305761222f6143cd565b5b906000526020600020906004020160010154600854612fdc90919063ffffffff16565b61302690919063ffffffff16565b600881905550816006848154811061227c5761227b6143cd565b5b906000526020600020906004020160010181905550505050565b61229e612f0f565b73ffffffffffffffffffffffffffffffffffffffff166122bc6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230990613f90565b60405180910390fd5b61231c60006132f1565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061240b6004546123fd8585612fdc90919063ffffffff16565b612f1790919063ffffffff16565b905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b61244c612f0f565b73ffffffffffffffffffffffffffffffffffffffff1661246a6123b9565b73ffffffffffffffffffffffffffffffffffffffff16146124c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b790613f90565b60405180910390fd5b80600183815481106124d5576124d46143cd565b5b9060005260206000209060020201600101819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008211612557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254e90613f30565b60405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806126005750600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61263f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161263690613fb0565b60405180910390fd5b60006006600081548110612656576126556143cd565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506126c46000611cd0565b6000816000015411156127be57600061271b826001015461270d64e8d4a510006126ff87600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b905060008111156127bc5761277881600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b6000841115612838576128183330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661310a909392919063ffffffff16565b61282f84826000015461302690919063ffffffff16565b81600001819055505b61286a64e8d4a5100061285c84600301548460000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b816001018190555060008373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040516128ba9190614090565b60405180910390a350505050565b600c6020528060005260406000206000915090505481565b6000821415612924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161291b90613f50565b60405180910390fd5b60008111612967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295e90613f30565b60405180910390fd5b60006006838154811061297d5761297c6143cd565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506129ea84611cd0565b600081600001541115612ae4576000612a418260010154612a3364e8d4a51000612a2587600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b90506000811115612ae257612a9e81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b612b353330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661310a909392919063ffffffff16565b612b4c83826000015461302690919063ffffffff16565b8160000181905550612b8664e8d4a51000612b7884600301548460000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051612bd59190614090565b60405180910390a350505050565b612beb612f0f565b73ffffffffffffffffffffffffffffffffffffffff16612c096123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5690613f90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ccf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cc690613e90565b60405180910390fd5b612cd8816132f1565b50565b60008060068481548110612cf257612cf16143cd565b5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612dbe9190613d26565b60206040518083038186803b158015612dd657600080fd5b505afa158015612dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e0e91906138d7565b9050836002015443118015612e24575060008114155b15612ebf576000612e398560020154436123e2565b90506000612e7c600854612e6e8860010154612e6060035487612f1790919063ffffffff16565b612f1790919063ffffffff16565b612f9290919063ffffffff16565b9050612eba612eab84612e9d64e8d4a5100085612f1790919063ffffffff16565b612f9290919063ffffffff16565b8561302690919063ffffffff16565b935050505b612f038360010154612ef564e8d4a51000612ee7868860000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b94505050505092915050565b600033905090565b600080831415612f2a5760009050612f8c565b60008284612f38919061418d565b9050828482612f47919061415c565b14612f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7e90613f70565b60405180910390fd5b809150505b92915050565b6000612fd483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506133b5565b905092915050565b600061301e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613418565b905092915050565b60008082846130359190614106565b90508381101561307a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161307190613ef0565b60405180910390fd5b8091505092915050565b6131058363a9059cbb60e01b84846040516024016130a3929190613da1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061347c565b505050565b61318d846323b872dd60e01b85858560405160240161312b93929190613d6a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061347c565b50505050565b600081148061322c575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016131da929190613d41565b60206040518083038186803b1580156131f257600080fd5b505afa158015613206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061322a91906138d7565b145b61326b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161326290614050565b60405180910390fd5b6132ec8363095ea7b360e01b848460405160240161328a929190613da1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061347c565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080831182906133fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133f39190613e6e565b60405180910390fd5b506000838561340b919061415c565b9050809150509392505050565b6000838311158290613460576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134579190613e6e565b60405180910390fd5b506000838561346f91906141e7565b9050809150509392505050565b60006134de826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166135439092919063ffffffff16565b905060008151111561353e57808060200190518101906134fe91906137e3565b61353d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161353490614010565b60405180910390fd5b5b505050565b6060613552848460008561355b565b90509392505050565b6060824710156135a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161359790613f10565b60405180910390fd5b6135a98561366f565b6135e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135df90613fd0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516136119190613d0f565b60006040518083038185875af1925050503d806000811461364e576040519150601f19603f3d011682016040523d82523d6000602084013e613653565b606091505b5091509150613663828286613692565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156136a2578290506136f2565b6000835111156136b55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136e99190613e6e565b60405180910390fd5b9392505050565b60008135905061370881614760565b92915050565b60008135905061371d81614777565b92915050565b60008151905061373281614777565b92915050565b6000813590506137478161478e565b92915050565b60008151905061375c8161478e565b92915050565b600081359050613771816147a5565b92915050565b600081359050613786816147bc565b92915050565b60008135905061379b816147d3565b92915050565b6000815190506137b0816147d3565b92915050565b6000602082840312156137cc576137cb6143fc565b5b60006137da848285016136f9565b91505092915050565b6000602082840312156137f9576137f86143fc565b5b600061380784828501613723565b91505092915050565b600060208284031215613826576138256143fc565b5b60006138348482850161374d565b91505092915050565b60008060408385031215613854576138536143fc565b5b600061386285828601613762565b92505060206138738582860161378c565b9150509250929050565b600060208284031215613893576138926143fc565b5b60006138a184828501613777565b91505092915050565b6000602082840312156138c0576138bf6143fc565b5b60006138ce8482850161378c565b91505092915050565b6000602082840312156138ed576138ec6143fc565b5b60006138fb848285016137a1565b91505092915050565b6000806040838503121561391b5761391a6143fc565b5b60006139298582860161378c565b925050602061393a858286016136f9565b9150509250929050565b60008060006060848603121561395d5761395c6143fc565b5b600061396b8682870161378c565b935050602061397c86828701613738565b925050604061398d8682870161370e565b9150509250925092565b600080604083850312156139ae576139ad6143fc565b5b60006139bc8582860161378c565b92505060206139cd8582860161378c565b9150509250929050565b6000806000606084860312156139f0576139ef6143fc565b5b60006139fe8682870161378c565b9350506020613a0f8682870161378c565b9250506040613a208682870161370e565b9150509250925092565b613a338161421b565b82525050565b6000613a44826140d4565b613a4e81856140ea565b9350613a5e8185602086016142f3565b80840191505092915050565b613a7381614299565b82525050565b613a82816142ab565b82525050565b613a91816142bd565b82525050565b6000613aa2826140df565b613aac81856140f5565b9350613abc8185602086016142f3565b613ac581614401565b840191505092915050565b6000613add6026836140f5565b9150613ae882614412565b604082019050919050565b6000613b006013836140f5565b9150613b0b82614461565b602082019050919050565b6000613b23601b836140f5565b9150613b2e8261448a565b602082019050919050565b6000613b46601b836140f5565b9150613b51826144b3565b602082019050919050565b6000613b696026836140f5565b9150613b74826144dc565b604082019050919050565b6000613b8c600e836140f5565b9150613b978261452b565b602082019050919050565b6000613baf6018836140f5565b9150613bba82614554565b602082019050919050565b6000613bd26021836140f5565b9150613bdd8261457d565b604082019050919050565b6000613bf56020836140f5565b9150613c00826145cc565b602082019050919050565b6000613c186014836140f5565b9150613c23826145f5565b602082019050919050565b6000613c3b601d836140f5565b9150613c468261461e565b602082019050919050565b6000613c5e6012836140f5565b9150613c6982614647565b602082019050919050565b6000613c81602a836140f5565b9150613c8c82614670565b604082019050919050565b6000613ca4600c836140f5565b9150613caf826146bf565b602082019050919050565b6000613cc76036836140f5565b9150613cd2826146e8565b604082019050919050565b6000613cea6014836140f5565b9150613cf582614737565b602082019050919050565b613d098161428f565b82525050565b6000613d1b8284613a39565b915081905092915050565b6000602082019050613d3b6000830184613a2a565b92915050565b6000604082019050613d566000830185613a2a565b613d636020830184613a2a565b9392505050565b6000606082019050613d7f6000830186613a2a565b613d8c6020830185613a2a565b613d996040830184613d00565b949350505050565b6000604082019050613db66000830185613a2a565b613dc36020830184613d00565b9392505050565b6000602082019050613ddf6000830184613a6a565b92915050565b6000608082019050613dfa6000830187613a6a565b613e076020830186613d00565b613e146040830185613d00565b613e216060830184613d00565b95945050505050565b6000604082019050613e3f6000830185613a79565b613e4c6020830184613d00565b9392505050565b6000602082019050613e686000830184613a88565b92915050565b60006020820190508181036000830152613e888184613a97565b905092915050565b60006020820190508181036000830152613ea981613ad0565b9050919050565b60006020820190508181036000830152613ec981613af3565b9050919050565b60006020820190508181036000830152613ee981613b16565b9050919050565b60006020820190508181036000830152613f0981613b39565b9050919050565b60006020820190508181036000830152613f2981613b5c565b9050919050565b60006020820190508181036000830152613f4981613b7f565b9050919050565b60006020820190508181036000830152613f6981613ba2565b9050919050565b60006020820190508181036000830152613f8981613bc5565b9050919050565b60006020820190508181036000830152613fa981613be8565b9050919050565b60006020820190508181036000830152613fc981613c0b565b9050919050565b60006020820190508181036000830152613fe981613c2e565b9050919050565b6000602082019050818103600083015261400981613c51565b9050919050565b6000602082019050818103600083015261402981613c74565b9050919050565b6000602082019050818103600083015261404981613c97565b9050919050565b6000602082019050818103600083015261406981613cba565b9050919050565b6000602082019050818103600083015261408981613cdd565b9050919050565b60006020820190506140a56000830184613d00565b92915050565b60006040820190506140c06000830185613d00565b6140cd6020830184613d00565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006141118261428f565b915061411c8361428f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156141515761415061436f565b5b828201905092915050565b60006141678261428f565b91506141728361428f565b9250826141825761418161439e565b5b828204905092915050565b60006141988261428f565b91506141a38361428f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156141dc576141db61436f565b5b828202905092915050565b60006141f28261428f565b91506141fd8361428f565b9250828210156142105761420f61436f565b5b828203905092915050565b60006142268261426f565b9050919050565b60008115159050919050565b60006142448261421b565b9050919050565b60006142568261421b565b9050919050565b60006142688261421b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006142a4826142cf565b9050919050565b60006142b6826142cf565b9050919050565b60006142c8826142cf565b9050919050565b60006142da826142e1565b9050919050565b60006142ec8261426f565b9050919050565b60005b838110156143115780820151818401526020810190506142f6565b83811115614320576000848401525b50505050565b60006143318261428f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156143645761436361436f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616c6c6572206973206e6f742066616d696c79000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b6147698161421b565b811461477457600080fd5b50565b6147808161422d565b811461478b57600080fd5b50565b61479781614239565b81146147a257600080fd5b50565b6147ae8161424b565b81146147b957600080fd5b50565b6147c58161425d565b81146147d057600080fd5b50565b6147dc8161428f565b81146147e757600080fd5b5056fea2646970667358221220962cf93e4ccc25697da1448128fa4db6cf4b560440b897cf8161f3e66a909ec164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4BC3 CODESIZE SUB DUP1 PUSH3 0x4BC3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x2AC JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x1B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH2 0x3E8 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x393 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x28F DUP2 PUSH3 0x35F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A6 DUP2 PUSH3 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2C8 JUMPI PUSH3 0x2C7 PUSH3 0x35A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D8 DUP7 DUP3 DUP8 ADD PUSH3 0x27E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2EB DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2FE DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x315 DUP3 PUSH3 0x330 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x329 DUP3 PUSH3 0x308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x36A DUP2 PUSH3 0x31C JUMP JUMPDEST DUP2 EQ PUSH3 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x384 DUP2 PUSH3 0x350 JUMP JUMPDEST DUP2 EQ PUSH3 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4820 DUP1 PUSH3 0x3A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FFE6146 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF35FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF35FDDF EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x6B0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xC11490CC EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x60E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x83E32135 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x543 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4C3 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x56B4685F EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x44E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x3C0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x22F58541 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x334 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xBA33A58 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x3944 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x1119 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x125F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x152A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x383D JUMP JUMPDEST PUSH2 0x1BA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1CD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1E7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x1FB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x456 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x207D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0x2157 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x39D7 JUMP JUMPDEST PUSH2 0x218A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E7 PUSH2 0x2296 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x3E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x236A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x2370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP3 SWAP2 SWAP1 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x2444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x646 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH2 0x2514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x28E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x2BE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH2 0x2CDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x713 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x7C4 JUMPI PUSH2 0x7C3 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x879 PUSH1 0x0 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x8B5 PUSH5 0xE8D4A51000 PUSH2 0x8A7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH2 0x920 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x984 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9DB CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3084 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA0E PUSH5 0xE8D4A51000 PUSH2 0xA00 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xC1A JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xCB5 JUMPI PUSH1 0x0 PUSH2 0xC2F DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x23E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC72 PUSH1 0x8 SLOAD PUSH2 0xC64 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC56 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCB0 PUSH2 0xCA1 DUP5 PUSH2 0xC93 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCFB DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCED PUSH5 0xE8D4A51000 PUSH2 0xCDF DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xD13 JUMPI PUSH2 0xD12 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD77 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP9 EQ ISZERO PUSH2 0xD99 JUMPI PUSH2 0xD98 PUSH1 0x0 PUSH2 0x7AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xDAD JUMPI PUSH2 0xDAC DUP9 PUSH1 0x0 PUSH2 0x152A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x3EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE89 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF6E PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8C PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD9 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0x2157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0x1004 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1006 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x101D DUP5 PUSH1 0x8 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1121 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x113F PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1195 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118C SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x11E1 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11FF PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1255 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124C SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1299 SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1327 PUSH1 0x0 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 PUSH2 0x137E DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1370 PUSH5 0xE8D4A51000 PUSH2 0x1362 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x141F JUMPI PUSH2 0x13DB DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x149B JUMPI PUSH2 0x147B CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x310A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1492 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14CD PUSH5 0xE8D4A51000 PUSH2 0x14BF DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x151D SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x156E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1565 SWAP1 PUSH2 0x3ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1584 JUMPI PUSH2 0x1583 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x162F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1626 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1638 DUP5 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1682 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1674 PUSH5 0xE8D4A51000 PUSH2 0x1666 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1723 JUMPI PUSH2 0x16DF DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x173A DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1774 PUSH5 0xE8D4A51000 PUSH2 0x1766 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17CB CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3084 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AA SWAP1 PUSH2 0x4070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18C9 JUMPI PUSH2 0x18C8 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193D SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1969 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198D SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x19DC PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3193 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A39 SWAP2 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8B SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC6 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B16 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP3 EQ PUSH2 0x1B57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4E SWAP1 PUSH2 0x4030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BAF PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BCD PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1A SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE6 JUMPI PUSH2 0x1CE5 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1D07 JUMPI POP PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D66 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB6 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1DD0 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE0 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x23E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E23 PUSH1 0x8 SLOAD PUSH2 0x1E15 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1E07 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E65 PUSH2 0x1E52 DUP5 PUSH2 0x1E44 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1F4B CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3084 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F96 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1FBF PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDD PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2033 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x202A SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2085 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20A3 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F0 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2186 JUMPI PUSH2 0x2175 DUP2 PUSH2 0x1CD0 JUMP JUMPDEST DUP1 PUSH2 0x217F SWAP1 PUSH2 0x4326 JUMP JUMPDEST SWAP1 POP PUSH2 0x2164 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2192 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21B0 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FD SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x2157 JUMP JUMPDEST JUMPDEST PUSH2 0x2261 DUP3 PUSH2 0x2253 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2230 JUMPI PUSH2 0x222F PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x229E PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22BC PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2309 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x231C PUSH1 0x0 PUSH2 0x32F1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240B PUSH1 0x4 SLOAD PUSH2 0x23FD DUP6 DUP6 PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x244C PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x246A PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B7 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24D5 JUMPI PUSH2 0x24D4 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x2557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x254E SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2600 JUMPI POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x263F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2636 SWAP1 PUSH2 0x3FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x26C4 PUSH1 0x0 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 PUSH2 0x271B DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x270D PUSH5 0xE8D4A51000 PUSH2 0x26FF DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x27BC JUMPI PUSH2 0x2778 DUP2 PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x2838 JUMPI PUSH2 0x2818 CALLER ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x310A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x282F DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x286A PUSH5 0xE8D4A51000 PUSH2 0x285C DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x291B SWAP1 PUSH2 0x3F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295E SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x297D JUMPI PUSH2 0x297C PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x29EA DUP5 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2AE4 JUMPI PUSH1 0x0 PUSH2 0x2A41 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2A33 PUSH5 0xE8D4A51000 PUSH2 0x2A25 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2AE2 JUMPI PUSH2 0x2A9E DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2B35 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x310A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2B4C DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B86 PUSH5 0xE8D4A51000 PUSH2 0x2B78 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2BD5 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2BEB PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2C09 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C56 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2CCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC6 SWAP1 PUSH2 0x3E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CD8 DUP2 PUSH2 0x32F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2CF2 JUMPI PUSH2 0x2CF1 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DBE SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E0E SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2E24 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2EBF JUMPI PUSH1 0x0 PUSH2 0x2E39 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x23E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E7C PUSH1 0x8 SLOAD PUSH2 0x2E6E DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2E60 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2EBA PUSH2 0x2EAB DUP5 PUSH2 0x2E9D PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2F03 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2EF5 PUSH5 0xE8D4A51000 PUSH2 0x2EE7 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2F2A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2F38 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2F47 SWAP2 SWAP1 PUSH2 0x415C JUMP JUMPDEST EQ PUSH2 0x2F87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F7E SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x3418 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x3035 SWAP2 SWAP1 PUSH2 0x4106 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x307A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3071 SWAP1 PUSH2 0x3EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3105 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x30A3 SWAP3 SWAP2 SWAP1 PUSH2 0x3DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x347C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x318D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x312B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x347C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x322C JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31DA SWAP3 SWAP2 SWAP1 PUSH2 0x3D41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3206 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x322A SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x326B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3262 SWAP1 PUSH2 0x4050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32EC DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x328A SWAP3 SWAP2 SWAP1 PUSH2 0x3DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x347C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x33FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33F3 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x340B SWAP2 SWAP1 PUSH2 0x415C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3457 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x346F SWAP2 SWAP1 PUSH2 0x41E7 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3543 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x353E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x34FE SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x353D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3534 SWAP1 PUSH2 0x4010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3552 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x355B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x35A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3597 SWAP1 PUSH2 0x3F10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A9 DUP6 PUSH2 0x366F JUMP JUMPDEST PUSH2 0x35E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35DF SWAP1 PUSH2 0x3FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3611 SWAP2 SWAP1 PUSH2 0x3D0F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x364E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3663 DUP3 DUP3 DUP7 PUSH2 0x3692 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x36A2 JUMPI DUP3 SWAP1 POP PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x36B5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36E9 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3708 DUP2 PUSH2 0x4760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x371D DUP2 PUSH2 0x4777 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3732 DUP2 PUSH2 0x4777 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3747 DUP2 PUSH2 0x478E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x375C DUP2 PUSH2 0x478E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3771 DUP2 PUSH2 0x47A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3786 DUP2 PUSH2 0x47BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x379B DUP2 PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x37B0 DUP2 PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37CC JUMPI PUSH2 0x37CB PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37DA DUP5 DUP3 DUP6 ADD PUSH2 0x36F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37F9 JUMPI PUSH2 0x37F8 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3807 DUP5 DUP3 DUP6 ADD PUSH2 0x3723 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3826 JUMPI PUSH2 0x3825 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3834 DUP5 DUP3 DUP6 ADD PUSH2 0x374D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3854 JUMPI PUSH2 0x3853 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3862 DUP6 DUP3 DUP7 ADD PUSH2 0x3762 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3873 DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3893 JUMPI PUSH2 0x3892 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38A1 DUP5 DUP3 DUP6 ADD PUSH2 0x3777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38C0 JUMPI PUSH2 0x38BF PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38CE DUP5 DUP3 DUP6 ADD PUSH2 0x378C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38ED JUMPI PUSH2 0x38EC PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38FB DUP5 DUP3 DUP6 ADD PUSH2 0x37A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x391B JUMPI PUSH2 0x391A PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3929 DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x393A DUP6 DUP3 DUP7 ADD PUSH2 0x36F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x395D JUMPI PUSH2 0x395C PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x396B DUP7 DUP3 DUP8 ADD PUSH2 0x378C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x397C DUP7 DUP3 DUP8 ADD PUSH2 0x3738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x398D DUP7 DUP3 DUP8 ADD PUSH2 0x370E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39AE JUMPI PUSH2 0x39AD PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39BC DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39CD DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39F0 JUMPI PUSH2 0x39EF PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39FE DUP7 DUP3 DUP8 ADD PUSH2 0x378C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A0F DUP7 DUP3 DUP8 ADD PUSH2 0x378C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3A20 DUP7 DUP3 DUP8 ADD PUSH2 0x370E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3A33 DUP2 PUSH2 0x421B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A44 DUP3 PUSH2 0x40D4 JUMP JUMPDEST PUSH2 0x3A4E DUP2 DUP6 PUSH2 0x40EA JUMP JUMPDEST SWAP4 POP PUSH2 0x3A5E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x42F3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A73 DUP2 PUSH2 0x4299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3A82 DUP2 PUSH2 0x42AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3A91 DUP2 PUSH2 0x42BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA2 DUP3 PUSH2 0x40DF JUMP JUMPDEST PUSH2 0x3AAC DUP2 DUP6 PUSH2 0x40F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x3ABC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x42F3 JUMP JUMPDEST PUSH2 0x3AC5 DUP2 PUSH2 0x4401 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ADD PUSH1 0x26 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AE8 DUP3 PUSH2 0x4412 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B00 PUSH1 0x13 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B0B DUP3 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B23 PUSH1 0x1B DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B2E DUP3 PUSH2 0x448A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B46 PUSH1 0x1B DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B51 DUP3 PUSH2 0x44B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B69 PUSH1 0x26 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B74 DUP3 PUSH2 0x44DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8C PUSH1 0xE DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B97 DUP3 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BAF PUSH1 0x18 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BBA DUP3 PUSH2 0x4554 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD2 PUSH1 0x21 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BDD DUP3 PUSH2 0x457D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BF5 PUSH1 0x20 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C00 DUP3 PUSH2 0x45CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C18 PUSH1 0x14 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C23 DUP3 PUSH2 0x45F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3B PUSH1 0x1D DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C46 DUP3 PUSH2 0x461E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5E PUSH1 0x12 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C69 DUP3 PUSH2 0x4647 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C81 PUSH1 0x2A DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C8C DUP3 PUSH2 0x4670 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA4 PUSH1 0xC DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CAF DUP3 PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CC7 PUSH1 0x36 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CD2 DUP3 PUSH2 0x46E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CEA PUSH1 0x14 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CF5 DUP3 PUSH2 0x4737 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D09 DUP2 PUSH2 0x428F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D1B DUP3 DUP5 PUSH2 0x3A39 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D56 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3D63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3D8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3D99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DB6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3DC3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3DFA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3A6A JUMP JUMPDEST PUSH2 0x3E07 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D00 JUMP JUMPDEST PUSH2 0x3E14 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3D00 JUMP JUMPDEST PUSH2 0x3E21 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0x3E4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E88 DUP2 DUP5 PUSH2 0x3A97 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA9 DUP2 PUSH2 0x3AD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EC9 DUP2 PUSH2 0x3AF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EE9 DUP2 PUSH2 0x3B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F09 DUP2 PUSH2 0x3B39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F29 DUP2 PUSH2 0x3B5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F49 DUP2 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F69 DUP2 PUSH2 0x3BA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F89 DUP2 PUSH2 0x3BC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA9 DUP2 PUSH2 0x3BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FC9 DUP2 PUSH2 0x3C0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FE9 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4009 DUP2 PUSH2 0x3C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4029 DUP2 PUSH2 0x3C74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4049 DUP2 PUSH2 0x3C97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4069 DUP2 PUSH2 0x3CBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4089 DUP2 PUSH2 0x3CDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40C0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D00 JUMP JUMPDEST PUSH2 0x40CD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4111 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x411C DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4151 JUMPI PUSH2 0x4150 PUSH2 0x436F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4167 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x4172 DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4182 JUMPI PUSH2 0x4181 PUSH2 0x439E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4198 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x41A3 DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x41DC JUMPI PUSH2 0x41DB PUSH2 0x436F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F2 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x41FD DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4210 JUMPI PUSH2 0x420F PUSH2 0x436F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4226 DUP3 PUSH2 0x426F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4244 DUP3 PUSH2 0x421B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4256 DUP3 PUSH2 0x421B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4268 DUP3 PUSH2 0x421B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A4 DUP3 PUSH2 0x42CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B6 DUP3 PUSH2 0x42CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C8 DUP3 PUSH2 0x42CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42DA DUP3 PUSH2 0x42E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42EC DUP3 PUSH2 0x426F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4311 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42F6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4320 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4331 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4364 JUMPI PUSH2 0x4363 PUSH2 0x436F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742066616D696C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4769 DUP2 PUSH2 0x421B JUMP JUMPDEST DUP2 EQ PUSH2 0x4774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4780 DUP2 PUSH2 0x422D JUMP JUMPDEST DUP2 EQ PUSH2 0x478B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4797 DUP2 PUSH2 0x4239 JUMP JUMPDEST DUP2 EQ PUSH2 0x47A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x47AE DUP2 PUSH2 0x424B JUMP JUMPDEST DUP2 EQ PUSH2 0x47B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x47C5 DUP2 PUSH2 0x425D JUMP JUMPDEST DUP2 EQ PUSH2 0x47D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x47DC DUP2 PUSH2 0x428F JUMP JUMPDEST DUP2 EQ PUSH2 0x47E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0x2C 0xF9 RETURNDATACOPY 0x4C 0xCC 0x25 PUSH10 0x7DA1448128FA4DB6CF4B JUMP DIV BLOCKHASH 0xB8 SWAP8 0xCF DUP2 PUSH2 0xF3E6 PUSH11 0x909EC164736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "22111:14339:0:-:0;;;23774:1;23740:35;;24217:1;24184:34;;24731:462;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19984:32;20003:12;:10;;;:12;;:::i;:::-;19984:18;;;:32;;:::i;:::-;24852:4;24846:3;;:10;;;;;;;;;;;;;;;;;;24883:14;24867:13;:30;;;;24921:11;24908:10;:24;;;;24978:8;24992:155;;;;;;;;25025:3;;;;;;;;;;;24992:155;;;;;;25055:4;24992:155;;;;25091:10;;24992:155;;;;25134:1;24992:155;;;24978:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25179:4;25161:15;:22;;;;24731:462;;;22111:14339;;19479:98;19532:7;19559:10;19552:17;;19479:98;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;7:171:1:-;78:5;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;7:171;;;;:::o;184:143::-;241:5;272:6;266:13;257:22;;288:33;315:5;288:33;:::i;:::-;184:143;;;;:::o;333:691::-;435:6;443;451;500:2;488:9;479:7;475:23;471:32;468:119;;;506:79;;:::i;:::-;468:119;626:1;651:78;721:7;712:6;701:9;697:22;651:78;:::i;:::-;641:88;;597:142;778:2;804:64;860:7;851:6;840:9;836:22;804:64;:::i;:::-;794:74;;749:129;917:2;943:64;999:7;990:6;979:9;975:22;943:64;:::i;:::-;933:74;;888:129;333:691;;;;;:::o;1111:96::-;1148:7;1177:24;1195:5;1177:24;:::i;:::-;1166:35;;1111:96;;;:::o;1213:110::-;1264:7;1293:24;1311:5;1293:24;:::i;:::-;1282:35;;1213:110;;;:::o;1329:126::-;1366:7;1406:42;1399:5;1395:54;1384:65;;1329:126;;;:::o;1461:77::-;1498:7;1527:5;1516:16;;1461:77;;;:::o;1667:117::-;1776:1;1773;1766:12;1790:150;1877:38;1909:5;1877:38;:::i;:::-;1870:5;1867:49;1857:77;;1930:1;1927;1920:12;1857:77;1790:150;:::o;1946:122::-;2019:24;2037:5;2019:24;:::i;:::-;2012:5;2009:35;1999:63;;2058:1;2055;2048:12;1999:63;1946:122;:::o;22111:14339:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_975": {
									"entryPoint": 9066,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDTMasterchefAddress_998": {
									"entryPoint": 4339,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDT_970": {
									"entryPoint": 9454,
									"id": 970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFTStakeAddress_996": {
									"entryPoint": 9028,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PowerPerBlock_972": {
									"entryPoint": 8311,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_796": {
									"entryPoint": 13436,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 12047,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 13041,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNFT_1120": {
									"entryPoint": 7079,
									"id": 1120,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1385": {
									"entryPoint": 3942,
									"id": 1385,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 12326,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimNFTReward_1316": {
									"entryPoint": 2770,
									"id": 1316,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_1882": {
									"entryPoint": 10464,
									"id": 1882,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 12178,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 13237,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2462": {
									"entryPoint": 7806,
									"id": 2462,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterStakingCompund_2287": {
									"entryPoint": 9492,
									"id": 2287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@enterStaking_2140": {
									"entryPoint": 4703,
									"id": 2140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_442": {
									"entryPoint": 13659,
									"id": 442,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_372": {
									"entryPoint": 13635,
									"id": 372,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1533": {
									"entryPoint": 9186,
									"id": 1533,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPowerBalance_1100": {
									"entryPoint": 9072,
									"id": 1100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_301": {
									"entryPoint": 13935,
									"id": 301,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leaveStaking_2405": {
									"entryPoint": 1965,
									"id": 2405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@massUpdatePools_1660": {
									"entryPoint": 8535,
									"id": 1660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrate_1515": {
									"entryPoint": 6177,
									"id": 1515,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@migrator_978": {
									"entryPoint": 8990,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 12055,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftsInfo_967": {
									"entryPoint": 8451,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_845": {
									"entryPoint": 9145,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingPower_1635": {
									"entryPoint": 11483,
									"id": 1635,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_982": {
									"entryPoint": 2668,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1337": {
									"entryPoint": 1760,
									"id": 1337,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powerBalance_1002": {
									"entryPoint": 10440,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_873": {
									"entryPoint": 8854,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_674": {
									"entryPoint": 12691,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_630": {
									"entryPoint": 12554,
									"id": 630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_604": {
									"entryPoint": 12420,
									"id": 604,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMigrator_1436": {
									"entryPoint": 4377,
									"id": 1436,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1423": {
									"entryPoint": 8586,
									"id": 1423,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_994": {
									"entryPoint": 7073,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 12252,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 13336,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_992": {
									"entryPoint": 2764,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 11235,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDDTMasterchefAddress_1088": {
									"entryPoint": 8119,
									"id": 1088,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1328": {
									"entryPoint": 8317,
									"id": 1328,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateNFTStakeAddress_1076": {
									"entryPoint": 1773,
									"id": 1076,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateNFT_1137": {
									"entryPoint": 9284,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updatePool_1751": {
									"entryPoint": 7376,
									"id": 1751,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePowerPerBlock_2474": {
									"entryPoint": 4569,
									"id": 2474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_989": {
									"entryPoint": 9235,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_577": {
									"entryPoint": 13970,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_2004": {
									"entryPoint": 5418,
									"id": 2004,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 14073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 14094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 14115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286": {
									"entryPoint": 14136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 14157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$933": {
									"entryPoint": 14178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 14199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 14220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 14241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 14262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 14307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 14352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$933t_uint256": {
									"entryPoint": 14397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 14461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 14506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 14551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 14596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool": {
									"entryPoint": 14660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 14743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 14807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 14890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 14954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack": {
									"entryPoint": 14969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 14984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 15616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 15631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 15654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 15681,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15722,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 15818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 15845,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15914,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 15955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 16528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 16555,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 16596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 16607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 16618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 16629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 16646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 16732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 16781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 16871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 16923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 16941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 16953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$933": {
									"entryPoint": 16971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 16989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 17007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 17039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 17049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$933_to_t_address": {
									"entryPoint": 17067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 17085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 17103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 17121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 17139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 17190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 17263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 17310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 17357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 17404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 17409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 17426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406": {
									"entryPoint": 17505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f": {
									"entryPoint": 17546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 17587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 17628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c": {
									"entryPoint": 17707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108": {
									"entryPoint": 17748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 17789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 17868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64": {
									"entryPoint": 17909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 17950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 17991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 18032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8": {
									"entryPoint": 18111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 18152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445": {
									"entryPoint": 18231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 18272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 18295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 18318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$933": {
									"entryPoint": 18341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 18364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 18387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33159:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "233:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "220:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "249:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "179:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "187:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "195:5:1",
														"type": ""
													}
												],
												"src": "152:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "361:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "361:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "416:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "392:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "392:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "329:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "337:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"src": "291:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "500:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "510:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "532:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "519:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "510:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "589:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "548:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "478:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "486:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "494:5:1",
														"type": ""
													}
												],
												"src": "434:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "703:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "694:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "725:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "662:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "678:5:1",
														"type": ""
													}
												],
												"src": "607:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "861:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "870:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "861:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "941:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$933",
																	"nodeType": "YulIdentifier",
																	"src": "899:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:48:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "829:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "837:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "845:5:1",
														"type": ""
													}
												],
												"src": "784:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1032:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1042:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1064:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1051:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "1080:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1010:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1018:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1026:5:1",
														"type": ""
													}
												],
												"src": "959:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1217:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1208:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1246:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1246:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1176:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1184:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1192:5:1",
														"type": ""
													}
												],
												"src": "1146:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1354:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1364:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1379:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1373:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1364:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1422:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1395:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1332:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1340:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1348:5:1",
														"type": ""
													}
												],
												"src": "1291:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1552:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1554:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1554:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1554:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1527:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1536:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1548:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:32:1"
															},
															"nodeType": "YulIf",
															"src": "1516:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1645:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1660:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1664:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1689:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1724:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1735:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1744:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1699:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1699:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1689:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1476:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1487:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1499:6:1",
														"type": ""
													}
												],
												"src": "1440:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1895:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1897:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1897:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1897:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1879:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1866:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1891:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1862:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1862:32:1"
															},
															"nodeType": "YulIf",
															"src": "1859:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1988:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2003:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2017:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2007:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2032:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2075:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2086:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2071:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2095:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2042:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2032:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1819:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1830:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1842:6:1",
														"type": ""
													}
												],
												"src": "1775:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2217:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2265:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2238:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2247:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2230:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:32:1"
															},
															"nodeType": "YulIf",
															"src": "2227:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2356:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2371:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2375:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2400:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2460:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2471:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2456:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2456:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2410:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2400:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2187:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2198:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													}
												],
												"src": "2126:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2609:406:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2655:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2657:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2657:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2657:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2630:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2639:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2651:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:32:1"
															},
															"nodeType": "YulIf",
															"src": "2619:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2748:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2763:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2777:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2767:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2792:78:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$933",
																			"nodeType": "YulIdentifier",
																			"src": "2802:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:68:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2792:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2890:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2935:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$933t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2571:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2582:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2594:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2602:6:1",
														"type": ""
													}
												],
												"src": "2511:504:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3108:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:32:1"
															},
															"nodeType": "YulIf",
															"src": "3118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3247:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3291:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3347:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3358:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3343:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3343:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3367:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "3301:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													}
												],
												"src": "3021:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3464:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3510:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3512:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3512:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3512:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3481:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:32:1"
															},
															"nodeType": "YulIf",
															"src": "3474:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3603:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3618:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3622:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3647:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3682:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3693:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3678:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3702:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3657:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3647:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3434:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3445:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3457:6:1",
														"type": ""
													}
												],
												"src": "3398:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3856:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3858:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3858:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3858:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3831:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3840:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3852:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:32:1"
															},
															"nodeType": "YulIf",
															"src": "3820:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3949:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3964:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3968:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3993:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4039:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4050:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4035:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4035:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4059:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4003:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3993:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3780:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3791:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3803:6:1",
														"type": ""
													}
												],
												"src": "3733:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4219:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4221:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4221:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4221:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4194:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4215:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:32:1"
															},
															"nodeType": "YulIf",
															"src": "4183:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4312:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4327:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4331:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4356:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4391:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4402:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4387:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4387:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4411:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4366:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4356:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4439:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4454:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4458:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4484:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4519:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4530:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4515:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4515:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4539:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4494:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4484:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4135:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4146:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4158:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4166:6:1",
														"type": ""
													}
												],
												"src": "4090:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4681:530:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4727:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4729:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4729:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4729:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4702:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:32:1"
															},
															"nodeType": "YulIf",
															"src": "4691:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4820:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4835:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4839:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4864:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4899:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4910:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4895:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4895:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4919:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4874:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4864:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4947:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4962:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4976:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4966:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4992:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5041:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5052:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5037:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5037:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5061:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286",
																			"nodeType": "YulIdentifier",
																			"src": "5002:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5002:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4992:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5089:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5104:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5118:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5108:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5134:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5166:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5177:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5162:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5162:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5186:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5144:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5134:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4635:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4646:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4658:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4666:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4674:6:1",
														"type": ""
													}
												],
												"src": "4570:641:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5300:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5346:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5348:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5348:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5348:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5321:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5317:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5342:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:32:1"
															},
															"nodeType": "YulIf",
															"src": "5310:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5439:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5454:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5468:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5458:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5483:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5518:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5529:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5514:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5538:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5493:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5493:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5483:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5566:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5581:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5595:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5585:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5611:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5646:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5657:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5642:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5666:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5621:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5621:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5611:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5262:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5273:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5285:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5293:6:1",
														"type": ""
													}
												],
												"src": "5217:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5794:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5840:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5842:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5842:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5842:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5815:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5824:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5811:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5807:32:1"
															},
															"nodeType": "YulIf",
															"src": "5804:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5933:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5948:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5952:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5977:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6012:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6023:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6008:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6008:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6032:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5987:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5987:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5977:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6060:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6075:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6089:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6079:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6105:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6140:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6151:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6136:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6136:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6160:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6115:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6115:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6105:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6188:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6203:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6217:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6207:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6233:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6265:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6261:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6243:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6243:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6233:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5748:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5759:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5771:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5779:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5787:6:1",
														"type": ""
													}
												],
												"src": "5697:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6381:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6398:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6421:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6403:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6403:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6391:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6369:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6376:3:1",
														"type": ""
													}
												],
												"src": "6316:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6548:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6558:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6604:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6572:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6572:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6562:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6619:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6702:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6707:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6626:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6749:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6756:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6745:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6763:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6768:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6723:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6784:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6795:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6529:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6536:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6544:3:1",
														"type": ""
													}
												],
												"src": "6440:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6898:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6915:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6965:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6920:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6908:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6886:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6893:3:1",
														"type": ""
													}
												],
												"src": "6819:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7064:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7081:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7132:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$933_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7086:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7086:52:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7074:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7074:65:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7052:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7059:3:1",
														"type": ""
													}
												],
												"src": "6984:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7237:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7254:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7311:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7259:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7259:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7247:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7225:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7232:3:1",
														"type": ""
													}
												],
												"src": "7151:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7432:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7479:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7446:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7436:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7494:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7560:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7565:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7501:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7494:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7607:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7614:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7603:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7621:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7626:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7581:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7642:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7653:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7680:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7658:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7658:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7642:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7403:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7410:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7418:3:1",
														"type": ""
													}
												],
												"src": "7330:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7846:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7856:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7922:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7927:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7863:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8028:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7939:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8041:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8052:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8057:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8041:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7834:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7842:3:1",
														"type": ""
													}
												],
												"src": "7700:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8218:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8228:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8235:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8400:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																	"nodeType": "YulIdentifier",
																	"src": "8311:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8311:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8413:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8424:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8429:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8413:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8214:3:1",
														"type": ""
													}
												],
												"src": "8072:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8590:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8600:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8666:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8671:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8607:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8607:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8600:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8772:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																	"nodeType": "YulIdentifier",
																	"src": "8683:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8683:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8785:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8796:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8801:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8792:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8785:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8578:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8586:3:1",
														"type": ""
													}
												],
												"src": "8444:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8962:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8972:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9038:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9043:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8979:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9144:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "9055:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9055:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9055:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9157:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9168:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9173:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9164:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8950:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8958:3:1",
														"type": ""
													}
												],
												"src": "8816:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9334:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9410:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9351:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9351:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9344:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9516:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "9427:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9427:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9529:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9540:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9536:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9322:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9330:3:1",
														"type": ""
													}
												],
												"src": "9188:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9706:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9716:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9782:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9787:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9723:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9888:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																	"nodeType": "YulIdentifier",
																	"src": "9799:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9799:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9799:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9901:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9912:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9917:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9908:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9694:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9702:3:1",
														"type": ""
													}
												],
												"src": "9560:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10078:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10088:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10154:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10095:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10095:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10260:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																	"nodeType": "YulIdentifier",
																	"src": "10171:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10171:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10284:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10289:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10273:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10066:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10074:3:1",
														"type": ""
													}
												],
												"src": "9932:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10450:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10460:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10526:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10531:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10467:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10467:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10460:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10632:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "10543:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10543:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10543:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10645:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10656:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10661:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10645:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10438:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10446:3:1",
														"type": ""
													}
												],
												"src": "10304:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10822:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10832:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10898:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10839:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10832:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11004:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10915:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10915:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10915:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11017:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11028:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11024:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11017:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10810:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10818:3:1",
														"type": ""
													}
												],
												"src": "10676:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11194:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11204:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11270:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11275:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11211:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11204:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11376:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																	"nodeType": "YulIdentifier",
																	"src": "11287:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11287:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11287:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11389:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11400:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11405:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11396:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11389:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11182:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11190:3:1",
														"type": ""
													}
												],
												"src": "11048:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11566:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11576:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11642:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11647:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11583:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11576:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11748:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "11659:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11659:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11761:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11772:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11777:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11768:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11761:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11554:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11562:3:1",
														"type": ""
													}
												],
												"src": "11420:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11938:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11948:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12014:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11955:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11948:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12120:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "12031:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12031:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12133:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12144:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12140:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12133:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11926:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11934:3:1",
														"type": ""
													}
												],
												"src": "11792:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12310:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12320:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12386:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12391:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12327:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12320:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12492:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "12403:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12403:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12403:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12505:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12516:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12512:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12298:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12306:3:1",
														"type": ""
													}
												],
												"src": "12164:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12682:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12692:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12758:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12763:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12699:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12699:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12692:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12864:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																	"nodeType": "YulIdentifier",
																	"src": "12775:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12775:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12775:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12877:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12888:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12877:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12678:3:1",
														"type": ""
													}
												],
												"src": "12536:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13054:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13064:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13130:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13135:2:1",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13071:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13064:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13236:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "13147:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13147:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13147:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13249:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13260:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13265:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13256:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13042:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13050:3:1",
														"type": ""
													}
												],
												"src": "12908:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13426:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13436:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13502:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13507:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13443:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13443:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13436:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13608:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																	"nodeType": "YulIdentifier",
																	"src": "13519:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13519:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13519:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13621:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13632:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13637:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13628:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13628:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13621:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13414:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13422:3:1",
														"type": ""
													}
												],
												"src": "13280:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13717:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13734:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13757:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13739:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13739:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13727:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13727:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13727:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13705:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13712:3:1",
														"type": ""
													}
												],
												"src": "13652:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13910:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13921:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14008:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14017:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13928:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13928:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13921:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14031:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14038:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13889:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13895:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13906:3:1",
														"type": ""
													}
												],
												"src": "13776:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14151:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14161:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14169:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14161:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14241:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14265:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14250:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14197:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14197:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14197:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14123:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14135:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14146:4:1",
														"type": ""
													}
												],
												"src": "14053:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14407:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14417:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14429:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14440:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14425:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14425:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14417:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14497:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14521:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14506:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14453:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14453:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14453:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14578:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14602:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14587:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14534:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14534:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14534:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14371:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14383:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14391:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14402:4:1",
														"type": ""
													}
												],
												"src": "14281:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14783:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14806:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14791:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14783:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14863:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14876:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14887:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14872:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14819:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14819:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14819:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14944:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14968:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14953:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14900:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14900:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14900:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15026:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15039:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15050:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15035:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14982:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14982:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14982:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14729:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14741:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14749:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14757:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14768:4:1",
														"type": ""
													}
												],
												"src": "14619:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15193:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15203:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15215:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15226:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15211:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15211:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15203:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15283:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15296:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15307:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15292:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15239:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15239:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15239:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15364:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15377:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15388:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15373:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15320:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15320:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15320:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15157:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15169:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15177:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15188:4:1",
														"type": ""
													}
												],
												"src": "15067:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15517:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15527:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15539:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15550:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15535:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15527:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15621:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15645:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15630:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15563:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15563:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15563:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15489:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15501:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15512:4:1",
														"type": ""
													}
												],
												"src": "15405:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15857:385:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15867:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15890:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15875:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15962:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15975:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15986:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15971:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15971:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15904:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15904:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15904:85:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16043:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16052:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15999:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15999:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15999:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16125:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16149:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16134:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16081:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16081:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16081:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16207:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16220:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16231:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16216:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16216:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16163:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16163:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16163:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15805:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15817:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15825:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15833:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15852:4:1",
														"type": ""
													}
												],
												"src": "15661:581:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16389:221:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16399:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16422:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16407:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16399:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16494:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16518:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16503:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16435:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16435:86:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16435:86:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16575:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16588:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16599:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16584:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16584:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16531:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16531:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16531:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16353:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16365:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16373:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16384:4:1",
														"type": ""
													}
												],
												"src": "16248:362:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16735:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16745:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16757:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16768:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16753:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16753:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16745:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16846:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16859:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16870:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16855:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16781:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16781:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16781:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16707:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16719:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16730:4:1",
														"type": ""
													}
												],
												"src": "16616:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17004:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17014:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17026:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17037:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17022:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17022:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17014:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17072:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17057:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17080:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17086:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17076:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17050:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17050:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17106:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17178:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17187:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17114:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17114:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17106:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16976:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16988:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16999:4:1",
														"type": ""
													}
												],
												"src": "16886:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17376:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17386:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17398:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17409:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17394:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17394:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17386:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17433:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17444:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17429:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17429:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17452:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17458:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17448:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17448:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17422:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17422:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17478:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17612:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17486:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17486:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17478:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17356:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17371:4:1",
														"type": ""
													}
												],
												"src": "17205:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17801:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17811:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17823:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17834:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17819:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17811:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17869:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17854:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17877:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17883:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17873:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17847:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17847:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17903:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18037:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17911:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17911:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17903:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17781:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17796:4:1",
														"type": ""
													}
												],
												"src": "17630:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18226:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18236:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18248:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18259:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18244:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18244:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18236:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18283:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18294:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18279:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18302:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18308:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18298:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18272:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18272:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18328:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18462:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18336:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18336:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18328:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18206:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18221:4:1",
														"type": ""
													}
												],
												"src": "18055:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18651:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18719:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18704:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18727:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18733:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18723:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18697:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18697:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18753:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18887:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18761:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18761:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18753:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18631:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18646:4:1",
														"type": ""
													}
												],
												"src": "18480:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19076:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19086:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19098:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19109:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19094:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19086:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19144:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19129:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19152:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19158:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19148:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19122:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19122:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19178:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19312:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19186:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19186:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19178:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19056:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19071:4:1",
														"type": ""
													}
												],
												"src": "18905:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19501:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19511:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19523:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19534:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19519:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19511:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19558:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19569:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19554:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19577:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19583:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19573:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19547:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19547:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19603:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19737:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19611:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19611:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19603:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19481:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19496:4:1",
														"type": ""
													}
												],
												"src": "19330:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19926:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19936:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19948:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19959:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19944:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19944:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19936:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19994:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19979:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20002:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20008:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19998:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19972:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19972:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20028:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20162:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20036:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20036:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20028:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19906:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19921:4:1",
														"type": ""
													}
												],
												"src": "19755:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20351:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20361:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20369:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20361:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20408:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20419:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20404:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20427:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20433:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20423:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20397:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20397:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20453:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20587:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20461:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20461:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20453:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20331:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20346:4:1",
														"type": ""
													}
												],
												"src": "20180:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20776:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20786:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20798:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20794:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20794:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20786:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20833:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20844:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20829:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20852:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20858:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20848:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20848:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20822:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20822:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20878:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21012:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20886:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20886:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20878:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20756:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20771:4:1",
														"type": ""
													}
												],
												"src": "20605:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21201:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21211:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21223:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21234:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21219:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21219:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21211:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21269:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21254:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21277:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21283:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21273:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21247:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21247:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21303:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21437:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21311:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21311:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21303:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21181:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21196:4:1",
														"type": ""
													}
												],
												"src": "21030:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21626:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21636:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21648:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21659:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21644:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21636:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21694:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21679:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21702:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21708:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21698:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21672:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21672:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21728:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21862:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21736:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21736:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21728:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21606:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21621:4:1",
														"type": ""
													}
												],
												"src": "21455:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22051:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22061:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22108:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22119:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22104:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22127:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22133:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22123:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22097:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22097:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22153:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22287:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22161:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22161:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22153:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22031:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22046:4:1",
														"type": ""
													}
												],
												"src": "21880:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22476:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22486:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22498:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22509:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22494:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22486:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22544:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22529:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22552:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22558:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22548:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22522:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22522:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22578:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22712:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22586:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22586:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22578:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22456:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22471:4:1",
														"type": ""
													}
												],
												"src": "22305:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22901:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22911:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22919:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22919:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22911:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22958:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22969:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22954:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22977:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22983:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22973:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22947:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22947:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23003:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23137:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23011:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23011:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23003:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22881:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22896:4:1",
														"type": ""
													}
												],
												"src": "22730:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23326:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23336:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23348:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23359:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23344:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23336:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23383:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23394:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23379:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23402:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23408:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23398:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23372:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23372:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23428:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23562:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23436:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23436:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23428:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23306:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23321:4:1",
														"type": ""
													}
												],
												"src": "23155:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23751:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23761:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23769:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23761:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23808:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23819:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23804:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23827:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23833:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23823:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23797:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23797:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23853:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23987:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23861:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23861:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23853:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23731:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23746:4:1",
														"type": ""
													}
												],
												"src": "23580:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24103:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24113:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24125:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24136:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24121:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24113:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24193:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24206:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24217:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24202:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24149:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24149:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24149:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24075:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24087:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24098:4:1",
														"type": ""
													}
												],
												"src": "24005:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24359:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24369:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24381:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24392:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24377:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24369:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24449:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24473:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24458:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24405:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24405:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24405:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24530:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24554:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24539:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24486:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24486:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24486:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24323:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24335:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24343:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24354:4:1",
														"type": ""
													}
												],
												"src": "24233:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24611:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24621:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24637:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24631:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24631:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "24621:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24604:6:1",
														"type": ""
													}
												],
												"src": "24571:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24710:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24721:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24737:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24731:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24731:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24721:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24693:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24703:6:1",
														"type": ""
													}
												],
												"src": "24652:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24815:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24826:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24842:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24836:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24836:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24826:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24798:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24808:6:1",
														"type": ""
													}
												],
												"src": "24756:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24974:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24984:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24999:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24984:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24946:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24951:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24962:11:1",
														"type": ""
													}
												],
												"src": "24861:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25110:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25127:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25132:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25120:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25120:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25148:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25167:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25172:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25163:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25148:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25082:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25087:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25098:11:1",
														"type": ""
													}
												],
												"src": "25014:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25233:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25243:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25266:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25248:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25248:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25243:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25277:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25300:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25282:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25282:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25277:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25440:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25442:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25442:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25442:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25361:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25368:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25436:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25364:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25358:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25358:81:1"
															},
															"nodeType": "YulIf",
															"src": "25355:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25472:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25483:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25486:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25479:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25479:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25472:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25220:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25223:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25229:3:1",
														"type": ""
													}
												],
												"src": "25189:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25542:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25552:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25575:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25557:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25557:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25552:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25586:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25609:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25591:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25591:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25586:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25633:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "25635:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25635:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25635:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25630:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25623:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25623:9:1"
															},
															"nodeType": "YulIf",
															"src": "25620:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25665:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25674:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25677:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "25670:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25670:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "25665:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25531:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25534:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "25540:1:1",
														"type": ""
													}
												],
												"src": "25500:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25739:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25749:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25772:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25754:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25754:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25749:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25783:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25806:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25788:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25788:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25783:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25981:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25983:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25983:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25983:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "25893:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "25886:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25886:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25879:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25879:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25901:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25908:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "25976:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "25904:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25904:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "25898:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25898:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25875:105:1"
															},
															"nodeType": "YulIf",
															"src": "25872:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26013:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26028:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26031:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26024:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "26013:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25722:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25725:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "25731:7:1",
														"type": ""
													}
												],
												"src": "25691:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26090:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26100:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26123:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26105:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26105:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26100:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26134:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26157:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26139:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26139:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26134:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26181:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26183:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26183:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26183:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26175:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26178:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26172:8:1"
															},
															"nodeType": "YulIf",
															"src": "26169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26213:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26225:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26228:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26221:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "26213:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26076:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26079:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "26085:4:1",
														"type": ""
													}
												],
												"src": "26045:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26287:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26297:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26326:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26308:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26308:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26297:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26269:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26279:7:1",
														"type": ""
													}
												],
												"src": "26242:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26386:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26396:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26421:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "26414:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26414:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26407:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26396:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26368:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26378:7:1",
														"type": ""
													}
												],
												"src": "26344:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26499:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26509:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26538:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "26520:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26520:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26509:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26481:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26491:7:1",
														"type": ""
													}
												],
												"src": "26440:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26616:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26626:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26655:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "26637:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26637:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26626:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26598:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26608:7:1",
														"type": ""
													}
												],
												"src": "26556:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26739:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26749:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26778:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "26760:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26760:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26749:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26721:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26731:7:1",
														"type": ""
													}
												],
												"src": "26673:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26841:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26851:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26866:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26873:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26862:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26862:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26851:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26823:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26833:7:1",
														"type": ""
													}
												],
												"src": "26796:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26973:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26983:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26994:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26983:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26955:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26965:7:1",
														"type": ""
													}
												],
												"src": "26928:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27085:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27095:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27139:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "27108:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27108:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27095:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27065:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27075:9:1",
														"type": ""
													}
												],
												"src": "27011:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27232:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27242:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27286:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "27255:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27255:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27242:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$933_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27212:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27222:9:1",
														"type": ""
													}
												],
												"src": "27157:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27385:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27395:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27439:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "27408:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27408:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27395:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27365:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27375:9:1",
														"type": ""
													}
												],
												"src": "27304:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27517:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27527:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27571:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "27540:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27540:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27527:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27497:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27507:9:1",
														"type": ""
													}
												],
												"src": "27457:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27649:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27659:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27690:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "27672:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27672:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27659:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27629:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27639:9:1",
														"type": ""
													}
												],
												"src": "27589:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27757:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27767:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "27776:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "27771:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27836:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27861:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "27866:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27857:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27857:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "27880:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "27885:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27876:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27876:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27870:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27870:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27850:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27850:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27797:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27800:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27794:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27794:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27808:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27810:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "27819:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27822:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27815:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27815:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "27810:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "27790:3:1",
																"statements": []
															},
															"src": "27786:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27933:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27983:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "27988:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27979:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27979:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27997:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27972:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27972:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27972:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27914:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27917:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27911:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27911:13:1"
															},
															"nodeType": "YulIf",
															"src": "27908:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "27739:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "27744:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27749:6:1",
														"type": ""
													}
												],
												"src": "27708:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28064:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28074:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28101:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28083:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28083:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28074:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28197:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28199:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28199:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28199:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28122:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28129:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "28119:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28119:77:1"
															},
															"nodeType": "YulIf",
															"src": "28116:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28228:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28239:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28246:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28235:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28235:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "28228:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28050:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "28060:3:1",
														"type": ""
													}
												],
												"src": "28021:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28288:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28305:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28308:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28298:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28298:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28402:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28405:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28395:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28395:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28426:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28429:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28419:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28419:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "28260:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28474:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28491:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28494:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28484:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28484:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28588:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28591:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28581:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28581:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28612:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28615:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28605:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28605:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "28446:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28660:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28677:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28680:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28670:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28670:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28774:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28777:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28767:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28767:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28798:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28801:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28791:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28791:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "28632:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28907:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28927:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28917:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28917:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28917:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "28818:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29030:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29047:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29050:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29040:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29040:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "28941:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29112:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29122:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29140:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29147:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29136:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29136:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29156:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "29152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29152:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29132:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "29122:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29095:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "29105:6:1",
														"type": ""
													}
												],
												"src": "29064:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29278:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29300:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29308:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29296:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29312:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29289:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29289:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29289:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29368:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29376:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29364:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29381:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29357:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29357:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29270:6:1",
														"type": ""
													}
												],
												"src": "29172:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29509:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29531:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29539:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29527:14:1"
																	},
																	{
																		"hexValue": "506f776572206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29543:21:1",
																		"type": "",
																		"value": "Power is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29520:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29520:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29501:6:1",
														"type": ""
													}
												],
												"src": "29403:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29684:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29706:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29714:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29702:14:1"
																	},
																	{
																		"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29718:29:1",
																		"type": "",
																		"value": "withdraw Power by unstaking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29695:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29695:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29676:6:1",
														"type": ""
													}
												],
												"src": "29578:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29867:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29889:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29897:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29885:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29901:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29878:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29878:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29859:6:1",
														"type": ""
													}
												],
												"src": "29761:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30050:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30072:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30080:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30068:14:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30084:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30061:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30061:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30140:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30148:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30136:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30136:15:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30153:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30129:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30129:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30129:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30042:6:1",
														"type": ""
													}
												],
												"src": "29944:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30281:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30303:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30311:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30299:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206973207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30315:16:1",
																		"type": "",
																		"value": "Amount is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30292:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30292:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30273:6:1",
														"type": ""
													}
												],
												"src": "30175:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30451:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30473:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30481:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30469:14:1"
																	},
																	{
																		"hexValue": "6465706f73697420506f776572206279207374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30485:26:1",
																		"type": "",
																		"value": "deposit Power by staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30462:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30462:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30443:6:1",
														"type": ""
													}
												],
												"src": "30345:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30631:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30653:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30661:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30649:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30665:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30642:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30642:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30721:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30729:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30717:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30734:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30710:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30710:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30623:6:1",
														"type": ""
													}
												],
												"src": "30525:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30857:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30879:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30887:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30875:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30891:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30868:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30868:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30849:6:1",
														"type": ""
													}
												],
												"src": "30751:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31045:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31067:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31075:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31063:14:1"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742066616d696c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31079:22:1",
																		"type": "",
																		"value": "Caller is not family"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31056:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31056:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31037:6:1",
														"type": ""
													}
												],
												"src": "30939:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31221:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31243:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31251:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31239:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31255:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31232:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31232:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31213:6:1",
														"type": ""
													}
												],
												"src": "31115:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31406:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31428:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31424:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31440:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31417:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31417:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31398:6:1",
														"type": ""
													}
												],
												"src": "31300:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31580:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31602:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31610:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31598:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31614:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31591:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31591:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31670:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31678:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31666:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31683:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31659:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31659:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31659:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31572:6:1",
														"type": ""
													}
												],
												"src": "31474:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31815:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31837:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31845:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31833:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a20626164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31849:14:1",
																		"type": "",
																		"value": "migrate: bad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31826:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31826:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31807:6:1",
														"type": ""
													}
												],
												"src": "31709:162:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31983:135:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32005:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32013:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32001:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32017:34:1",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31994:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31994:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32073:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32081:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32069:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32069:15:1"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32086:24:1",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32062:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32062:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32062:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31975:6:1",
														"type": ""
													}
												],
												"src": "31877:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32230:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32252:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32260:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32248:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a206e6f206d69677261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32264:22:1",
																		"type": "",
																		"value": "migrate: no migrator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32241:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32241:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32222:6:1",
														"type": ""
													}
												],
												"src": "32124:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32343:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32400:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32409:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32412:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32402:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32402:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32402:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32366:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32391:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "32373:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32373:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32363:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32363:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32356:43:1"
															},
															"nodeType": "YulIf",
															"src": "32353:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32336:5:1",
														"type": ""
													}
												],
												"src": "32300:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32468:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32522:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32531:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32534:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32524:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32524:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32524:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32491:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32513:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "32498:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32498:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32488:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32488:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32481:40:1"
															},
															"nodeType": "YulIf",
															"src": "32478:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32461:5:1",
														"type": ""
													}
												],
												"src": "32428:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32607:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32678:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32687:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32690:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32680:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32680:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32680:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32630:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32669:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "32637:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32637:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32627:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32627:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32620:57:1"
															},
															"nodeType": "YulIf",
															"src": "32617:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32600:5:1",
														"type": ""
													}
												],
												"src": "32550:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32764:94:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32836:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32848:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32838:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32838:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32838:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32787:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32827:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$933",
																					"nodeType": "YulIdentifier",
																					"src": "32794:32:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32794:39:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32784:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32784:50:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32777:58:1"
															},
															"nodeType": "YulIf",
															"src": "32774:78:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32757:5:1",
														"type": ""
													}
												],
												"src": "32706:152:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32928:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33006:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33015:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33018:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "33008:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33008:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33008:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32951:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32997:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "32958:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32958:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32948:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32948:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32941:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32941:64:1"
															},
															"nodeType": "YulIf",
															"src": "32938:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32921:5:1",
														"type": ""
													}
												],
												"src": "32864:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33077:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33134:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33143:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33146:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "33136:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33136:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33136:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33100:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "33125:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "33107:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33107:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "33097:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33097:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33090:43:1"
															},
															"nodeType": "YulIf",
															"src": "33087:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33070:5:1",
														"type": ""
													}
												],
												"src": "33034:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$286(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$933(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$933(value)\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$933t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$933(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$286(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$933_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$933(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$933_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(memPtr) {\n\n        mstore(add(memPtr, 0), \"Power is not enough\")\n\n    }\n\n    function store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw Power by unstaking\")\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is zero\")\n\n    }\n\n    function store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit Power by staking\")\n\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not family\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: bad\")\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: no migrator\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$933(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$933(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102325760003560e01c80635ffe6146116101305780638da5cb5b116100b8578063cf35fddf1161007c578063cf35fddf1461062c578063d209db8c14610648578063e2bbb15814610678578063f2fde38b14610694578063f3239ab5146106b057610232565b80638da5cb5b146105735780638dbb1e3a1461059157806393f1a40b146105c1578063c11490cc146105f2578063cb3cba551461060e57610232565b8063715018a6116100ff578063715018a6146104df5780637cd07e47146104e957806383e32135146105075780638aa28550146105255780638c51793b1461054357610232565b80635ffe61461461046c57806361c1b72414610488578063630b5ba1146104b957806364482f79146104c357610232565b80633df7aff3116101be5780634ea2813c116101825780634ea2813c146103de57806351eb05a6146103fa5780635312ea8e1461041657806356b4685f146104325780635990c5691461044e57610232565b80633df7aff31461035057806341441d3b1461036c578063441a3e7014610388578063454b0608146103a457806348cd4cb1146103c057610232565b806317caf6f11161020557806317caf6f1146102c05780631d5fbd87146102de5780631eaaa045146102fa57806322f585411461031657806323cf31181461033457610232565b8063081e3eda146102375780630ba33a58146102555780631058d281146102715780631526fe271461028d575b600080fd5b61023f6106e0565b60405161024c9190614090565b60405180910390f35b61026f600480360381019061026a91906137b6565b6106ed565b005b61028b600480360381019061028691906138aa565b6107ad565b005b6102a760048036038101906102a291906138aa565b610a6c565b6040516102b79493929190613de5565b60405180910390f35b6102c8610acc565b6040516102d59190614090565b60405180910390f35b6102f860048036038101906102f39190613997565b610ad2565b005b610314600480360381019061030f9190613944565b610f66565b005b61031e6110f3565b60405161032b9190613d26565b60405180910390f35b61034e6004803603810190610349919061387d565b611119565b005b61036a600480360381019061036591906138aa565b6111d9565b005b610386600480360381019061038191906138aa565b61125f565b005b6103a2600480360381019061039d9190613997565b61152a565b005b6103be60048036038101906103b991906138aa565b611821565b005b6103c8611ba1565b6040516103d59190614090565b60405180910390f35b6103f860048036038101906103f3919061383d565b611ba7565b005b610414600480360381019061040f91906138aa565b611cd0565b005b610430600480360381019061042b91906138aa565b611e7e565b005b61044c600480360381019061044791906137b6565b611fb7565b005b610456612077565b6040516104639190614090565b60405180910390f35b610486600480360381019061048191906138aa565b61207d565b005b6104a2600480360381019061049d91906138aa565b612103565b6040516104b0929190613e2a565b60405180910390f35b6104c1612157565b005b6104dd60048036038101906104d891906139d7565b61218a565b005b6104e7612296565b005b6104f161231e565b6040516104fe9190613e53565b60405180910390f35b61050f612344565b60405161051c9190613d26565b60405180910390f35b61052d61236a565b60405161053a9190614090565b60405180910390f35b61055d600480360381019061055891906137b6565b612370565b60405161056a9190614090565b60405180910390f35b61057b6123b9565b6040516105889190613d26565b60405180910390f35b6105ab60048036038101906105a69190613997565b6123e2565b6040516105b89190614090565b60405180910390f35b6105db60048036038101906105d69190613904565b612413565b6040516105e99291906140ab565b60405180910390f35b61060c60048036038101906106079190613997565b612444565b005b6106166124ee565b6040516106239190613dca565b60405180910390f35b61064660048036038101906106419190613904565b612514565b005b610662600480360381019061065d91906137b6565b6128c8565b60405161066f9190614090565b60405180910390f35b610692600480360381019061068d9190613997565b6128e0565b005b6106ae60048036038101906106a991906137b6565b612be3565b005b6106ca60048036038101906106c59190613904565b612cdb565b6040516106d79190614090565b60405180910390f35b6000600680549050905090565b6106f5612f0f565b73ffffffffffffffffffffffffffffffffffffffff166107136123b9565b73ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090613f90565b60405180910390fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060066000815481106107c4576107c36143cd565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690613ff0565b60405180910390fd5b6108796000611cd0565b60006108c382600101546108b564e8d4a510006108a787600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b905060008111156109645761092081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411156109dc57610984848360000154612fdc90919063ffffffff16565b82600001819055506109db33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130849092919063ffffffff16565b5b610a0e64e8d4a51000610a0085600301548560000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610a5e9190614090565b60405180910390a350505050565b60068181548110610a7c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b600060068281548110610ae857610ae76143cd565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bb49190613d26565b60206040518083038186803b158015610bcc57600080fd5b505afa158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0491906138d7565b9050836002015443118015610c1a575060008114155b15610cb5576000610c2f8560020154436123e2565b90506000610c72600854610c648860010154610c5660035487612f1790919063ffffffff16565b612f1790919063ffffffff16565b612f9290919063ffffffff16565b9050610cb0610ca184610c9364e8d4a5100085612f1790919063ffffffff16565b612f9290919063ffffffff16565b8561302690919063ffffffff16565b935050505b6000610cfb8460010154610ced64e8d4a51000610cdf878960000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b9050600060018881548110610d1357610d126143cd565b5b906000526020600020906002020190506000610d77600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461302690919063ffffffff16565b90508160010154811115610dae576000881415610d9957610d9860006107ad565b5b60008814610dad57610dac88600061152a565b5b5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90613eb0565b60405180910390fd5b610e898260010154600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fdc90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610f299190613d26565b600060405180830381600087803b158015610f4357600080fd5b505af1158015610f57573d6000803e3d6000fd5b50505050505050505050505050565b610f6e612f0f565b73ffffffffffffffffffffffffffffffffffffffff16610f8c6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614610fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd990613f90565b60405180910390fd5b8015610ff157610ff0612157565b5b6000600954431161100457600954611006565b435b905061101d8460085461302690919063ffffffff16565b600881905550600660405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611121612f0f565b73ffffffffffffffffffffffffffffffffffffffff1661113f6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614611195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118c90613f90565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6111e1612f0f565b73ffffffffffffffffffffffffffffffffffffffff166111ff6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614611255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124c90613f90565b60405180910390fd5b8060038190555050565b600081116112a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129990613f30565b60405180910390fd5b600060066000815481106112b9576112b86143cd565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506113276000611cd0565b60008160000154111561142157600061137e826001015461137064e8d4a5100061136287600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b9050600081111561141f576113db81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b600083111561149b5761147b3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661310a909392919063ffffffff16565b61149283826000015461302690919063ffffffff16565b81600001819055505b6114cd64e8d4a510006114bf84600301548460000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161151d9190614090565b60405180910390a3505050565b600082141561156e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156590613ed0565b60405180910390fd5b600060068381548110611584576115836143cd565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561162f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162690613ff0565b60405180910390fd5b61163884611cd0565b6000611682826001015461167464e8d4a5100061166687600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b90506000811115611723576116df81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61173a848360000154612fdc90919063ffffffff16565b826000018190555061177464e8d4a5100061176685600301548560000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b82600101819055506117cb33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130849092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516118129190614090565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118aa90614070565b60405180910390fd5b6000600682815481106118c9576118c86143cd565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161193d9190613d26565b60206040518083038186803b15801561195557600080fd5b505afa158015611969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198d91906138d7565b90506119dc600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166131939092919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b8152600401611a399190613dca565b602060405180830381600087803b158015611a5357600080fd5b505af1158015611a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8b9190613810565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ac69190613d26565b60206040518083038186803b158015611ade57600080fd5b505afa158015611af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1691906138d7565b8214611b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4e90614030565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60095481565b611baf612f0f565b73ffffffffffffffffffffffffffffffffffffffff16611bcd6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614611c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1a90613f90565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060068281548110611ce657611ce56143cd565b5b9060005260206000209060040201905080600201544311611d075750611e7b565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d669190613d26565b60206040518083038186803b158015611d7e57600080fd5b505afa158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db691906138d7565b905060008111611dd0574382600201819055505050611e7b565b6000611de08360020154436123e2565b90506000611e23600854611e158660010154611e0760035487612f1790919063ffffffff16565b612f1790919063ffffffff16565b612f9290919063ffffffff16565b9050611e65611e5284611e4464e8d4a5100085612f1790919063ffffffff16565b612f9290919063ffffffff16565b856003015461302690919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060068281548110611e9457611e936143cd565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611f4b3382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130849092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611f969190614090565b60405180910390a36000816000018190555060008160010181905550505050565b611fbf612f0f565b73ffffffffffffffffffffffffffffffffffffffff16611fdd6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612033576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202a90613f90565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b612085612f0f565b73ffffffffffffffffffffffffffffffffffffffff166120a36123b9565b73ffffffffffffffffffffffffffffffffffffffff16146120f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120f090613f90565b60405180910390fd5b8060048190555050565b6001818154811061211357600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600680549050905060005b818110156121865761217581611cd0565b8061217f90614326565b9050612164565b5050565b612192612f0f565b73ffffffffffffffffffffffffffffffffffffffff166121b06123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121fd90613f90565b60405180910390fd5b801561221557612214612157565b5b61226182612253600686815481106122305761222f6143cd565b5b906000526020600020906004020160010154600854612fdc90919063ffffffff16565b61302690919063ffffffff16565b600881905550816006848154811061227c5761227b6143cd565b5b906000526020600020906004020160010181905550505050565b61229e612f0f565b73ffffffffffffffffffffffffffffffffffffffff166122bc6123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230990613f90565b60405180910390fd5b61231c60006132f1565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061240b6004546123fd8585612fdc90919063ffffffff16565b612f1790919063ffffffff16565b905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b61244c612f0f565b73ffffffffffffffffffffffffffffffffffffffff1661246a6123b9565b73ffffffffffffffffffffffffffffffffffffffff16146124c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b790613f90565b60405180910390fd5b80600183815481106124d5576124d46143cd565b5b9060005260206000209060020201600101819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008211612557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254e90613f30565b60405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806126005750600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61263f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161263690613fb0565b60405180910390fd5b60006006600081548110612656576126556143cd565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506126c46000611cd0565b6000816000015411156127be57600061271b826001015461270d64e8d4a510006126ff87600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b905060008111156127bc5761277881600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b6000841115612838576128183330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661310a909392919063ffffffff16565b61282f84826000015461302690919063ffffffff16565b81600001819055505b61286a64e8d4a5100061285c84600301548460000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b816001018190555060008373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040516128ba9190614090565b60405180910390a350505050565b600c6020528060005260406000206000915090505481565b6000821415612924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161291b90613f50565b60405180910390fd5b60008111612967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295e90613f30565b60405180910390fd5b60006006838154811061297d5761297c6143cd565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506129ea84611cd0565b600081600001541115612ae4576000612a418260010154612a3364e8d4a51000612a2587600301548760000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b90506000811115612ae257612a9e81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b612b353330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661310a909392919063ffffffff16565b612b4c83826000015461302690919063ffffffff16565b8160000181905550612b8664e8d4a51000612b7884600301548460000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051612bd59190614090565b60405180910390a350505050565b612beb612f0f565b73ffffffffffffffffffffffffffffffffffffffff16612c096123b9565b73ffffffffffffffffffffffffffffffffffffffff1614612c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5690613f90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ccf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cc690613e90565b60405180910390fd5b612cd8816132f1565b50565b60008060068481548110612cf257612cf16143cd565b5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612dbe9190613d26565b60206040518083038186803b158015612dd657600080fd5b505afa158015612dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e0e91906138d7565b9050836002015443118015612e24575060008114155b15612ebf576000612e398560020154436123e2565b90506000612e7c600854612e6e8860010154612e6060035487612f1790919063ffffffff16565b612f1790919063ffffffff16565b612f9290919063ffffffff16565b9050612eba612eab84612e9d64e8d4a5100085612f1790919063ffffffff16565b612f9290919063ffffffff16565b8561302690919063ffffffff16565b935050505b612f038360010154612ef564e8d4a51000612ee7868860000154612f1790919063ffffffff16565b612f9290919063ffffffff16565b612fdc90919063ffffffff16565b94505050505092915050565b600033905090565b600080831415612f2a5760009050612f8c565b60008284612f38919061418d565b9050828482612f47919061415c565b14612f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7e90613f70565b60405180910390fd5b809150505b92915050565b6000612fd483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506133b5565b905092915050565b600061301e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613418565b905092915050565b60008082846130359190614106565b90508381101561307a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161307190613ef0565b60405180910390fd5b8091505092915050565b6131058363a9059cbb60e01b84846040516024016130a3929190613da1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061347c565b505050565b61318d846323b872dd60e01b85858560405160240161312b93929190613d6a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061347c565b50505050565b600081148061322c575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016131da929190613d41565b60206040518083038186803b1580156131f257600080fd5b505afa158015613206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061322a91906138d7565b145b61326b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161326290614050565b60405180910390fd5b6132ec8363095ea7b360e01b848460405160240161328a929190613da1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061347c565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080831182906133fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133f39190613e6e565b60405180910390fd5b506000838561340b919061415c565b9050809150509392505050565b6000838311158290613460576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134579190613e6e565b60405180910390fd5b506000838561346f91906141e7565b9050809150509392505050565b60006134de826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166135439092919063ffffffff16565b905060008151111561353e57808060200190518101906134fe91906137e3565b61353d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161353490614010565b60405180910390fd5b5b505050565b6060613552848460008561355b565b90509392505050565b6060824710156135a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161359790613f10565b60405180910390fd5b6135a98561366f565b6135e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135df90613fd0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516136119190613d0f565b60006040518083038185875af1925050503d806000811461364e576040519150601f19603f3d011682016040523d82523d6000602084013e613653565b606091505b5091509150613663828286613692565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156136a2578290506136f2565b6000835111156136b55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136e99190613e6e565b60405180910390fd5b9392505050565b60008135905061370881614760565b92915050565b60008135905061371d81614777565b92915050565b60008151905061373281614777565b92915050565b6000813590506137478161478e565b92915050565b60008151905061375c8161478e565b92915050565b600081359050613771816147a5565b92915050565b600081359050613786816147bc565b92915050565b60008135905061379b816147d3565b92915050565b6000815190506137b0816147d3565b92915050565b6000602082840312156137cc576137cb6143fc565b5b60006137da848285016136f9565b91505092915050565b6000602082840312156137f9576137f86143fc565b5b600061380784828501613723565b91505092915050565b600060208284031215613826576138256143fc565b5b60006138348482850161374d565b91505092915050565b60008060408385031215613854576138536143fc565b5b600061386285828601613762565b92505060206138738582860161378c565b9150509250929050565b600060208284031215613893576138926143fc565b5b60006138a184828501613777565b91505092915050565b6000602082840312156138c0576138bf6143fc565b5b60006138ce8482850161378c565b91505092915050565b6000602082840312156138ed576138ec6143fc565b5b60006138fb848285016137a1565b91505092915050565b6000806040838503121561391b5761391a6143fc565b5b60006139298582860161378c565b925050602061393a858286016136f9565b9150509250929050565b60008060006060848603121561395d5761395c6143fc565b5b600061396b8682870161378c565b935050602061397c86828701613738565b925050604061398d8682870161370e565b9150509250925092565b600080604083850312156139ae576139ad6143fc565b5b60006139bc8582860161378c565b92505060206139cd8582860161378c565b9150509250929050565b6000806000606084860312156139f0576139ef6143fc565b5b60006139fe8682870161378c565b9350506020613a0f8682870161378c565b9250506040613a208682870161370e565b9150509250925092565b613a338161421b565b82525050565b6000613a44826140d4565b613a4e81856140ea565b9350613a5e8185602086016142f3565b80840191505092915050565b613a7381614299565b82525050565b613a82816142ab565b82525050565b613a91816142bd565b82525050565b6000613aa2826140df565b613aac81856140f5565b9350613abc8185602086016142f3565b613ac581614401565b840191505092915050565b6000613add6026836140f5565b9150613ae882614412565b604082019050919050565b6000613b006013836140f5565b9150613b0b82614461565b602082019050919050565b6000613b23601b836140f5565b9150613b2e8261448a565b602082019050919050565b6000613b46601b836140f5565b9150613b51826144b3565b602082019050919050565b6000613b696026836140f5565b9150613b74826144dc565b604082019050919050565b6000613b8c600e836140f5565b9150613b978261452b565b602082019050919050565b6000613baf6018836140f5565b9150613bba82614554565b602082019050919050565b6000613bd26021836140f5565b9150613bdd8261457d565b604082019050919050565b6000613bf56020836140f5565b9150613c00826145cc565b602082019050919050565b6000613c186014836140f5565b9150613c23826145f5565b602082019050919050565b6000613c3b601d836140f5565b9150613c468261461e565b602082019050919050565b6000613c5e6012836140f5565b9150613c6982614647565b602082019050919050565b6000613c81602a836140f5565b9150613c8c82614670565b604082019050919050565b6000613ca4600c836140f5565b9150613caf826146bf565b602082019050919050565b6000613cc76036836140f5565b9150613cd2826146e8565b604082019050919050565b6000613cea6014836140f5565b9150613cf582614737565b602082019050919050565b613d098161428f565b82525050565b6000613d1b8284613a39565b915081905092915050565b6000602082019050613d3b6000830184613a2a565b92915050565b6000604082019050613d566000830185613a2a565b613d636020830184613a2a565b9392505050565b6000606082019050613d7f6000830186613a2a565b613d8c6020830185613a2a565b613d996040830184613d00565b949350505050565b6000604082019050613db66000830185613a2a565b613dc36020830184613d00565b9392505050565b6000602082019050613ddf6000830184613a6a565b92915050565b6000608082019050613dfa6000830187613a6a565b613e076020830186613d00565b613e146040830185613d00565b613e216060830184613d00565b95945050505050565b6000604082019050613e3f6000830185613a79565b613e4c6020830184613d00565b9392505050565b6000602082019050613e686000830184613a88565b92915050565b60006020820190508181036000830152613e888184613a97565b905092915050565b60006020820190508181036000830152613ea981613ad0565b9050919050565b60006020820190508181036000830152613ec981613af3565b9050919050565b60006020820190508181036000830152613ee981613b16565b9050919050565b60006020820190508181036000830152613f0981613b39565b9050919050565b60006020820190508181036000830152613f2981613b5c565b9050919050565b60006020820190508181036000830152613f4981613b7f565b9050919050565b60006020820190508181036000830152613f6981613ba2565b9050919050565b60006020820190508181036000830152613f8981613bc5565b9050919050565b60006020820190508181036000830152613fa981613be8565b9050919050565b60006020820190508181036000830152613fc981613c0b565b9050919050565b60006020820190508181036000830152613fe981613c2e565b9050919050565b6000602082019050818103600083015261400981613c51565b9050919050565b6000602082019050818103600083015261402981613c74565b9050919050565b6000602082019050818103600083015261404981613c97565b9050919050565b6000602082019050818103600083015261406981613cba565b9050919050565b6000602082019050818103600083015261408981613cdd565b9050919050565b60006020820190506140a56000830184613d00565b92915050565b60006040820190506140c06000830185613d00565b6140cd6020830184613d00565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006141118261428f565b915061411c8361428f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156141515761415061436f565b5b828201905092915050565b60006141678261428f565b91506141728361428f565b9250826141825761418161439e565b5b828204905092915050565b60006141988261428f565b91506141a38361428f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156141dc576141db61436f565b5b828202905092915050565b60006141f28261428f565b91506141fd8361428f565b9250828210156142105761420f61436f565b5b828203905092915050565b60006142268261426f565b9050919050565b60008115159050919050565b60006142448261421b565b9050919050565b60006142568261421b565b9050919050565b60006142688261421b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006142a4826142cf565b9050919050565b60006142b6826142cf565b9050919050565b60006142c8826142cf565b9050919050565b60006142da826142e1565b9050919050565b60006142ec8261426f565b9050919050565b60005b838110156143115780820151818401526020810190506142f6565b83811115614320576000848401525b50505050565b60006143318261428f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156143645761436361436f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616c6c6572206973206e6f742066616d696c79000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b6147698161421b565b811461477457600080fd5b50565b6147808161422d565b811461478b57600080fd5b50565b61479781614239565b81146147a257600080fd5b50565b6147ae8161424b565b81146147b957600080fd5b50565b6147c58161425d565b81146147d057600080fd5b50565b6147dc8161428f565b81146147e757600080fd5b5056fea2646970667358221220962cf93e4ccc25697da1448128fa4db6cf4b560440b897cf8161f3e66a909ec164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FFE6146 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF35FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF35FDDF EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x6B0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xC11490CC EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x60E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x83E32135 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x543 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4C3 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x56B4685F EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x44E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x3C0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x22F58541 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x334 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xBA33A58 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x3944 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x1119 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x125F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x152A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x383D JUMP JUMPDEST PUSH2 0x1BA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1CD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x1E7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x1FB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x456 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x207D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0x2157 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x39D7 JUMP JUMPDEST PUSH2 0x218A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E7 PUSH2 0x2296 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x3E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x236A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x2370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP3 SWAP2 SWAP1 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x2444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x646 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH2 0x2514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0x28E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x37B6 JUMP JUMPDEST PUSH2 0x2BE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH2 0x2CDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x713 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x7C4 JUMPI PUSH2 0x7C3 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x879 PUSH1 0x0 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x8B5 PUSH5 0xE8D4A51000 PUSH2 0x8A7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH2 0x920 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x984 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9DB CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3084 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA0E PUSH5 0xE8D4A51000 PUSH2 0xA00 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xC1A JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xCB5 JUMPI PUSH1 0x0 PUSH2 0xC2F DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x23E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC72 PUSH1 0x8 SLOAD PUSH2 0xC64 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC56 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCB0 PUSH2 0xCA1 DUP5 PUSH2 0xC93 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCFB DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCED PUSH5 0xE8D4A51000 PUSH2 0xCDF DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xD13 JUMPI PUSH2 0xD12 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD77 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP9 EQ ISZERO PUSH2 0xD99 JUMPI PUSH2 0xD98 PUSH1 0x0 PUSH2 0x7AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xDAD JUMPI PUSH2 0xDAC DUP9 PUSH1 0x0 PUSH2 0x152A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x3EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE89 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF6E PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8C PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD9 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0x2157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0x1004 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1006 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x101D DUP5 PUSH1 0x8 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1121 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x113F PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1195 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118C SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x11E1 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11FF PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1255 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124C SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1299 SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1327 PUSH1 0x0 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 PUSH2 0x137E DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1370 PUSH5 0xE8D4A51000 PUSH2 0x1362 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x141F JUMPI PUSH2 0x13DB DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x149B JUMPI PUSH2 0x147B CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x310A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1492 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14CD PUSH5 0xE8D4A51000 PUSH2 0x14BF DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x151D SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x156E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1565 SWAP1 PUSH2 0x3ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1584 JUMPI PUSH2 0x1583 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x162F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1626 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1638 DUP5 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1682 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1674 PUSH5 0xE8D4A51000 PUSH2 0x1666 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1723 JUMPI PUSH2 0x16DF DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x173A DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1774 PUSH5 0xE8D4A51000 PUSH2 0x1766 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17CB CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3084 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AA SWAP1 PUSH2 0x4070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18C9 JUMPI PUSH2 0x18C8 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193D SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1969 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198D SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x19DC PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3193 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A39 SWAP2 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8B SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC6 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B16 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP3 EQ PUSH2 0x1B57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4E SWAP1 PUSH2 0x4030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BAF PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BCD PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1A SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE6 JUMPI PUSH2 0x1CE5 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1D07 JUMPI POP PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D66 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB6 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1DD0 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE0 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x23E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E23 PUSH1 0x8 SLOAD PUSH2 0x1E15 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1E07 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E65 PUSH2 0x1E52 DUP5 PUSH2 0x1E44 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1F4B CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3084 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F96 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1FBF PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FDD PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2033 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x202A SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2085 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20A3 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F0 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2186 JUMPI PUSH2 0x2175 DUP2 PUSH2 0x1CD0 JUMP JUMPDEST DUP1 PUSH2 0x217F SWAP1 PUSH2 0x4326 JUMP JUMPDEST SWAP1 POP PUSH2 0x2164 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2192 PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21B0 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FD SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x2157 JUMP JUMPDEST JUMPDEST PUSH2 0x2261 DUP3 PUSH2 0x2253 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2230 JUMPI PUSH2 0x222F PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x229E PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22BC PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2309 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x231C PUSH1 0x0 PUSH2 0x32F1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240B PUSH1 0x4 SLOAD PUSH2 0x23FD DUP6 DUP6 PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x244C PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x246A PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B7 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24D5 JUMPI PUSH2 0x24D4 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x2557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x254E SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2600 JUMPI POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x263F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2636 SWAP1 PUSH2 0x3FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x26C4 PUSH1 0x0 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 PUSH2 0x271B DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x270D PUSH5 0xE8D4A51000 PUSH2 0x26FF DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x27BC JUMPI PUSH2 0x2778 DUP2 PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x2838 JUMPI PUSH2 0x2818 CALLER ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x310A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x282F DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x286A PUSH5 0xE8D4A51000 PUSH2 0x285C DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x291B SWAP1 PUSH2 0x3F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295E SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x297D JUMPI PUSH2 0x297C PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x29EA DUP5 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2AE4 JUMPI PUSH1 0x0 PUSH2 0x2A41 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2A33 PUSH5 0xE8D4A51000 PUSH2 0x2A25 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2AE2 JUMPI PUSH2 0x2A9E DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2B35 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x310A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2B4C DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B86 PUSH5 0xE8D4A51000 PUSH2 0x2B78 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2BD5 SWAP2 SWAP1 PUSH2 0x4090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2BEB PUSH2 0x2F0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2C09 PUSH2 0x23B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C56 SWAP1 PUSH2 0x3F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2CCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC6 SWAP1 PUSH2 0x3E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CD8 DUP2 PUSH2 0x32F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2CF2 JUMPI PUSH2 0x2CF1 PUSH2 0x43CD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DBE SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E0E SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2E24 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2EBF JUMPI PUSH1 0x0 PUSH2 0x2E39 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x23E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E7C PUSH1 0x8 SLOAD PUSH2 0x2E6E DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2E60 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2EBA PUSH2 0x2EAB DUP5 PUSH2 0x2E9D PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x3026 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2F03 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2EF5 PUSH5 0xE8D4A51000 PUSH2 0x2EE7 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2F17 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2F2A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2F38 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2F47 SWAP2 SWAP1 PUSH2 0x415C JUMP JUMPDEST EQ PUSH2 0x2F87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F7E SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x3418 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x3035 SWAP2 SWAP1 PUSH2 0x4106 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x307A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3071 SWAP1 PUSH2 0x3EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3105 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x30A3 SWAP3 SWAP2 SWAP1 PUSH2 0x3DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x347C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x318D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x312B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x347C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x322C JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31DA SWAP3 SWAP2 SWAP1 PUSH2 0x3D41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3206 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x322A SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x326B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3262 SWAP1 PUSH2 0x4050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32EC DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x328A SWAP3 SWAP2 SWAP1 PUSH2 0x3DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x347C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x33FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33F3 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x340B SWAP2 SWAP1 PUSH2 0x415C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3457 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x346F SWAP2 SWAP1 PUSH2 0x41E7 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3543 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x353E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x34FE SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x353D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3534 SWAP1 PUSH2 0x4010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3552 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x355B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x35A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3597 SWAP1 PUSH2 0x3F10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A9 DUP6 PUSH2 0x366F JUMP JUMPDEST PUSH2 0x35E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35DF SWAP1 PUSH2 0x3FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3611 SWAP2 SWAP1 PUSH2 0x3D0F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x364E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3663 DUP3 DUP3 DUP7 PUSH2 0x3692 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x36A2 JUMPI DUP3 SWAP1 POP PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x36B5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36E9 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3708 DUP2 PUSH2 0x4760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x371D DUP2 PUSH2 0x4777 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3732 DUP2 PUSH2 0x4777 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3747 DUP2 PUSH2 0x478E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x375C DUP2 PUSH2 0x478E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3771 DUP2 PUSH2 0x47A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3786 DUP2 PUSH2 0x47BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x379B DUP2 PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x37B0 DUP2 PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37CC JUMPI PUSH2 0x37CB PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37DA DUP5 DUP3 DUP6 ADD PUSH2 0x36F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37F9 JUMPI PUSH2 0x37F8 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3807 DUP5 DUP3 DUP6 ADD PUSH2 0x3723 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3826 JUMPI PUSH2 0x3825 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3834 DUP5 DUP3 DUP6 ADD PUSH2 0x374D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3854 JUMPI PUSH2 0x3853 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3862 DUP6 DUP3 DUP7 ADD PUSH2 0x3762 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3873 DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3893 JUMPI PUSH2 0x3892 PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38A1 DUP5 DUP3 DUP6 ADD PUSH2 0x3777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38C0 JUMPI PUSH2 0x38BF PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38CE DUP5 DUP3 DUP6 ADD PUSH2 0x378C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38ED JUMPI PUSH2 0x38EC PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38FB DUP5 DUP3 DUP6 ADD PUSH2 0x37A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x391B JUMPI PUSH2 0x391A PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3929 DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x393A DUP6 DUP3 DUP7 ADD PUSH2 0x36F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x395D JUMPI PUSH2 0x395C PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x396B DUP7 DUP3 DUP8 ADD PUSH2 0x378C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x397C DUP7 DUP3 DUP8 ADD PUSH2 0x3738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x398D DUP7 DUP3 DUP8 ADD PUSH2 0x370E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39AE JUMPI PUSH2 0x39AD PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39BC DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39CD DUP6 DUP3 DUP7 ADD PUSH2 0x378C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39F0 JUMPI PUSH2 0x39EF PUSH2 0x43FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39FE DUP7 DUP3 DUP8 ADD PUSH2 0x378C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A0F DUP7 DUP3 DUP8 ADD PUSH2 0x378C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3A20 DUP7 DUP3 DUP8 ADD PUSH2 0x370E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3A33 DUP2 PUSH2 0x421B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A44 DUP3 PUSH2 0x40D4 JUMP JUMPDEST PUSH2 0x3A4E DUP2 DUP6 PUSH2 0x40EA JUMP JUMPDEST SWAP4 POP PUSH2 0x3A5E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x42F3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A73 DUP2 PUSH2 0x4299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3A82 DUP2 PUSH2 0x42AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3A91 DUP2 PUSH2 0x42BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA2 DUP3 PUSH2 0x40DF JUMP JUMPDEST PUSH2 0x3AAC DUP2 DUP6 PUSH2 0x40F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x3ABC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x42F3 JUMP JUMPDEST PUSH2 0x3AC5 DUP2 PUSH2 0x4401 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ADD PUSH1 0x26 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AE8 DUP3 PUSH2 0x4412 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B00 PUSH1 0x13 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B0B DUP3 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B23 PUSH1 0x1B DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B2E DUP3 PUSH2 0x448A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B46 PUSH1 0x1B DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B51 DUP3 PUSH2 0x44B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B69 PUSH1 0x26 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B74 DUP3 PUSH2 0x44DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8C PUSH1 0xE DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B97 DUP3 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BAF PUSH1 0x18 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BBA DUP3 PUSH2 0x4554 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD2 PUSH1 0x21 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BDD DUP3 PUSH2 0x457D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BF5 PUSH1 0x20 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C00 DUP3 PUSH2 0x45CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C18 PUSH1 0x14 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C23 DUP3 PUSH2 0x45F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3B PUSH1 0x1D DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C46 DUP3 PUSH2 0x461E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5E PUSH1 0x12 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C69 DUP3 PUSH2 0x4647 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C81 PUSH1 0x2A DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C8C DUP3 PUSH2 0x4670 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA4 PUSH1 0xC DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CAF DUP3 PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CC7 PUSH1 0x36 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CD2 DUP3 PUSH2 0x46E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CEA PUSH1 0x14 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CF5 DUP3 PUSH2 0x4737 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D09 DUP2 PUSH2 0x428F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D1B DUP3 DUP5 PUSH2 0x3A39 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D56 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3D63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3D8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3D99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DB6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x3DC3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3DFA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3A6A JUMP JUMPDEST PUSH2 0x3E07 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D00 JUMP JUMPDEST PUSH2 0x3E14 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3D00 JUMP JUMPDEST PUSH2 0x3E21 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0x3E4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E88 DUP2 DUP5 PUSH2 0x3A97 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA9 DUP2 PUSH2 0x3AD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EC9 DUP2 PUSH2 0x3AF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EE9 DUP2 PUSH2 0x3B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F09 DUP2 PUSH2 0x3B39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F29 DUP2 PUSH2 0x3B5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F49 DUP2 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F69 DUP2 PUSH2 0x3BA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F89 DUP2 PUSH2 0x3BC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA9 DUP2 PUSH2 0x3BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FC9 DUP2 PUSH2 0x3C0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FE9 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4009 DUP2 PUSH2 0x3C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4029 DUP2 PUSH2 0x3C74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4049 DUP2 PUSH2 0x3C97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4069 DUP2 PUSH2 0x3CBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4089 DUP2 PUSH2 0x3CDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40C0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D00 JUMP JUMPDEST PUSH2 0x40CD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4111 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x411C DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4151 JUMPI PUSH2 0x4150 PUSH2 0x436F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4167 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x4172 DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4182 JUMPI PUSH2 0x4181 PUSH2 0x439E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4198 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x41A3 DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x41DC JUMPI PUSH2 0x41DB PUSH2 0x436F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F2 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH2 0x41FD DUP4 PUSH2 0x428F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4210 JUMPI PUSH2 0x420F PUSH2 0x436F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4226 DUP3 PUSH2 0x426F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4244 DUP3 PUSH2 0x421B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4256 DUP3 PUSH2 0x421B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4268 DUP3 PUSH2 0x421B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A4 DUP3 PUSH2 0x42CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B6 DUP3 PUSH2 0x42CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C8 DUP3 PUSH2 0x42CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42DA DUP3 PUSH2 0x42E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42EC DUP3 PUSH2 0x426F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4311 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42F6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4320 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4331 DUP3 PUSH2 0x428F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4364 JUMPI PUSH2 0x4363 PUSH2 0x436F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742066616D696C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4769 DUP2 PUSH2 0x421B JUMP JUMPDEST DUP2 EQ PUSH2 0x4774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4780 DUP2 PUSH2 0x422D JUMP JUMPDEST DUP2 EQ PUSH2 0x478B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4797 DUP2 PUSH2 0x4239 JUMP JUMPDEST DUP2 EQ PUSH2 0x47A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x47AE DUP2 PUSH2 0x424B JUMP JUMPDEST DUP2 EQ PUSH2 0x47B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x47C5 DUP2 PUSH2 0x425D JUMP JUMPDEST DUP2 EQ PUSH2 0x47D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x47DC DUP2 PUSH2 0x428F JUMP JUMPDEST DUP2 EQ PUSH2 0x47E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0x2C 0xF9 RETURNDATACOPY 0x4C 0xCC 0x25 PUSH10 0x7DA1448128FA4DB6CF4B JUMP DIV BLOCKHASH 0xB8 SWAP8 0xCF DUP2 PUSH2 0xF3E6 PUSH11 0x909EC164736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "22111:14339:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27360:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25201:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35144:747;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23943:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;24184:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25953:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27624:560;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24347:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28662:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36338:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33264:846;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32424:787;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28887:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24276:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25615:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30769:690;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35970:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25335:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23657:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27229:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23533:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;30513:180;;;:::i;:::-;;28281:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20756:103;;;:::i;:::-;;23880:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24310:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23740:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25489:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20105:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29454:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24025:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;25829:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23593:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34118:974;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24391:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31529:843;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21014:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29663:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27360:95;27405:7;27432:8;:15;;;;27425:22;;27360:95;:::o;25201:126::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25303:16:::1;25285:15;;:34;;;;;;;;;;;;;;;;;;25201:126:::0;:::o;35144:747::-;35201:21;35225:8;35234:1;35225:11;;;;;;;;:::i;:::-;;;;;;;;;;;;35201:35;;35247:21;35271:8;:11;35280:1;35271:11;;;;;;;;;;;:23;35283:10;35271:23;;;;;;;;;;;;;;;35247:47;;35328:7;35313:4;:11;;;:22;;35305:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;35369:13;35380:1;35369:10;:13::i;:::-;35393:15;35411:69;35464:4;:15;;;35411:48;35454:4;35411:38;35427:4;:21;;;35411:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;35393:87;;35504:1;35494:7;:11;35491:107;;;35549:37;35578:7;35549:12;:24;35562:10;35549:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;35522:12;:24;35535:10;35522:24;;;;;;;;;;;;;;;:64;;;;35491:107;35621:1;35611:7;:11;35608:151;;;35653:24;35669:7;35653:4;:11;;;:15;;:24;;;;:::i;:::-;35639:4;:11;;:38;;;;35692:55;35726:10;35739:7;35692:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;35608:151;35787:48;35830:4;35787:38;35803:4;:21;;;35787:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;35769:4;:15;;:66;;;;35872:1;35860:10;35851:32;;;35875:7;35851:32;;;;;;:::i;:::-;;;;;;;;35190:701;;;35144:747;:::o;23943:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24184:34::-;;;;:::o;25953:1268::-;26024:21;26048:8;26057:4;26048:14;;;;;;;;:::i;:::-;;;;;;;;;;;;26024:38;;26073:21;26097:8;:14;26106:4;26097:14;;;;;;;;;;;:26;26112:10;26097:26;;;;;;;;;;;;;;;26073:50;;26134:24;26161:4;:21;;;26134:48;;26193:16;26212:4;:12;;;;;;;;;;;;:22;;;26243:4;26212:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26193:56;;26279:4;:20;;;26264:12;:35;:52;;;;;26315:1;26303:8;:13;;26264:52;26260:354;;;26333:18;26354:49;26368:4;:20;;;26390:12;26354:13;:49::i;:::-;26333:70;;26418:19;26440:71;26495:15;;26440:50;26474:4;:15;;;26440:29;26455:13;;26440:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;26418:93;;26545:57;26566:35;26592:8;26566:21;26582:4;26566:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;26545:16;:20;;:57;;;;:::i;:::-;26526:76;;26318:296;;26260:354;26624:15;26642:64;26690:4;:15;;;26642:43;26680:4;26642:33;26658:16;26642:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;26624:82;;26717:20;26740:8;26749:5;26740:15;;;;;;;;:::i;:::-;;;;;;;;;;;;26717:38;;26766:13;26782:37;26794:12;:24;26807:10;26794:24;;;;;;;;;;;;;;;;26782:7;:11;;:37;;;;:::i;:::-;26766:53;;26841:3;:9;;;26833:5;:17;26830:188;;;26877:1;26869:4;:9;26866:63;;;26898:15;26911:1;26898:12;:15::i;:::-;26866:63;26954:1;26946:4;:9;26943:64;;26975:16;26984:4;26989:1;26975:8;:16::i;:::-;26943:64;26830:188;27048:12;:24;27061:10;27048:24;;;;;;;;;;;;;;;;27036:3;:9;;;:36;27028:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27134:39;27163:3;:9;;;27134:12;:24;27147:10;27134:24;;;;;;;;;;;;;;;;:28;;:39;;;;:::i;:::-;27107:12;:24;27120:10;27107:24;;;;;;;;;;;;;;;:66;;;;27184:3;:7;;;;;;;;;;;;:17;;;27202:10;27184:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26013:1208;;;;;;;25953:1268;;:::o;27624:560::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27727:11:::1;27723:61;;;27755:17;:15;:17::i;:::-;27723:61;27794:23;27835:10;;27820:12;:25;:53;;27863:10;;27820:53;;;27848:12;27820:53;27794:79;;27902:32;27922:11;27902:15;;:19;;:32;;;;:::i;:::-;27884:15;:50;;;;27945:8;27973:192;;;;;;;;28010:8;27973:192;;;;;;28049:11;27973:192;;;;28096:15;27973:192;;;;28148:1;27973:192;;::::0;27945:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27712:472;27624:560:::0;;;:::o;24347:35::-;;;;;;;;;;;;;:::o;28662:102::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28747:9:::1;28736:8;;:20;;;;;;;;;;;;;;;;;;28662:102:::0;:::o;36338:109::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;36430:9:::1;36414:13;:25;;;;36338:109:::0;:::o;33264:846::-;33339:1;33329:7;:11;33321:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;33370:21;33394:8;33403:1;33394:11;;;;;;;;:::i;:::-;;;;;;;;;;;;33370:35;;33416:21;33440:8;:11;33449:1;33440:11;;;;;;;;;;;:32;33460:10;33440:32;;;;;;;;;;;;;;;33416:56;;33493:13;33504:1;33493:10;:13::i;:::-;33535:1;33521:4;:11;;;:15;33517:282;;;33553:15;33571:69;33624:4;:15;;;33571:48;33614:4;33571:38;33587:4;:21;;;33571:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33553:87;;33668:1;33658:7;:11;33655:133;;;33726:46;33764:7;33726:12;:33;33747:10;33726:33;;;;;;;;;;;;;;;;:37;;:46;;;;:::i;:::-;33690:12;:33;33711:10;33690:33;;;;;;;;;;;;;;;:82;;;;33655:133;33538:261;33517:282;33822:1;33812:7;:11;33809:170;;;33840:74;33878:10;33899:4;33906:7;33840:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;33943:24;33959:7;33943:4;:11;;;:15;;:24;;;;:::i;:::-;33929:4;:11;;:38;;;;33809:170;34007:48;34050:4;34007:38;34023:4;:21;;;34007:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;33989:4;:15;;:66;;;;34091:1;34079:10;34071:31;;;34094:7;34071:31;;;;;;:::i;:::-;;;;;;;;33310:800;;33264:846;:::o;32424:787::-;32510:1;32502:4;:9;;32493:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;32556:21;32580:8;32589:4;32580:14;;;;;;;;:::i;:::-;;;;;;;;;;;;32556:38;;32605:21;32629:8;:14;32638:4;32629:14;;;;;;;;;;;:26;32644:10;32629:26;;;;;;;;;;;;;;;32605:50;;32689:7;32674:4;:11;;;:22;;32666:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;32730:16;32741:4;32730:10;:16::i;:::-;32757:15;32775:69;32828:4;:15;;;32775:48;32818:4;32775:38;32791:4;:21;;;32775:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;32757:87;;32868:1;32858:7;:11;32855:106;;;32912:37;32941:7;32912:12;:24;32925:10;32912:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;32885:12;:24;32898:10;32885:24;;;;;;;;;;;;;;;:64;;;;32855:106;32985:24;33001:7;32985:4;:11;;;:15;;:24;;;;:::i;:::-;32971:4;:11;;:38;;;;33038:48;33081:4;33038:38;33054:4;:21;;;33038:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;33020:4;:15;;:66;;;;33097:55;33131:10;33144:7;33097:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;33189:4;33177:10;33168:35;;;33195:7;33168:35;;;;;;:::i;:::-;;;;;;;;32480:731;;;32424:787;;:::o;28887:491::-;28973:1;28944:31;;28952:8;;;;;;;;;;;28944:31;;;;28936:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;29011:21;29035:8;29044:4;29035:14;;;;;;;;:::i;:::-;;;;;;;;;;;;29011:38;;29060:14;29077:4;:12;;;;;;;;;;;;29060:29;;29100:11;29114:7;:17;;;29140:4;29114:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29100:46;;29157:43;29185:8;;;;;;;;;;;29196:3;29157:7;:19;;;;:43;;;;;:::i;:::-;29211:17;29231:8;;;;;;;;;;;:16;;;29248:7;29231:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29211:45;;29282:10;:20;;;29311:4;29282:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29275:3;:42;29267:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;29360:10;29345:4;:12;;;:25;;;;;;;;;;;;;;;;;;28925:453;;;;28887:491;:::o;24276:25::-;;;;:::o;25615:206::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25689:8:::1;25717:85;;;;;;;;25750:4;25717:85;;;;;;25780:6;25717:85;;::::0;25689:124:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25615:206:::0;;:::o;30769:690::-;30821:21;30845:8;30854:4;30845:14;;;;;;;;:::i;:::-;;;;;;;;;;;;30821:38;;30890:4;:20;;;30874:12;:36;30870:75;;30927:7;;;30870:75;30955:16;30974:4;:12;;;;;;;;;;;;:22;;;31005:4;30974:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30955:56;;31038:1;31026:8;:13;31022:102;;31079:12;31056:4;:20;;:35;;;;31106:7;;;;31022:102;31134:18;31155:49;31169:4;:20;;;31191:12;31155:13;:49::i;:::-;31134:70;;31215:19;31237:71;31292:15;;31237:50;31271:4;:15;;;31237:29;31252:13;;31237:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;31215:93;;31343:62;31369:35;31395:8;31369:21;31385:4;31369:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;31343:4;:21;;;:25;;:62;;;;:::i;:::-;31319:4;:21;;:86;;;;31439:12;31416:4;:20;;:35;;;;30810:649;;;;30769:690;;:::o;35970:356::-;36029:21;36053:8;36062:4;36053:14;;;;;;;;:::i;:::-;;;;;;;;;;;;36029:38;;36078:21;36102:8;:14;36111:4;36102:14;;;;;;;;;;;:26;36117:10;36102:26;;;;;;;;;;;;;;;36078:50;;36139:59;36173:10;36186:4;:11;;;36139:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;36244:4;36232:10;36214:48;;;36250:4;:11;;;36214:48;;;;;;:::i;:::-;;;;;;;;36287:1;36273:4;:11;;:15;;;;36317:1;36299:4;:15;;:19;;;;36018:308;;35970:356;:::o;25335:146::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25452:21:::1;25429:20;;:44;;;;;;;;;;;;;;;;;;25335:146:::0;:::o;23657:28::-;;;;:::o;27229:123::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27328:16:::1;27309;:35;;;;27229:123:::0;:::o;23533:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30513:180::-;30558:14;30575:8;:15;;;;30558:32;;30606:11;30601:85;30629:6;30623:3;:12;30601:85;;;30659:15;30670:3;30659:10;:15::i;:::-;30637:5;;;;:::i;:::-;;;30601:85;;;;30547:146;30513:180::o;28281:305::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28380:11:::1;28376:61;;;28408:17;:15;:17::i;:::-;28376:61;28465:63;28516:11;28465:46;28485:8;28494:4;28485:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;28465:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;28447:15;:81;;;;28567:11;28539:8;28548:4;28539:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;28281:305:::0;;;:::o;20756:103::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20821:30:::1;20848:1;20821:18;:30::i;:::-;20756:103::o:0;23880:29::-;;;;;;;;;;;;;:::o;24310:30::-;;;;;;;;;;;;;:::o;23740:35::-;;;;:::o;25489:118::-;25551:7;25578:12;:21;25591:7;25578:21;;;;;;;;;;;;;;;;25571:28;;25489:118;;;:::o;20105:87::-;20151:7;20178:6;;;;;;;;;;;20171:13;;20105:87;:::o;29454:144::-;29526:7;29554:36;29573:16;;29554:14;29562:5;29554:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;29547:43;;29454:144;;;;:::o;24025:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25829:116::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25931:6:::1;25907:8;25916:5;25907:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;:30;;;;25829:116:::0;;:::o;23593:17::-;;;;;;;;;;;;;:::o;34118:974::-;34218:1;34208:7;:11;34200:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;34271:15;;;;;;;;;;;34257:29;;:10;:29;;;:67;;;;34304:20;;;;;;;;;;;34290:34;;:10;:34;;;34257:67;34249:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;34360:21;34384:8;34393:1;34384:11;;;;;;;;:::i;:::-;;;;;;;;;;;;34360:35;;34406:21;34430:8;:11;34439:1;34430:11;;;;;;;;;;;:30;34450:8;34430:30;;;;;;;;;;;;;;;34406:54;;34481:13;34492:1;34481:10;:13::i;:::-;34523:1;34509:4;:11;;;:15;34505:278;;;34541:15;34559:69;34612:4;:15;;;34559:48;34602:4;34559:38;34575:4;:21;;;34559:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;34541:87;;34656:1;34646:7;:11;34643:129;;;34712:44;34748:7;34712:12;:31;34733:8;34712:31;;;;;;;;;;;;;;;;:35;;:44;;;;:::i;:::-;34678:12;:31;34699:8;34678:31;;;;;;;;;;;;;;;:78;;;;34643:129;34526:257;34505:278;34806:1;34796:7;:11;34793:170;;;34824:74;34862:10;34883:4;34890:7;34824:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;34927:24;34943:7;34927:4;:11;;;:15;;:24;;;;:::i;:::-;34913:4;:11;;:38;;;;34793:170;34991:48;35034:4;34991:38;35007:4;:21;;;34991:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;34973:4;:15;;:66;;;;35073:1;35063:8;35055:29;;;35076:7;35055:29;;;;;;:::i;:::-;;;;;;;;34189:903;;34118:974;;:::o;24391:47::-;;;;;;;;;;;;;;;;;:::o;31529:843::-;31612:1;31604:4;:9;;31595:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;31671:1;31661:7;:11;31653:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;31704:21;31728:8;31737:4;31728:14;;;;;;;;:::i;:::-;;;;;;;;;;;;31704:38;;31753:21;31777:8;:14;31786:4;31777:14;;;;;;;;;;;:26;31792:10;31777:26;;;;;;;;;;;;;;;31753:50;;31814:16;31825:4;31814:10;:16::i;:::-;31859:1;31845:4;:11;;;:15;31841:263;;;31877:15;31895:69;31948:4;:15;;;31895:48;31938:4;31895:38;31911:4;:21;;;31895:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;31877:87;;31992:1;31982:7;:11;31979:114;;;32040:37;32069:7;32040:12;:24;32053:10;32040:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;32013:12;:24;32026:10;32013:24;;;;;;;;;;;;;;;:64;;;;31979:114;31862:242;31841:263;32114:74;32152:10;32173:4;32180:7;32114:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;32213:24;32229:7;32213:4;:11;;;:15;;:24;;;;:::i;:::-;32199:4;:11;;:38;;;;32266:48;32309:4;32266:38;32282:4;:21;;;32266:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;32248:4;:15;;:66;;;;32350:4;32338:10;32330:34;;;32356:7;32330:34;;;;;;:::i;:::-;;;;;;;;31584:788;;31529:843;;:::o;21014:201::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21123:1:::1;21103:22;;:8;:22;;;;21095:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;21179:28;21198:8;21179:18;:28::i;:::-;21014:201:::0;:::o;29663:767::-;29737:7;29756:21;29780:8;29789:4;29780:14;;;;;;;;:::i;:::-;;;;;;;;;;;;29756:38;;29805:21;29829:8;:14;29838:4;29829:14;;;;;;;;;;;:21;29844:5;29829:21;;;;;;;;;;;;;;;29805:45;;29861:24;29888:4;:21;;;29861:48;;29920:16;29939:4;:12;;;;;;;;;;;;:22;;;29970:4;29939:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29920:56;;30006:4;:20;;;29991:12;:35;:52;;;;;30042:1;30030:8;:13;;29991:52;29987:354;;;30060:18;30081:49;30095:4;:20;;;30117:12;30081:13;:49::i;:::-;30060:70;;30145:19;30167:71;30222:15;;30167:50;30201:4;:15;;;30167:29;30182:13;;30167:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;30145:93;;30272:57;30293:35;30319:8;30293:21;30309:4;30293:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;30272:16;:20;;:57;;;;:::i;:::-;30253:76;;30045:296;;29987:354;30358:64;30406:4;:15;;;30358:43;30396:4;30358:33;30374:16;30358:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;30351:71;;;;;;29663:767;;;;:::o;19479:98::-;19532:7;19559:10;19552:17;;19479:98;:::o;1757:471::-;1815:7;2065:1;2060;:6;2056:47;;;2090:1;2083:8;;;;2056:47;2115:9;2131:1;2127;:5;;;;:::i;:::-;2115:17;;2160:1;2155;2151;:5;;;;:::i;:::-;:10;2143:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2219:1;2212:8;;;1757:471;;;;;:::o;2696:132::-;2754:7;2781:39;2785:1;2788;2781:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2774:46;;2696:132;;;;:::o;841:136::-;899:7;926:43;930:1;933;926:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;919:50;;841:136;;;;:::o;385:181::-;443:7;463:9;479:1;475;:5;;;;:::i;:::-;463:17;;504:1;499;:6;;491:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;557:1;550:8;;;385:181;;;;:::o;16150:211::-;16267:86;16287:5;16317:23;;;16342:2;16346:5;16294:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16267:19;:86::i;:::-;16150:211;;;:::o;16369:248::-;16513:96;16533:5;16563:27;;;16592:4;16598:2;16602:5;16540:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16513:19;:96::i;:::-;16369:248;;;;:::o;16886:616::-;17259:1;17250:5;:10;17249:62;;;;17309:1;17266:5;:15;;;17290:4;17297:7;17266:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;17249:62;17227:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;17404:90;17424:5;17454:22;;;17478:7;17487:5;17431:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17404:19;:90::i;:::-;16886:616;;;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;3358:345::-;3444:7;3543:1;3539;:5;3546:12;3531:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3570:9;3586:1;3582;:5;;;;:::i;:::-;3570:17;;3694:1;3687:8;;;3358:345;;;;;:::o;1314:192::-;1400:7;1433:1;1428;:6;;1436:12;1420:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1460:9;1476:1;1472;:5;;;;:::i;:::-;1460:17;;1497:1;1490:8;;;1314:192;;;;;:::o;18723:716::-;19147:23;19173:69;19201:4;19173:69;;;;;;;;;;;;;;;;;19181:5;19173:27;;;;:69;;;;;:::i;:::-;19147:95;;19277:1;19257:10;:17;:21;19253:179;;;19354:10;19343:30;;;;;;;;;;;;:::i;:::-;19335:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;19253:179;18793:646;18723:716;;:::o;11566:229::-;11703:12;11735:52;11757:6;11765:4;11771:1;11774:12;11735:21;:52::i;:::-;11728:59;;11566:229;;;;;:::o;12686:510::-;12856:12;12914:5;12889:21;:30;;12881:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12981:18;12992:6;12981:10;:18::i;:::-;12973:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;13047:12;13061:23;13088:6;:11;;13107:5;13114:4;13088:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13046:73;;;;13137:51;13154:7;13163:10;13175:12;13137:16;:51::i;:::-;13130:58;;;;12686:510;;;;;;:::o;8821:326::-;8881:4;9138:1;9116:7;:19;;;:23;9109:30;;8821:326;;;:::o;15372:712::-;15522:12;15551:7;15547:530;;;15582:10;15575:17;;;;15547:530;15716:1;15696:10;:17;:21;15692:374;;;15894:10;15888:17;15955:15;15942:10;15938:2;15934:19;15927:44;15692:374;16037:12;16030:20;;;;;;;;;;;:::i;:::-;;;;;;;;15372:712;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:167::-;494:5;532:6;519:20;510:29;;548:47;589:5;548:47;:::i;:::-;434:167;;;;:::o;607:171::-;678:5;709:6;703:13;694:22;;725:47;766:5;725:47;:::i;:::-;607:171;;;;:::o;784:169::-;845:5;883:6;870:20;861:29;;899:48;941:5;899:48;:::i;:::-;784:169;;;;:::o;959:181::-;1026:5;1064:6;1051:20;1042:29;;1080:54;1128:5;1080:54;:::i;:::-;959:181;;;;:::o;1146:139::-;1192:5;1230:6;1217:20;1208:29;;1246:33;1273:5;1246:33;:::i;:::-;1146:139;;;;:::o;1291:143::-;1348:5;1379:6;1373:13;1364:22;;1395:33;1422:5;1395:33;:::i;:::-;1291:143;;;;:::o;1440:329::-;1499:6;1548:2;1536:9;1527:7;1523:23;1519:32;1516:119;;;1554:79;;:::i;:::-;1516:119;1674:1;1699:53;1744:7;1735:6;1724:9;1720:22;1699:53;:::i;:::-;1689:63;;1645:117;1440:329;;;;:::o;1775:345::-;1842:6;1891:2;1879:9;1870:7;1866:23;1862:32;1859:119;;;1897:79;;:::i;:::-;1859:119;2017:1;2042:61;2095:7;2086:6;2075:9;2071:22;2042:61;:::i;:::-;2032:71;;1988:125;1775:345;;;;:::o;2126:379::-;2210:6;2259:2;2247:9;2238:7;2234:23;2230:32;2227:119;;;2265:79;;:::i;:::-;2227:119;2385:1;2410:78;2480:7;2471:6;2460:9;2456:22;2410:78;:::i;:::-;2400:88;;2356:142;2126:379;;;;:::o;2511:504::-;2594:6;2602;2651:2;2639:9;2630:7;2626:23;2622:32;2619:119;;;2657:79;;:::i;:::-;2619:119;2777:1;2802:68;2862:7;2853:6;2842:9;2838:22;2802:68;:::i;:::-;2792:78;;2748:132;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2511:504;;;;;:::o;3021:371::-;3101:6;3150:2;3138:9;3129:7;3125:23;3121:32;3118:119;;;3156:79;;:::i;:::-;3118:119;3276:1;3301:74;3367:7;3358:6;3347:9;3343:22;3301:74;:::i;:::-;3291:84;;3247:138;3021:371;;;;:::o;3398:329::-;3457:6;3506:2;3494:9;3485:7;3481:23;3477:32;3474:119;;;3512:79;;:::i;:::-;3474:119;3632:1;3657:53;3702:7;3693:6;3682:9;3678:22;3657:53;:::i;:::-;3647:63;;3603:117;3398:329;;;;:::o;3733:351::-;3803:6;3852:2;3840:9;3831:7;3827:23;3823:32;3820:119;;;3858:79;;:::i;:::-;3820:119;3978:1;4003:64;4059:7;4050:6;4039:9;4035:22;4003:64;:::i;:::-;3993:74;;3949:128;3733:351;;;;:::o;4090:474::-;4158:6;4166;4215:2;4203:9;4194:7;4190:23;4186:32;4183:119;;;4221:79;;:::i;:::-;4183:119;4341:1;4366:53;4411:7;4402:6;4391:9;4387:22;4366:53;:::i;:::-;4356:63;;4312:117;4468:2;4494:53;4539:7;4530:6;4519:9;4515:22;4494:53;:::i;:::-;4484:63;;4439:118;4090:474;;;;;:::o;4570:641::-;4658:6;4666;4674;4723:2;4711:9;4702:7;4698:23;4694:32;4691:119;;;4729:79;;:::i;:::-;4691:119;4849:1;4874:53;4919:7;4910:6;4899:9;4895:22;4874:53;:::i;:::-;4864:63;;4820:117;4976:2;5002:67;5061:7;5052:6;5041:9;5037:22;5002:67;:::i;:::-;4992:77;;4947:132;5118:2;5144:50;5186:7;5177:6;5166:9;5162:22;5144:50;:::i;:::-;5134:60;;5089:115;4570:641;;;;;:::o;5217:474::-;5285:6;5293;5342:2;5330:9;5321:7;5317:23;5313:32;5310:119;;;5348:79;;:::i;:::-;5310:119;5468:1;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;:::i;:::-;5483:63;;5439:117;5595:2;5621:53;5666:7;5657:6;5646:9;5642:22;5621:53;:::i;:::-;5611:63;;5566:118;5217:474;;;;;:::o;5697:613::-;5771:6;5779;5787;5836:2;5824:9;5815:7;5811:23;5807:32;5804:119;;;5842:79;;:::i;:::-;5804:119;5962:1;5987:53;6032:7;6023:6;6012:9;6008:22;5987:53;:::i;:::-;5977:63;;5933:117;6089:2;6115:53;6160:7;6151:6;6140:9;6136:22;6115:53;:::i;:::-;6105:63;;6060:118;6217:2;6243:50;6285:7;6276:6;6265:9;6261:22;6243:50;:::i;:::-;6233:60;;6188:115;5697:613;;;;;:::o;6316:118::-;6403:24;6421:5;6403:24;:::i;:::-;6398:3;6391:37;6316:118;;:::o;6440:373::-;6544:3;6572:38;6604:5;6572:38;:::i;:::-;6626:88;6707:6;6702:3;6626:88;:::i;:::-;6619:95;;6723:52;6768:6;6763:3;6756:4;6749:5;6745:16;6723:52;:::i;:::-;6800:6;6795:3;6791:16;6784:23;;6548:265;6440:373;;;;:::o;6819:159::-;6920:51;6965:5;6920:51;:::i;:::-;6915:3;6908:64;6819:159;;:::o;6984:161::-;7086:52;7132:5;7086:52;:::i;:::-;7081:3;7074:65;6984:161;;:::o;7151:173::-;7259:58;7311:5;7259:58;:::i;:::-;7254:3;7247:71;7151:173;;:::o;7330:364::-;7418:3;7446:39;7479:5;7446:39;:::i;:::-;7501:71;7565:6;7560:3;7501:71;:::i;:::-;7494:78;;7581:52;7626:6;7621:3;7614:4;7607:5;7603:16;7581:52;:::i;:::-;7658:29;7680:6;7658:29;:::i;:::-;7653:3;7649:39;7642:46;;7422:272;7330:364;;;;:::o;7700:366::-;7842:3;7863:67;7927:2;7922:3;7863:67;:::i;:::-;7856:74;;7939:93;8028:3;7939:93;:::i;:::-;8057:2;8052:3;8048:12;8041:19;;7700:366;;;:::o;8072:::-;8214:3;8235:67;8299:2;8294:3;8235:67;:::i;:::-;8228:74;;8311:93;8400:3;8311:93;:::i;:::-;8429:2;8424:3;8420:12;8413:19;;8072:366;;;:::o;8444:::-;8586:3;8607:67;8671:2;8666:3;8607:67;:::i;:::-;8600:74;;8683:93;8772:3;8683:93;:::i;:::-;8801:2;8796:3;8792:12;8785:19;;8444:366;;;:::o;8816:::-;8958:3;8979:67;9043:2;9038:3;8979:67;:::i;:::-;8972:74;;9055:93;9144:3;9055:93;:::i;:::-;9173:2;9168:3;9164:12;9157:19;;8816:366;;;:::o;9188:::-;9330:3;9351:67;9415:2;9410:3;9351:67;:::i;:::-;9344:74;;9427:93;9516:3;9427:93;:::i;:::-;9545:2;9540:3;9536:12;9529:19;;9188:366;;;:::o;9560:::-;9702:3;9723:67;9787:2;9782:3;9723:67;:::i;:::-;9716:74;;9799:93;9888:3;9799:93;:::i;:::-;9917:2;9912:3;9908:12;9901:19;;9560:366;;;:::o;9932:::-;10074:3;10095:67;10159:2;10154:3;10095:67;:::i;:::-;10088:74;;10171:93;10260:3;10171:93;:::i;:::-;10289:2;10284:3;10280:12;10273:19;;9932:366;;;:::o;10304:::-;10446:3;10467:67;10531:2;10526:3;10467:67;:::i;:::-;10460:74;;10543:93;10632:3;10543:93;:::i;:::-;10661:2;10656:3;10652:12;10645:19;;10304:366;;;:::o;10676:::-;10818:3;10839:67;10903:2;10898:3;10839:67;:::i;:::-;10832:74;;10915:93;11004:3;10915:93;:::i;:::-;11033:2;11028:3;11024:12;11017:19;;10676:366;;;:::o;11048:::-;11190:3;11211:67;11275:2;11270:3;11211:67;:::i;:::-;11204:74;;11287:93;11376:3;11287:93;:::i;:::-;11405:2;11400:3;11396:12;11389:19;;11048:366;;;:::o;11420:::-;11562:3;11583:67;11647:2;11642:3;11583:67;:::i;:::-;11576:74;;11659:93;11748:3;11659:93;:::i;:::-;11777:2;11772:3;11768:12;11761:19;;11420:366;;;:::o;11792:::-;11934:3;11955:67;12019:2;12014:3;11955:67;:::i;:::-;11948:74;;12031:93;12120:3;12031:93;:::i;:::-;12149:2;12144:3;12140:12;12133:19;;11792:366;;;:::o;12164:::-;12306:3;12327:67;12391:2;12386:3;12327:67;:::i;:::-;12320:74;;12403:93;12492:3;12403:93;:::i;:::-;12521:2;12516:3;12512:12;12505:19;;12164:366;;;:::o;12536:::-;12678:3;12699:67;12763:2;12758:3;12699:67;:::i;:::-;12692:74;;12775:93;12864:3;12775:93;:::i;:::-;12893:2;12888:3;12884:12;12877:19;;12536:366;;;:::o;12908:::-;13050:3;13071:67;13135:2;13130:3;13071:67;:::i;:::-;13064:74;;13147:93;13236:3;13147:93;:::i;:::-;13265:2;13260:3;13256:12;13249:19;;12908:366;;;:::o;13280:::-;13422:3;13443:67;13507:2;13502:3;13443:67;:::i;:::-;13436:74;;13519:93;13608:3;13519:93;:::i;:::-;13637:2;13632:3;13628:12;13621:19;;13280:366;;;:::o;13652:118::-;13739:24;13757:5;13739:24;:::i;:::-;13734:3;13727:37;13652:118;;:::o;13776:271::-;13906:3;13928:93;14017:3;14008:6;13928:93;:::i;:::-;13921:100;;14038:3;14031:10;;13776:271;;;;:::o;14053:222::-;14146:4;14184:2;14173:9;14169:18;14161:26;;14197:71;14265:1;14254:9;14250:17;14241:6;14197:71;:::i;:::-;14053:222;;;;:::o;14281:332::-;14402:4;14440:2;14429:9;14425:18;14417:26;;14453:71;14521:1;14510:9;14506:17;14497:6;14453:71;:::i;:::-;14534:72;14602:2;14591:9;14587:18;14578:6;14534:72;:::i;:::-;14281:332;;;;;:::o;14619:442::-;14768:4;14806:2;14795:9;14791:18;14783:26;;14819:71;14887:1;14876:9;14872:17;14863:6;14819:71;:::i;:::-;14900:72;14968:2;14957:9;14953:18;14944:6;14900:72;:::i;:::-;14982;15050:2;15039:9;15035:18;15026:6;14982:72;:::i;:::-;14619:442;;;;;;:::o;15067:332::-;15188:4;15226:2;15215:9;15211:18;15203:26;;15239:71;15307:1;15296:9;15292:17;15283:6;15239:71;:::i;:::-;15320:72;15388:2;15377:9;15373:18;15364:6;15320:72;:::i;:::-;15067:332;;;;;:::o;15405:250::-;15512:4;15550:2;15539:9;15535:18;15527:26;;15563:85;15645:1;15634:9;15630:17;15621:6;15563:85;:::i;:::-;15405:250;;;;:::o;15661:581::-;15852:4;15890:3;15879:9;15875:19;15867:27;;15904:85;15986:1;15975:9;15971:17;15962:6;15904:85;:::i;:::-;15999:72;16067:2;16056:9;16052:18;16043:6;15999:72;:::i;:::-;16081;16149:2;16138:9;16134:18;16125:6;16081:72;:::i;:::-;16163;16231:2;16220:9;16216:18;16207:6;16163:72;:::i;:::-;15661:581;;;;;;;:::o;16248:362::-;16384:4;16422:2;16411:9;16407:18;16399:26;;16435:86;16518:1;16507:9;16503:17;16494:6;16435:86;:::i;:::-;16531:72;16599:2;16588:9;16584:18;16575:6;16531:72;:::i;:::-;16248:362;;;;;:::o;16616:264::-;16730:4;16768:2;16757:9;16753:18;16745:26;;16781:92;16870:1;16859:9;16855:17;16846:6;16781:92;:::i;:::-;16616:264;;;;:::o;16886:313::-;16999:4;17037:2;17026:9;17022:18;17014:26;;17086:9;17080:4;17076:20;17072:1;17061:9;17057:17;17050:47;17114:78;17187:4;17178:6;17114:78;:::i;:::-;17106:86;;16886:313;;;;:::o;17205:419::-;17371:4;17409:2;17398:9;17394:18;17386:26;;17458:9;17452:4;17448:20;17444:1;17433:9;17429:17;17422:47;17486:131;17612:4;17486:131;:::i;:::-;17478:139;;17205:419;;;:::o;17630:::-;17796:4;17834:2;17823:9;17819:18;17811:26;;17883:9;17877:4;17873:20;17869:1;17858:9;17854:17;17847:47;17911:131;18037:4;17911:131;:::i;:::-;17903:139;;17630:419;;;:::o;18055:::-;18221:4;18259:2;18248:9;18244:18;18236:26;;18308:9;18302:4;18298:20;18294:1;18283:9;18279:17;18272:47;18336:131;18462:4;18336:131;:::i;:::-;18328:139;;18055:419;;;:::o;18480:::-;18646:4;18684:2;18673:9;18669:18;18661:26;;18733:9;18727:4;18723:20;18719:1;18708:9;18704:17;18697:47;18761:131;18887:4;18761:131;:::i;:::-;18753:139;;18480:419;;;:::o;18905:::-;19071:4;19109:2;19098:9;19094:18;19086:26;;19158:9;19152:4;19148:20;19144:1;19133:9;19129:17;19122:47;19186:131;19312:4;19186:131;:::i;:::-;19178:139;;18905:419;;;:::o;19330:::-;19496:4;19534:2;19523:9;19519:18;19511:26;;19583:9;19577:4;19573:20;19569:1;19558:9;19554:17;19547:47;19611:131;19737:4;19611:131;:::i;:::-;19603:139;;19330:419;;;:::o;19755:::-;19921:4;19959:2;19948:9;19944:18;19936:26;;20008:9;20002:4;19998:20;19994:1;19983:9;19979:17;19972:47;20036:131;20162:4;20036:131;:::i;:::-;20028:139;;19755:419;;;:::o;20180:::-;20346:4;20384:2;20373:9;20369:18;20361:26;;20433:9;20427:4;20423:20;20419:1;20408:9;20404:17;20397:47;20461:131;20587:4;20461:131;:::i;:::-;20453:139;;20180:419;;;:::o;20605:::-;20771:4;20809:2;20798:9;20794:18;20786:26;;20858:9;20852:4;20848:20;20844:1;20833:9;20829:17;20822:47;20886:131;21012:4;20886:131;:::i;:::-;20878:139;;20605:419;;;:::o;21030:::-;21196:4;21234:2;21223:9;21219:18;21211:26;;21283:9;21277:4;21273:20;21269:1;21258:9;21254:17;21247:47;21311:131;21437:4;21311:131;:::i;:::-;21303:139;;21030:419;;;:::o;21455:::-;21621:4;21659:2;21648:9;21644:18;21636:26;;21708:9;21702:4;21698:20;21694:1;21683:9;21679:17;21672:47;21736:131;21862:4;21736:131;:::i;:::-;21728:139;;21455:419;;;:::o;21880:::-;22046:4;22084:2;22073:9;22069:18;22061:26;;22133:9;22127:4;22123:20;22119:1;22108:9;22104:17;22097:47;22161:131;22287:4;22161:131;:::i;:::-;22153:139;;21880:419;;;:::o;22305:::-;22471:4;22509:2;22498:9;22494:18;22486:26;;22558:9;22552:4;22548:20;22544:1;22533:9;22529:17;22522:47;22586:131;22712:4;22586:131;:::i;:::-;22578:139;;22305:419;;;:::o;22730:::-;22896:4;22934:2;22923:9;22919:18;22911:26;;22983:9;22977:4;22973:20;22969:1;22958:9;22954:17;22947:47;23011:131;23137:4;23011:131;:::i;:::-;23003:139;;22730:419;;;:::o;23155:::-;23321:4;23359:2;23348:9;23344:18;23336:26;;23408:9;23402:4;23398:20;23394:1;23383:9;23379:17;23372:47;23436:131;23562:4;23436:131;:::i;:::-;23428:139;;23155:419;;;:::o;23580:::-;23746:4;23784:2;23773:9;23769:18;23761:26;;23833:9;23827:4;23823:20;23819:1;23808:9;23804:17;23797:47;23861:131;23987:4;23861:131;:::i;:::-;23853:139;;23580:419;;;:::o;24005:222::-;24098:4;24136:2;24125:9;24121:18;24113:26;;24149:71;24217:1;24206:9;24202:17;24193:6;24149:71;:::i;:::-;24005:222;;;;:::o;24233:332::-;24354:4;24392:2;24381:9;24377:18;24369:26;;24405:71;24473:1;24462:9;24458:17;24449:6;24405:71;:::i;:::-;24486:72;24554:2;24543:9;24539:18;24530:6;24486:72;:::i;:::-;24233:332;;;;;:::o;24652:98::-;24703:6;24737:5;24731:12;24721:22;;24652:98;;;:::o;24756:99::-;24808:6;24842:5;24836:12;24826:22;;24756:99;;;:::o;24861:147::-;24962:11;24999:3;24984:18;;24861:147;;;;:::o;25014:169::-;25098:11;25132:6;25127:3;25120:19;25172:4;25167:3;25163:14;25148:29;;25014:169;;;;:::o;25189:305::-;25229:3;25248:20;25266:1;25248:20;:::i;:::-;25243:25;;25282:20;25300:1;25282:20;:::i;:::-;25277:25;;25436:1;25368:66;25364:74;25361:1;25358:81;25355:107;;;25442:18;;:::i;:::-;25355:107;25486:1;25483;25479:9;25472:16;;25189:305;;;;:::o;25500:185::-;25540:1;25557:20;25575:1;25557:20;:::i;:::-;25552:25;;25591:20;25609:1;25591:20;:::i;:::-;25586:25;;25630:1;25620:35;;25635:18;;:::i;:::-;25620:35;25677:1;25674;25670:9;25665:14;;25500:185;;;;:::o;25691:348::-;25731:7;25754:20;25772:1;25754:20;:::i;:::-;25749:25;;25788:20;25806:1;25788:20;:::i;:::-;25783:25;;25976:1;25908:66;25904:74;25901:1;25898:81;25893:1;25886:9;25879:17;25875:105;25872:131;;;25983:18;;:::i;:::-;25872:131;26031:1;26028;26024:9;26013:20;;25691:348;;;;:::o;26045:191::-;26085:4;26105:20;26123:1;26105:20;:::i;:::-;26100:25;;26139:20;26157:1;26139:20;:::i;:::-;26134:25;;26178:1;26175;26172:8;26169:34;;;26183:18;;:::i;:::-;26169:34;26228:1;26225;26221:9;26213:17;;26045:191;;;;:::o;26242:96::-;26279:7;26308:24;26326:5;26308:24;:::i;:::-;26297:35;;26242:96;;;:::o;26344:90::-;26378:7;26421:5;26414:13;26407:21;26396:32;;26344:90;;;:::o;26440:110::-;26491:7;26520:24;26538:5;26520:24;:::i;:::-;26509:35;;26440:110;;;:::o;26556:111::-;26608:7;26637:24;26655:5;26637:24;:::i;:::-;26626:35;;26556:111;;;:::o;26673:117::-;26731:7;26760:24;26778:5;26760:24;:::i;:::-;26749:35;;26673:117;;;:::o;26796:126::-;26833:7;26873:42;26866:5;26862:54;26851:65;;26796:126;;;:::o;26928:77::-;26965:7;26994:5;26983:16;;26928:77;;;:::o;27011:140::-;27075:9;27108:37;27139:5;27108:37;:::i;:::-;27095:50;;27011:140;;;:::o;27157:141::-;27222:9;27255:37;27286:5;27255:37;:::i;:::-;27242:50;;27157:141;;;:::o;27304:147::-;27375:9;27408:37;27439:5;27408:37;:::i;:::-;27395:50;;27304:147;;;:::o;27457:126::-;27507:9;27540:37;27571:5;27540:37;:::i;:::-;27527:50;;27457:126;;;:::o;27589:113::-;27639:9;27672:24;27690:5;27672:24;:::i;:::-;27659:37;;27589:113;;;:::o;27708:307::-;27776:1;27786:113;27800:6;27797:1;27794:13;27786:113;;;27885:1;27880:3;27876:11;27870:18;27866:1;27861:3;27857:11;27850:39;27822:2;27819:1;27815:10;27810:15;;27786:113;;;27917:6;27914:1;27911:13;27908:101;;;27997:1;27988:6;27983:3;27979:16;27972:27;27908:101;27757:258;27708:307;;;:::o;28021:233::-;28060:3;28083:24;28101:5;28083:24;:::i;:::-;28074:33;;28129:66;28122:5;28119:77;28116:103;;;28199:18;;:::i;:::-;28116:103;28246:1;28239:5;28235:13;28228:20;;28021:233;;;:::o;28260:180::-;28308:77;28305:1;28298:88;28405:4;28402:1;28395:15;28429:4;28426:1;28419:15;28446:180;28494:77;28491:1;28484:88;28591:4;28588:1;28581:15;28615:4;28612:1;28605:15;28632:180;28680:77;28677:1;28670:88;28777:4;28774:1;28767:15;28801:4;28798:1;28791:15;28941:117;29050:1;29047;29040:12;29064:102;29105:6;29156:2;29152:7;29147:2;29140:5;29136:14;29132:28;29122:38;;29064:102;;;:::o;29172:225::-;29312:34;29308:1;29300:6;29296:14;29289:58;29381:8;29376:2;29368:6;29364:15;29357:33;29172:225;:::o;29403:169::-;29543:21;29539:1;29531:6;29527:14;29520:45;29403:169;:::o;29578:177::-;29718:29;29714:1;29706:6;29702:14;29695:53;29578:177;:::o;29761:::-;29901:29;29897:1;29889:6;29885:14;29878:53;29761:177;:::o;29944:225::-;30084:34;30080:1;30072:6;30068:14;30061:58;30153:8;30148:2;30140:6;30136:15;30129:33;29944:225;:::o;30175:164::-;30315:16;30311:1;30303:6;30299:14;30292:40;30175:164;:::o;30345:174::-;30485:26;30481:1;30473:6;30469:14;30462:50;30345:174;:::o;30525:220::-;30665:34;30661:1;30653:6;30649:14;30642:58;30734:3;30729:2;30721:6;30717:15;30710:28;30525:220;:::o;30751:182::-;30891:34;30887:1;30879:6;30875:14;30868:58;30751:182;:::o;30939:170::-;31079:22;31075:1;31067:6;31063:14;31056:46;30939:170;:::o;31115:179::-;31255:31;31251:1;31243:6;31239:14;31232:55;31115:179;:::o;31300:168::-;31440:20;31436:1;31428:6;31424:14;31417:44;31300:168;:::o;31474:229::-;31614:34;31610:1;31602:6;31598:14;31591:58;31683:12;31678:2;31670:6;31666:15;31659:37;31474:229;:::o;31709:162::-;31849:14;31845:1;31837:6;31833:14;31826:38;31709:162;:::o;31877:241::-;32017:34;32013:1;32005:6;32001:14;31994:58;32086:24;32081:2;32073:6;32069:15;32062:49;31877:241;:::o;32124:170::-;32264:22;32260:1;32252:6;32248:14;32241:46;32124:170;:::o;32300:122::-;32373:24;32391:5;32373:24;:::i;:::-;32366:5;32363:35;32353:63;;32412:1;32409;32402:12;32353:63;32300:122;:::o;32428:116::-;32498:21;32513:5;32498:21;:::i;:::-;32491:5;32488:32;32478:60;;32534:1;32531;32524:12;32478:60;32428:116;:::o;32550:150::-;32637:38;32669:5;32637:38;:::i;:::-;32630:5;32627:49;32617:77;;32690:1;32687;32680:12;32617:77;32550:150;:::o;32706:152::-;32794:39;32827:5;32794:39;:::i;:::-;32787:5;32784:50;32774:78;;32848:1;32845;32838:12;32774:78;32706:152;:::o;32864:164::-;32958:45;32997:5;32958:45;:::i;:::-;32951:5;32948:56;32938:84;;33018:1;33015;33008:12;32938:84;32864:164;:::o;33034:122::-;33107:24;33125:5;33107:24;:::i;:::-;33100:5;33097:35;33087:63;;33146:1;33143;33136:12;33087:63;33034:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3692800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2540",
								"DDT()": "2733",
								"DDTMasterchefAddress()": "2626",
								"NFTStakeAddress()": "2603",
								"PowerPerBlock()": "2562",
								"add(uint256,address,bool)": "infinite",
								"addNFT(address,uint256)": "73759",
								"claimNFTReward(uint256,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"enterStaking(uint256)": "infinite",
								"enterStakingCompund(uint256,address)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPowerBalance(address)": "2974",
								"leaveStaking(uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"migrate(uint256)": "infinite",
								"migrator()": "2667",
								"nftsInfo(uint256)": "infinite",
								"owner()": "2567",
								"pendingPower(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"powerBalance(address)": "2880",
								"renounceOwnership()": "30419",
								"set(uint256,uint256,bool)": "infinite",
								"setMigrator(address)": "27139",
								"startBlock()": "2563",
								"totalAllocPoint()": "2475",
								"transferOwnership(address)": "30833",
								"updateDDTMasterchefAddress(address)": "27073",
								"updateMultiplier(uint256)": "24806",
								"updateNFT(uint256,uint256)": "infinite",
								"updateNFTStakeAddress(address)": "27031",
								"updatePool(uint256)": "infinite",
								"updatePowerPerBlock(uint256)": "24806",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22111,
									"end": 36450,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23774,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24217,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24852,
									"end": 24856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24849,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24846,
									"end": 24849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24883,
									"end": 24897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24880,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24921,
									"end": 24932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24918,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24986,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25055,
									"end": 25059,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25091,
									"end": 25101,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25091,
									"end": 25101,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25134,
									"end": 25135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25179,
									"end": 25183,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 25161,
									"end": 25176,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19532,
									"end": 19539,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19559,
									"end": 19569,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21494,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21549,
									"end": 21557,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21539,
									"end": 21547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21438,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 78,
									"end": 83,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 278,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 266,
									"end": 279,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 257,
									"end": 279,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 257,
									"end": 279,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 288,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 315,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 288,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 435,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 449,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 457,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 488,
									"end": 497,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 479,
									"end": 486,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 475,
									"end": 498,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 471,
									"end": 503,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 468,
									"end": 587,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 506,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 468,
									"end": 587,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 626,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 721,
									"end": 728,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 701,
									"end": 710,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 697,
									"end": 719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 651,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 729,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 641,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 597,
									"end": 739,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 778,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 860,
									"end": 867,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 851,
									"end": 857,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 840,
									"end": 849,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 836,
									"end": 858,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 794,
									"end": 868,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 794,
									"end": 868,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 749,
									"end": 878,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 917,
									"end": 919,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 999,
									"end": 1006,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 990,
									"end": 996,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 979,
									"end": 988,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 975,
									"end": 997,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 933,
									"end": 1007,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 933,
									"end": 1007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 888,
									"end": 1017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1195,
									"end": 1200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1264,
									"end": 1271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1316,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1317,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 1448,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1399,
									"end": 1404,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1449,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1532,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1667,
									"end": 1784,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1667,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1778,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1867,
									"end": 1916,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1928,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2037,
									"end": 2042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2044,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2056,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 36450,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220962cf93e4ccc25697da1448128fa4db6cf4b560440b897cf8161f3e66a909ec164736f6c63430008070033",
									".code": [
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "CF35FDDF"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "CF35FDDF"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "D209DB8C"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "F3239AB5"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "C11490CC"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "83E32135"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "8C51793B"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "61C1B724"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "3DF7AFF3"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "56B4685F"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "5990C569"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "3DF7AFF3"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "454B0608"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "1D5FBD87"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "22F58541"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "BA33A58"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "1058D281"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27432,
											"end": 27440,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27425,
											"end": 27447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27425,
											"end": 27447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25303,
											"end": 25319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25300,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25285,
											"end": 25300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35201,
											"end": 35222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35225,
											"end": 35233,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35234,
											"end": 35235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35225,
											"end": 35236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35201,
											"end": 35236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35201,
											"end": 35236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35247,
											"end": 35268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35271,
											"end": 35279,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35280,
											"end": 35281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35271,
											"end": 35282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35283,
											"end": 35293,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35271,
											"end": 35294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35247,
											"end": 35294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35247,
											"end": 35294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35328,
											"end": 35335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35313,
											"end": 35317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35313,
											"end": 35324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35313,
											"end": 35324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35313,
											"end": 35324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35313,
											"end": 35335,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35313,
											"end": 35335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35305,
											"end": 35358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35369,
											"end": 35382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35380,
											"end": 35381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35369,
											"end": 35379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 35369,
											"end": 35382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35369,
											"end": 35382,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35369,
											"end": 35382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35393,
											"end": 35408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35464,
											"end": 35468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35464,
											"end": 35479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35464,
											"end": 35479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35464,
											"end": 35479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35454,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35427,
											"end": 35431,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35448,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35427,
											"end": 35448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35415,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35411,
											"end": 35422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35411,
											"end": 35426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35411,
											"end": 35449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35411,
											"end": 35453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35411,
											"end": 35459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35411,
											"end": 35463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35411,
											"end": 35480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35393,
											"end": 35480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35393,
											"end": 35480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35504,
											"end": 35505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35494,
											"end": 35501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35494,
											"end": 35505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35491,
											"end": 35598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35578,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35561,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35562,
											"end": 35572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35549,
											"end": 35577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35549,
											"end": 35586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35534,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35535,
											"end": 35545,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35522,
											"end": 35546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35586,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35522,
											"end": 35586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35598,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35491,
											"end": 35598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35621,
											"end": 35622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35611,
											"end": 35618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35622,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35608,
											"end": 35759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35669,
											"end": 35676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35653,
											"end": 35664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35653,
											"end": 35668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35653,
											"end": 35677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35639,
											"end": 35650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35677,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35726,
											"end": 35736,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35739,
											"end": 35746,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35696,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35692,
											"end": 35704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35692,
											"end": 35717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35692,
											"end": 35717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35692,
											"end": 35747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35759,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35608,
											"end": 35759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35830,
											"end": 35834,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35803,
											"end": 35807,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35803,
											"end": 35824,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35803,
											"end": 35824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35803,
											"end": 35824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35787,
											"end": 35798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35787,
											"end": 35802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35787,
											"end": 35825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35787,
											"end": 35829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35787,
											"end": 35835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35769,
											"end": 35773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35769,
											"end": 35784,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35769,
											"end": 35784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35769,
											"end": 35835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35769,
											"end": 35835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35769,
											"end": 35835,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35769,
											"end": 35835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35872,
											"end": 35873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35860,
											"end": 35870,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 35875,
											"end": 35882,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35883,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26024,
											"end": 26045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26048,
											"end": 26056,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26057,
											"end": 26061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26024,
											"end": 26062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26024,
											"end": 26062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26097,
											"end": 26105,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26112,
											"end": 26122,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26161,
											"end": 26165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26161,
											"end": 26182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26212,
											"end": 26234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26243,
											"end": 26247,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26299,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26279,
											"end": 26299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26276,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26303,
											"end": 26311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26333,
											"end": 26351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26354,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26368,
											"end": 26372,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26368,
											"end": 26388,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26368,
											"end": 26388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26368,
											"end": 26388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26390,
											"end": 26402,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 26354,
											"end": 26367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 26354,
											"end": 26403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26354,
											"end": 26403,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26354,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26333,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26333,
											"end": 26403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26495,
											"end": 26510,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26495,
											"end": 26510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26474,
											"end": 26478,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26474,
											"end": 26489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26474,
											"end": 26489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26474,
											"end": 26489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26455,
											"end": 26468,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26455,
											"end": 26468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26450,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26440,
											"end": 26454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26440,
											"end": 26473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26440,
											"end": 26494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26592,
											"end": 26600,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26582,
											"end": 26586,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26566,
											"end": 26577,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26566,
											"end": 26591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26561,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26545,
											"end": 26565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26526,
											"end": 26602,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26526,
											"end": 26602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26690,
											"end": 26694,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26705,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26690,
											"end": 26705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26680,
											"end": 26684,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26658,
											"end": 26674,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26646,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26642,
											"end": 26653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26642,
											"end": 26657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26642,
											"end": 26679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26642,
											"end": 26689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26717,
											"end": 26737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26740,
											"end": 26748,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26749,
											"end": 26754,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26717,
											"end": 26755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26717,
											"end": 26755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26794,
											"end": 26806,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26807,
											"end": 26817,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26782,
											"end": 26793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26841,
											"end": 26844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26877,
											"end": 26878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26869,
											"end": 26873,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26869,
											"end": 26878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26911,
											"end": 26912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26898,
											"end": 26910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26898,
											"end": 26913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26898,
											"end": 26913,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26898,
											"end": 26913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26954,
											"end": 26955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26946,
											"end": 26950,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26975,
											"end": 26991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 26984,
											"end": 26988,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26989,
											"end": 26990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26975,
											"end": 26983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26975,
											"end": 26991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26975,
											"end": 26991,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 26975,
											"end": 26991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27060,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27061,
											"end": 27071,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27036,
											"end": 27045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27072,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27163,
											"end": 27166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27163,
											"end": 27172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27163,
											"end": 27172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27163,
											"end": 27172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27146,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27147,
											"end": 27157,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 27134,
											"end": 27162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27119,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27120,
											"end": 27130,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27184,
											"end": 27201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "17E5883C"
										},
										{
											"begin": 27202,
											"end": 27212,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27727,
											"end": 27738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 27723,
											"end": 27784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27755,
											"end": 27772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 27755,
											"end": 27770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 27755,
											"end": 27772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27755,
											"end": 27772,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 27755,
											"end": 27772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27784,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 27723,
											"end": 27784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27794,
											"end": 27817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27835,
											"end": 27845,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27835,
											"end": 27845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27832,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27845,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27863,
											"end": 27873,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27863,
											"end": 27873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27860,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 27820,
											"end": 27873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27794,
											"end": 27873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27794,
											"end": 27873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 27922,
											"end": 27933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27917,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27902,
											"end": 27917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 27902,
											"end": 27921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 27902,
											"end": 27934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27899,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27884,
											"end": 27934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27934,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 27953,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28060,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28096,
											"end": 28111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28148,
											"end": 28149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27712,
											"end": 28184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28736,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36427,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36414,
											"end": 36439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36439,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36338,
											"end": 36447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33329,
											"end": 33336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33329,
											"end": 33340,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33370,
											"end": 33391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33394,
											"end": 33402,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33403,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33394,
											"end": 33405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33370,
											"end": 33405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33370,
											"end": 33405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33440,
											"end": 33448,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33449,
											"end": 33450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33440,
											"end": 33451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33460,
											"end": 33470,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33440,
											"end": 33472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33504,
											"end": 33505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33493,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 33493,
											"end": 33506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33493,
											"end": 33506,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33493,
											"end": 33506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33535,
											"end": 33536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33521,
											"end": 33525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33521,
											"end": 33532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33536,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33517,
											"end": 33799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33517,
											"end": 33799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33517,
											"end": 33799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33553,
											"end": 33568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33624,
											"end": 33628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33624,
											"end": 33639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33624,
											"end": 33639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33624,
											"end": 33639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33614,
											"end": 33618,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33587,
											"end": 33591,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33608,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33587,
											"end": 33608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33575,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33571,
											"end": 33582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 33571,
											"end": 33586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33571,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33571,
											"end": 33613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33571,
											"end": 33619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 33571,
											"end": 33623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33571,
											"end": 33640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33553,
											"end": 33640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33553,
											"end": 33640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33668,
											"end": 33669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33658,
											"end": 33665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33658,
											"end": 33669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33655,
											"end": 33788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33655,
											"end": 33788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33655,
											"end": 33788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33764,
											"end": 33771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33738,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33747,
											"end": 33757,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33726,
											"end": 33763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33726,
											"end": 33772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33702,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33711,
											"end": 33721,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33690,
											"end": 33723,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33772,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33655,
											"end": 33788,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33655,
											"end": 33788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33538,
											"end": 33799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33517,
											"end": 33799,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33517,
											"end": 33799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33812,
											"end": 33819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33812,
											"end": 33823,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33809,
											"end": 33979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33809,
											"end": 33979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33809,
											"end": 33979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33878,
											"end": 33888,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33903,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33906,
											"end": 33913,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33840,
											"end": 33869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33840,
											"end": 33914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 33959,
											"end": 33966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33943,
											"end": 33954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33943,
											"end": 33958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 33943,
											"end": 33967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33929,
											"end": 33940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33809,
											"end": 33979,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33809,
											"end": 33979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 34050,
											"end": 34054,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 34023,
											"end": 34027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34044,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34023,
											"end": 34044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34007,
											"end": 34018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34007,
											"end": 34022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 34007,
											"end": 34045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34007,
											"end": 34049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 34007,
											"end": 34055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 33993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34004,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33989,
											"end": 34004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34055,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34091,
											"end": 34092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34079,
											"end": 34089,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 34094,
											"end": 34101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34102,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33310,
											"end": 34110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33310,
											"end": 34110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34110,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32510,
											"end": 32511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32502,
											"end": 32506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32502,
											"end": 32511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32502,
											"end": 32511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32556,
											"end": 32577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32580,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32589,
											"end": 32593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32556,
											"end": 32594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32556,
											"end": 32594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32605,
											"end": 32626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32629,
											"end": 32637,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32638,
											"end": 32642,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32644,
											"end": 32654,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32605,
											"end": 32655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32605,
											"end": 32655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32674,
											"end": 32685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32696,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32730,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 32741,
											"end": 32745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32730,
											"end": 32740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 32730,
											"end": 32746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32730,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 32730,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32757,
											"end": 32772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32828,
											"end": 32832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32843,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32828,
											"end": 32843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32818,
											"end": 32822,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 32791,
											"end": 32795,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32791,
											"end": 32812,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32791,
											"end": 32812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32791,
											"end": 32812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32779,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32775,
											"end": 32786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32775,
											"end": 32790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32775,
											"end": 32817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32775,
											"end": 32827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32757,
											"end": 32844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32757,
											"end": 32844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32868,
											"end": 32869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32858,
											"end": 32865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 32941,
											"end": 32948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32924,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32925,
											"end": 32935,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 32912,
											"end": 32940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32897,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32898,
											"end": 32908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 33001,
											"end": 33008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 32996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32985,
											"end": 33000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 32975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 32982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32971,
											"end": 32982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 33081,
											"end": 33085,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 33054,
											"end": 33058,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33075,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33054,
											"end": 33075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33042,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 33038,
											"end": 33053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33038,
											"end": 33080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33020,
											"end": 33035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 33131,
											"end": 33141,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33144,
											"end": 33151,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33189,
											"end": 33193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33177,
											"end": 33187,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 33195,
											"end": 33202,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28973,
											"end": 28974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29043,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29044,
											"end": 29048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29060,
											"end": 29074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29077,
											"end": 29081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29060,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29060,
											"end": 29089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29114,
											"end": 29121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29114,
											"end": 29131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29131,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29140,
											"end": 29144,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29196,
											"end": 29199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29211,
											"end": 29228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29231,
											"end": 29247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29247,
											"name": "PUSH",
											"source": 0,
											"value": "CE5494BB"
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29211,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29211,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29282,
											"end": 29302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29302,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29311,
											"end": 29315,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29317,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29360,
											"end": 29370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29345,
											"end": 29357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25697,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25750,
											"end": 25754,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25780,
											"end": 25786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30821,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30845,
											"end": 30853,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30854,
											"end": 30858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30821,
											"end": 30859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30821,
											"end": 30859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30890,
											"end": 30894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30890,
											"end": 30910,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30890,
											"end": 30910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30890,
											"end": 30910,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30886,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 30927,
											"end": 30934,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30955,
											"end": 30971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 30978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31005,
											"end": 31009,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30955,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30955,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31038,
											"end": 31039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31026,
											"end": 31034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31026,
											"end": 31039,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31079,
											"end": 31091,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31076,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31056,
											"end": 31076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31155,
											"end": 31204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 31169,
											"end": 31173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31169,
											"end": 31189,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31169,
											"end": 31189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31169,
											"end": 31189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31191,
											"end": 31203,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31155,
											"end": 31168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31155,
											"end": 31204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31155,
											"end": 31204,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 31155,
											"end": 31204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 31292,
											"end": 31307,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31292,
											"end": 31307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 31271,
											"end": 31275,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31271,
											"end": 31286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31271,
											"end": 31286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31271,
											"end": 31286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 31252,
											"end": 31265,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31252,
											"end": 31265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31247,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31237,
											"end": 31270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31237,
											"end": 31291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 31395,
											"end": 31403,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 31385,
											"end": 31389,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31369,
											"end": 31380,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31369,
											"end": 31384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31369,
											"end": 31394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31364,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31343,
											"end": 31364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 31343,
											"end": 31368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31340,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31319,
											"end": 31340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31439,
											"end": 31451,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31420,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31436,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31416,
											"end": 31436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36029,
											"end": 36050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36053,
											"end": 36061,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36062,
											"end": 36066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36029,
											"end": 36067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36029,
											"end": 36067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36102,
											"end": 36110,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36111,
											"end": 36115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36102,
											"end": 36116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36117,
											"end": 36127,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36102,
											"end": 36128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 36173,
											"end": 36183,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36186,
											"end": 36190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36186,
											"end": 36197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36186,
											"end": 36197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36186,
											"end": 36197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36139,
											"end": 36151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36139,
											"end": 36164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 36139,
											"end": 36164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 36139,
											"end": 36198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36244,
											"end": 36248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36232,
											"end": 36242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "PUSH",
											"source": 0,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 36250,
											"end": 36254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36250,
											"end": 36261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36214,
											"end": 36262,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 36287,
											"end": 36288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36273,
											"end": 36277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36273,
											"end": 36284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36273,
											"end": 36284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36273,
											"end": 36288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36273,
											"end": 36288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36273,
											"end": 36288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36273,
											"end": 36288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36317,
											"end": 36318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36299,
											"end": 36303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36314,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36299,
											"end": 36314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36318,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36299,
											"end": 36318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36018,
											"end": 36326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36018,
											"end": 36326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35970,
											"end": 36326,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25449,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25429,
											"end": 25449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27328,
											"end": 27344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27309,
											"end": 27344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27344,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30558,
											"end": 30572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30575,
											"end": 30583,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30558,
											"end": 30590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30558,
											"end": 30590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30606,
											"end": 30617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30629,
											"end": 30635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 30670,
											"end": 30673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30659,
											"end": 30674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30659,
											"end": 30674,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 30659,
											"end": 30674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 28376,
											"end": 28437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28408,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 28408,
											"end": 28423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28408,
											"end": 28425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28408,
											"end": 28425,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 28408,
											"end": 28425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28437,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 28376,
											"end": 28437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 28516,
											"end": 28527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 28485,
											"end": 28493,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28494,
											"end": 28498,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28510,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28485,
											"end": 28510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28480,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28465,
											"end": 28480,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28465,
											"end": 28484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 28465,
											"end": 28511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 28465,
											"end": 28515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 28465,
											"end": 28528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28462,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28447,
											"end": 28528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28528,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28547,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28548,
											"end": 28552,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28539,
											"end": 28564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 20848,
											"end": 20849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25551,
											"end": 25558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25590,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25591,
											"end": 25598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25571,
											"end": 25599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25571,
											"end": 25599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20151,
											"end": 20158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29526,
											"end": 29533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 29573,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29573,
											"end": 29589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 29562,
											"end": 29567,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29557,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 29554,
											"end": 29561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 29554,
											"end": 29572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29547,
											"end": 29590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29547,
											"end": 29590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25931,
											"end": 25937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25915,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25916,
											"end": 25921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25928,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25907,
											"end": 25928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34218,
											"end": 34219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34208,
											"end": 34215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34208,
											"end": 34219,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 34200,
											"end": 34238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34271,
											"end": 34286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34257,
											"end": 34286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34267,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34257,
											"end": 34286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34286,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 34257,
											"end": 34324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34304,
											"end": 34324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34290,
											"end": 34324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34300,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34290,
											"end": 34324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34257,
											"end": 34324,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 34257,
											"end": 34324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 34249,
											"end": 34349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34360,
											"end": 34381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34384,
											"end": 34392,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34393,
											"end": 34394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34384,
											"end": 34395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34360,
											"end": 34395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34360,
											"end": 34395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34430,
											"end": 34438,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34439,
											"end": 34440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34430,
											"end": 34441,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34450,
											"end": 34458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34430,
											"end": 34460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 34492,
											"end": 34493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34481,
											"end": 34491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34523,
											"end": 34524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34509,
											"end": 34520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34509,
											"end": 34520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34509,
											"end": 34520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34509,
											"end": 34524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 34505,
											"end": 34783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 34612,
											"end": 34616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34612,
											"end": 34627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34612,
											"end": 34627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34612,
											"end": 34627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 34602,
											"end": 34606,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 34575,
											"end": 34579,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34575,
											"end": 34596,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34575,
											"end": 34596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34575,
											"end": 34596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34563,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34559,
											"end": 34570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34559,
											"end": 34574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 34559,
											"end": 34597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34559,
											"end": 34601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 34559,
											"end": 34607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 34559,
											"end": 34611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 34559,
											"end": 34628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34646,
											"end": 34653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34646,
											"end": 34657,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 34643,
											"end": 34772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 34748,
											"end": 34755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34724,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34733,
											"end": 34741,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34712,
											"end": 34747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 34712,
											"end": 34756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34690,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34699,
											"end": 34707,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34678,
											"end": 34709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34756,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34678,
											"end": 34756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34772,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 34643,
											"end": 34772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34526,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34783,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 34505,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34806,
											"end": 34807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34796,
											"end": 34803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34796,
											"end": 34807,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34793,
											"end": 34963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34793,
											"end": 34963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 34793,
											"end": 34963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 34862,
											"end": 34872,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34887,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34828,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34824,
											"end": 34836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34824,
											"end": 34853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 34824,
											"end": 34853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 34824,
											"end": 34898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 34943,
											"end": 34950,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34927,
											"end": 34938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34927,
											"end": 34942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 34927,
											"end": 34951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34913,
											"end": 34924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34951,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34793,
											"end": 34963,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 34793,
											"end": 34963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 35034,
											"end": 35038,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 35007,
											"end": 35011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35007,
											"end": 35028,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35007,
											"end": 35028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35007,
											"end": 35028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 34995,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34991,
											"end": 35002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34991,
											"end": 35006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 34991,
											"end": 35029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34991,
											"end": 35033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 34991,
											"end": 35039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 34977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 34988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34973,
											"end": 34988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 35039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 35039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 35039,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 35039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35073,
											"end": 35074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35063,
											"end": 35071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 35076,
											"end": 35083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34189,
											"end": 35092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34189,
											"end": 35092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34118,
											"end": 35092,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31604,
											"end": 31608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31604,
											"end": 31613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31604,
											"end": 31613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31661,
											"end": 31668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31672,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31704,
											"end": 31725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31728,
											"end": 31736,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31737,
											"end": 31741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31704,
											"end": 31742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31704,
											"end": 31742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31753,
											"end": 31774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31777,
											"end": 31785,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31786,
											"end": 31790,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31792,
											"end": 31802,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31753,
											"end": 31803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31753,
											"end": 31803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 31825,
											"end": 31829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 31814,
											"end": 31830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31814,
											"end": 31830,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 31814,
											"end": 31830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31845,
											"end": 31849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31845,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31845,
											"end": 31856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31845,
											"end": 31856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31845,
											"end": 31860,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 31948,
											"end": 31952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31948,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31948,
											"end": 31963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31948,
											"end": 31963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 31938,
											"end": 31942,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 31911,
											"end": 31915,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31911,
											"end": 31932,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31911,
											"end": 31932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31911,
											"end": 31932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31899,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31895,
											"end": 31910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31895,
											"end": 31937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 31895,
											"end": 31947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31992,
											"end": 31993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31982,
											"end": 31989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31982,
											"end": 31993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 32069,
											"end": 32076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32052,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32053,
											"end": 32063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 32040,
											"end": 32068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32025,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32026,
											"end": 32036,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31862,
											"end": 32104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 32152,
											"end": 32162,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32173,
											"end": 32177,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32180,
											"end": 32187,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32118,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 32229,
											"end": 32236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32213,
											"end": 32224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 32213,
											"end": 32228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32199,
											"end": 32210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 32309,
											"end": 32313,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 32282,
											"end": 32286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32303,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32282,
											"end": 32303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32266,
											"end": 32277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32266,
											"end": 32281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32266,
											"end": 32308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32248,
											"end": 32263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32338,
											"end": 32348,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 32356,
											"end": 32363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 21198,
											"end": 21206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29737,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29756,
											"end": 29777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29788,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29789,
											"end": 29793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29756,
											"end": 29794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29756,
											"end": 29794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29837,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29838,
											"end": 29842,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29844,
											"end": 29849,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 29885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29888,
											"end": 29892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29888,
											"end": 29909,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29888,
											"end": 29909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29888,
											"end": 29909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 29909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 29909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29961,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29970,
											"end": 29974,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30006,
											"end": 30026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30003,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30030,
											"end": 30038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30030,
											"end": 30043,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30030,
											"end": 30043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 30095,
											"end": 30099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30095,
											"end": 30115,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30095,
											"end": 30115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30095,
											"end": 30115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30117,
											"end": 30129,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30081,
											"end": 30094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 30222,
											"end": 30237,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30222,
											"end": 30237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 30201,
											"end": 30205,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30201,
											"end": 30216,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30201,
											"end": 30216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30201,
											"end": 30216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 30182,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30182,
											"end": 30195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30177,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30167,
											"end": 30181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30167,
											"end": 30200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30167,
											"end": 30221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 30319,
											"end": 30327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 30309,
											"end": 30313,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30293,
											"end": 30304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30293,
											"end": 30308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30293,
											"end": 30318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 30272,
											"end": 30292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30253,
											"end": 30329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30253,
											"end": 30329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30045,
											"end": 30341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30045,
											"end": 30341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 30406,
											"end": 30410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 30396,
											"end": 30400,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 30374,
											"end": 30390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30362,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30358,
											"end": 30369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30358,
											"end": 30373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30358,
											"end": 30395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 30358,
											"end": 30405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19559,
											"end": 19569,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16287,
											"end": 16292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 16533,
											"end": 16538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16602,
											"end": 16607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "tag",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17250,
											"end": 17260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17290,
											"end": 17294,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 17424,
											"end": 17429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17478,
											"end": 17485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17487,
											"end": 17492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19277,
											"end": 19278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19278,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 11757,
											"end": 11763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12910,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13107,
											"end": 13112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15522,
											"end": 15534,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15551,
											"end": 15558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15716,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15696,
											"end": 15706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15717,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15888,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15942,
											"end": 15952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 15953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15927,
											"end": 15971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 195,
											"end": 200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 370,
											"end": 383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 601,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 434,
											"end": 601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 510,
											"end": 539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 548,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 589,
											"end": 594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 778,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 607,
											"end": 778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 703,
											"end": 716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 694,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 766,
											"end": 771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 784,
											"end": 953,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 784,
											"end": 953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 870,
											"end": 890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 861,
											"end": 890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 861,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1071,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 1273,
											"end": 1278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 1744,
											"end": 1751,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 1888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1889,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 2095,
											"end": 2102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2637,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 3702,
											"end": 3709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 4059,
											"end": 4066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4218,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4411,
											"end": 4418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 4539,
											"end": 4546,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4725,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 4919,
											"end": 4926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4899,
											"end": 4908,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4927,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5069,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 5079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5321,
											"end": 5328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5345,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "tag",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 5538,
											"end": 5545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5655,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5822,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5839,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "tag",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 6032,
											"end": 6039,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6021,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5933,
											"end": 6050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 6160,
											"end": 6167,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6149,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 6421,
											"end": 6426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 6604,
											"end": 6609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 6707,
											"end": 6713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6714,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 6768,
											"end": 6774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 6965,
											"end": 6970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 6918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7081,
											"end": 7084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7074,
											"end": 7139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 7311,
											"end": 7316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 7479,
											"end": 7484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7563,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7572,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7624,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7612,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 7680,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "tag",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 7927,
											"end": 7929,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 8028,
											"end": 8031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "tag",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8294,
											"end": 8297,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 8400,
											"end": 8403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8424,
											"end": 8427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 8671,
											"end": 8673,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 8666,
											"end": 8669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 8772,
											"end": 8775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8792,
											"end": 8804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 9038,
											"end": 9041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "tag",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 9046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 9046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 9144,
											"end": 9147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9173,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9168,
											"end": 9171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "tag",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9702,
											"end": 9705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 9787,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 9782,
											"end": 9785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 9888,
											"end": 9891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9917,
											"end": 9919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10154,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 10260,
											"end": 10263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "tag",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10284,
											"end": 10287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10446,
											"end": 10449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 10531,
											"end": 10533,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10526,
											"end": 10529,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 10632,
											"end": 10635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 10903,
											"end": 10905,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10898,
											"end": 10901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "tag",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 11004,
											"end": 11007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11190,
											"end": 11193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 11275,
											"end": 11277,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 11270,
											"end": 11273,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "tag",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 11376,
											"end": 11379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11405,
											"end": 11407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 11748,
											"end": 11751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "tag",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11772,
											"end": 11775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "tag",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11934,
											"end": 11937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 12019,
											"end": 12021,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12014,
											"end": 12017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "tag",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 12022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 12022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 12120,
											"end": 12123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 12152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 12391,
											"end": 12393,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 12386,
											"end": 12389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "tag",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 12492,
											"end": 12495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "tag",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12516,
											"end": 12519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12512,
											"end": 12524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "tag",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12678,
											"end": 12681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 12763,
											"end": 12765,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 12758,
											"end": 12761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 12864,
											"end": 12867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "tag",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12893,
											"end": 12895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12888,
											"end": 12891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12884,
											"end": 12896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13050,
											"end": 13053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 13135,
											"end": 13137,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 13130,
											"end": 13133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "tag",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 13236,
											"end": 13239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "tag",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13260,
											"end": 13263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13256,
											"end": 13268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "tag",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 13507,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 13502,
											"end": 13505,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "tag",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13436,
											"end": 13510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13436,
											"end": 13510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 13608,
											"end": 13611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "tag",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13637,
											"end": 13639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13632,
											"end": 13635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13628,
											"end": 13640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13652,
											"end": 13770,
											"name": "tag",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 13652,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 13757,
											"end": 13762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "tag",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13734,
											"end": 13737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13727,
											"end": 13764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13652,
											"end": 13770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13652,
											"end": 13770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13652,
											"end": 13770,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13776,
											"end": 14047,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 13776,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13906,
											"end": 13909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13928,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 14017,
											"end": 14020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14008,
											"end": 14014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 13928,
											"end": 14021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13928,
											"end": 14021,
											"name": "tag",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 13928,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13921,
											"end": 14021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13921,
											"end": 14021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14038,
											"end": 14041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13776,
											"end": 14047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13776,
											"end": 14047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13776,
											"end": 14047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13776,
											"end": 14047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13776,
											"end": 14047,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14053,
											"end": 14275,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 14053,
											"end": 14275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14146,
											"end": 14150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14184,
											"end": 14186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14161,
											"end": 14187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14161,
											"end": 14187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 14265,
											"end": 14266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14254,
											"end": 14263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14241,
											"end": 14247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 14197,
											"end": 14268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14197,
											"end": 14268,
											"name": "tag",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 14197,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14053,
											"end": 14275,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14053,
											"end": 14275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14053,
											"end": 14275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14053,
											"end": 14275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14053,
											"end": 14275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14402,
											"end": 14406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14425,
											"end": 14443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14453,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 14521,
											"end": 14522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14497,
											"end": 14503,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14453,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 14453,
											"end": 14524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14453,
											"end": 14524,
											"name": "tag",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 14453,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "814"
										},
										{
											"begin": 14602,
											"end": 14604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14591,
											"end": 14600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14587,
											"end": 14605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14584,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 14534,
											"end": 14606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14534,
											"end": 14606,
											"name": "tag",
											"source": 1,
											"value": "814"
										},
										{
											"begin": 14534,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14613,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14768,
											"end": 14772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14806,
											"end": 14808,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14795,
											"end": 14804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14819,
											"end": 14890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 14887,
											"end": 14888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14876,
											"end": 14885,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14863,
											"end": 14869,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14819,
											"end": 14890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 14819,
											"end": 14890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14819,
											"end": 14890,
											"name": "tag",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 14819,
											"end": 14890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14900,
											"end": 14972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 14968,
											"end": 14970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14966,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14944,
											"end": 14950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14900,
											"end": 14972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 14900,
											"end": 14972,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14900,
											"end": 14972,
											"name": "tag",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 14900,
											"end": 14972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14982,
											"end": 15054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "818"
										},
										{
											"begin": 15050,
											"end": 15052,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15039,
											"end": 15048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15035,
											"end": 15053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15026,
											"end": 15032,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14982,
											"end": 15054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 14982,
											"end": 15054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14982,
											"end": 15054,
											"name": "tag",
											"source": 1,
											"value": "818"
										},
										{
											"begin": 14982,
											"end": 15054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14619,
											"end": 15061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15226,
											"end": 15228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15215,
											"end": 15224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15203,
											"end": 15229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15203,
											"end": 15229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "820"
										},
										{
											"begin": 15307,
											"end": 15308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15296,
											"end": 15305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15289,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 15239,
											"end": 15310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15239,
											"end": 15310,
											"name": "tag",
											"source": 1,
											"value": "820"
										},
										{
											"begin": 15239,
											"end": 15310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15320,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 15388,
											"end": 15390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15377,
											"end": 15386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15364,
											"end": 15370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15320,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 15320,
											"end": 15392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15320,
											"end": 15392,
											"name": "tag",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 15320,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15399,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15405,
											"end": 15655,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 15405,
											"end": 15655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15512,
											"end": 15516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15550,
											"end": 15552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15527,
											"end": 15553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15527,
											"end": 15553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15563,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "823"
										},
										{
											"begin": 15645,
											"end": 15646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15634,
											"end": 15643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15630,
											"end": 15647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15621,
											"end": 15627,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15563,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 15563,
											"end": 15648,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15563,
											"end": 15648,
											"name": "tag",
											"source": 1,
											"value": "823"
										},
										{
											"begin": 15563,
											"end": 15648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15655,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15852,
											"end": 15856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15890,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15879,
											"end": 15888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15875,
											"end": 15894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15904,
											"end": 15989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 15986,
											"end": 15987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15975,
											"end": 15984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15971,
											"end": 15988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15962,
											"end": 15968,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15904,
											"end": 15989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 15904,
											"end": 15989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15904,
											"end": 15989,
											"name": "tag",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 15904,
											"end": 15989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15999,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 16067,
											"end": 16069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16056,
											"end": 16065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16052,
											"end": 16070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16043,
											"end": 16049,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15999,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 15999,
											"end": 16071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15999,
											"end": 16071,
											"name": "tag",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 15999,
											"end": 16071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 16149,
											"end": 16151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16138,
											"end": 16147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16134,
											"end": 16152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16131,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 16081,
											"end": 16153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16081,
											"end": 16153,
											"name": "tag",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 16081,
											"end": 16153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16163,
											"end": 16235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "828"
										},
										{
											"begin": 16231,
											"end": 16233,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16220,
											"end": 16229,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16216,
											"end": 16234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16213,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16163,
											"end": 16235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 16163,
											"end": 16235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16163,
											"end": 16235,
											"name": "tag",
											"source": 1,
											"value": "828"
										},
										{
											"begin": 16163,
											"end": 16235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 16242,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16384,
											"end": 16388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16422,
											"end": 16424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16411,
											"end": 16420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16399,
											"end": 16425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16399,
											"end": 16425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16435,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 16518,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16507,
											"end": 16516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16503,
											"end": 16520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16500,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16435,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 16435,
											"end": 16521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16435,
											"end": 16521,
											"name": "tag",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 16435,
											"end": 16521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16531,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 16599,
											"end": 16601,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16588,
											"end": 16597,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16584,
											"end": 16602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16581,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16531,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 16531,
											"end": 16603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16531,
											"end": 16603,
											"name": "tag",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 16531,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16610,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16616,
											"end": 16880,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 16616,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16730,
											"end": 16734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16768,
											"end": 16770,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16757,
											"end": 16766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16753,
											"end": 16771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16745,
											"end": 16771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16745,
											"end": 16771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16781,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 16870,
											"end": 16871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16859,
											"end": 16868,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16855,
											"end": 16872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16846,
											"end": 16852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16781,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 16781,
											"end": 16873,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16781,
											"end": 16873,
											"name": "tag",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 16781,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16880,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16886,
											"end": 17199,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 16886,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16999,
											"end": 17003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17037,
											"end": 17039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17026,
											"end": 17035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17022,
											"end": 17040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17014,
											"end": 17040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17014,
											"end": 17040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17086,
											"end": 17095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17080,
											"end": 17084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17076,
											"end": 17096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17061,
											"end": 17070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17057,
											"end": 17074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17050,
											"end": 17097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17114,
											"end": 17192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 17187,
											"end": 17191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17178,
											"end": 17184,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17114,
											"end": 17192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 17114,
											"end": 17192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17114,
											"end": 17192,
											"name": "tag",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 17114,
											"end": 17192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17199,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17205,
											"end": 17624,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 17205,
											"end": 17624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17371,
											"end": 17375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17409,
											"end": 17411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17398,
											"end": 17407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17394,
											"end": 17412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17386,
											"end": 17412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17386,
											"end": 17412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17458,
											"end": 17467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17452,
											"end": 17456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17448,
											"end": 17468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17433,
											"end": 17442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17429,
											"end": 17446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17422,
											"end": 17469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17486,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 17612,
											"end": 17616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17486,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 17486,
											"end": 17617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17486,
											"end": 17617,
											"name": "tag",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 17486,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17478,
											"end": 17617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17478,
											"end": 17617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17205,
											"end": 17624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17205,
											"end": 17624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17205,
											"end": 17624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17205,
											"end": 17624,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17630,
											"end": 18049,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 17630,
											"end": 18049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17796,
											"end": 17800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17834,
											"end": 17836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17823,
											"end": 17832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17819,
											"end": 17837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17811,
											"end": 17837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17811,
											"end": 17837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17883,
											"end": 17892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17877,
											"end": 17881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17893,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17869,
											"end": 17870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17858,
											"end": 17867,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17854,
											"end": 17871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17847,
											"end": 17894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17911,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 18037,
											"end": 18041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17911,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 17911,
											"end": 18042,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17911,
											"end": 18042,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 17911,
											"end": 18042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17903,
											"end": 18042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17903,
											"end": 18042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17630,
											"end": 18049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17630,
											"end": 18049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17630,
											"end": 18049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17630,
											"end": 18049,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18055,
											"end": 18474,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 18055,
											"end": 18474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18221,
											"end": 18225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18259,
											"end": 18261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18248,
											"end": 18257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18236,
											"end": 18262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18236,
											"end": 18262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18308,
											"end": 18317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18302,
											"end": 18306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18298,
											"end": 18318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18294,
											"end": 18295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18283,
											"end": 18292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18279,
											"end": 18296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18272,
											"end": 18319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18336,
											"end": 18467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "841"
										},
										{
											"begin": 18462,
											"end": 18466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18336,
											"end": 18467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 18336,
											"end": 18467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18336,
											"end": 18467,
											"name": "tag",
											"source": 1,
											"value": "841"
										},
										{
											"begin": 18336,
											"end": 18467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18328,
											"end": 18467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18328,
											"end": 18467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18055,
											"end": 18474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18055,
											"end": 18474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18055,
											"end": 18474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18055,
											"end": 18474,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18480,
											"end": 18899,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 18480,
											"end": 18899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18646,
											"end": 18650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18684,
											"end": 18686,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18673,
											"end": 18682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18669,
											"end": 18687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18733,
											"end": 18742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18727,
											"end": 18731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18723,
											"end": 18743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18719,
											"end": 18720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18708,
											"end": 18717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18704,
											"end": 18721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18697,
											"end": 18744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18761,
											"end": 18892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 18887,
											"end": 18891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18761,
											"end": 18892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 18761,
											"end": 18892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18761,
											"end": 18892,
											"name": "tag",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 18761,
											"end": 18892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18753,
											"end": 18892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18753,
											"end": 18892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18480,
											"end": 18899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18480,
											"end": 18899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18480,
											"end": 18899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18480,
											"end": 18899,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18905,
											"end": 19324,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 18905,
											"end": 19324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19071,
											"end": 19075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19109,
											"end": 19111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19098,
											"end": 19107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19094,
											"end": 19112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19148,
											"end": 19168,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19144,
											"end": 19145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19133,
											"end": 19142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19129,
											"end": 19146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19122,
											"end": 19169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 19312,
											"end": 19316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 19186,
											"end": 19317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19186,
											"end": 19317,
											"name": "tag",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 19186,
											"end": 19317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19178,
											"end": 19317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19178,
											"end": 19317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18905,
											"end": 19324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18905,
											"end": 19324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18905,
											"end": 19324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18905,
											"end": 19324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19330,
											"end": 19749,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 19330,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19496,
											"end": 19500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19534,
											"end": 19536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19523,
											"end": 19532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19519,
											"end": 19537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19511,
											"end": 19537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19511,
											"end": 19537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19583,
											"end": 19592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19577,
											"end": 19581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19573,
											"end": 19593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19569,
											"end": 19570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19558,
											"end": 19567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19554,
											"end": 19571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19611,
											"end": 19742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 19737,
											"end": 19741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19611,
											"end": 19742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 19611,
											"end": 19742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19611,
											"end": 19742,
											"name": "tag",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 19611,
											"end": 19742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19603,
											"end": 19742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19603,
											"end": 19742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19330,
											"end": 19749,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19330,
											"end": 19749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19330,
											"end": 19749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19330,
											"end": 19749,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19755,
											"end": 20174,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 19755,
											"end": 20174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19921,
											"end": 19925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19959,
											"end": 19961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19948,
											"end": 19957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19944,
											"end": 19962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19936,
											"end": 19962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19936,
											"end": 19962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20008,
											"end": 20017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20002,
											"end": 20006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19994,
											"end": 19995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19983,
											"end": 19992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19979,
											"end": 19996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19972,
											"end": 20019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20036,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 20162,
											"end": 20166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20036,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 20036,
											"end": 20167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20036,
											"end": 20167,
											"name": "tag",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 20036,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19755,
											"end": 20174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19755,
											"end": 20174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19755,
											"end": 20174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19755,
											"end": 20174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20180,
											"end": 20599,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 20180,
											"end": 20599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20346,
											"end": 20350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20384,
											"end": 20386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20373,
											"end": 20382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20361,
											"end": 20387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20361,
											"end": 20387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20433,
											"end": 20442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20427,
											"end": 20431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20423,
											"end": 20443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20419,
											"end": 20420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20408,
											"end": 20417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20404,
											"end": 20421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20397,
											"end": 20444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20461,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 20587,
											"end": 20591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20461,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 20461,
											"end": 20592,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20461,
											"end": 20592,
											"name": "tag",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 20461,
											"end": 20592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 20592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 20592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20180,
											"end": 20599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20180,
											"end": 20599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20180,
											"end": 20599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20180,
											"end": 20599,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20605,
											"end": 21024,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 20605,
											"end": 21024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20809,
											"end": 20811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20798,
											"end": 20807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20794,
											"end": 20812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20786,
											"end": 20812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20786,
											"end": 20812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20858,
											"end": 20867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20852,
											"end": 20856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20848,
											"end": 20868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20844,
											"end": 20845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20833,
											"end": 20842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20829,
											"end": 20846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20822,
											"end": 20869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20886,
											"end": 21017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "853"
										},
										{
											"begin": 21012,
											"end": 21016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20886,
											"end": 21017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 20886,
											"end": 21017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20886,
											"end": 21017,
											"name": "tag",
											"source": 1,
											"value": "853"
										},
										{
											"begin": 20886,
											"end": 21017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20878,
											"end": 21017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20878,
											"end": 21017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20605,
											"end": 21024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20605,
											"end": 21024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20605,
											"end": 21024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20605,
											"end": 21024,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21030,
											"end": 21449,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 21030,
											"end": 21449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21196,
											"end": 21200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21234,
											"end": 21236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21223,
											"end": 21232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21219,
											"end": 21237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21211,
											"end": 21237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21211,
											"end": 21237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21283,
											"end": 21292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21277,
											"end": 21281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21273,
											"end": 21293,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21269,
											"end": 21270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21258,
											"end": 21267,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21254,
											"end": 21271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21247,
											"end": 21294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21311,
											"end": 21442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "855"
										},
										{
											"begin": 21437,
											"end": 21441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21311,
											"end": 21442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 21311,
											"end": 21442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21311,
											"end": 21442,
											"name": "tag",
											"source": 1,
											"value": "855"
										},
										{
											"begin": 21311,
											"end": 21442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21303,
											"end": 21442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21303,
											"end": 21442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21621,
											"end": 21625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21659,
											"end": 21661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21648,
											"end": 21657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21644,
											"end": 21662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 21662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 21662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21708,
											"end": 21717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21702,
											"end": 21706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21698,
											"end": 21718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21694,
											"end": 21695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21683,
											"end": 21692,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21679,
											"end": 21696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21672,
											"end": 21719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 21862,
											"end": 21866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "tag",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21728,
											"end": 21867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21728,
											"end": 21867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21880,
											"end": 22299,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 21880,
											"end": 22299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22046,
											"end": 22050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22084,
											"end": 22086,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22073,
											"end": 22082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22069,
											"end": 22087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22061,
											"end": 22087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22061,
											"end": 22087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22133,
											"end": 22142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22127,
											"end": 22131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22123,
											"end": 22143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22119,
											"end": 22120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22108,
											"end": 22117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22104,
											"end": 22121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22097,
											"end": 22144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 22287,
											"end": 22291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 22161,
											"end": 22292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22161,
											"end": 22292,
											"name": "tag",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 22161,
											"end": 22292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22153,
											"end": 22292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22153,
											"end": 22292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22299,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22305,
											"end": 22724,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 22305,
											"end": 22724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22471,
											"end": 22475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22509,
											"end": 22511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22498,
											"end": 22507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22494,
											"end": 22512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22486,
											"end": 22512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22486,
											"end": 22512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22558,
											"end": 22567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22552,
											"end": 22556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22548,
											"end": 22568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22533,
											"end": 22542,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22529,
											"end": 22546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22522,
											"end": 22569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22586,
											"end": 22717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 22712,
											"end": 22716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22586,
											"end": 22717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 22586,
											"end": 22717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22586,
											"end": 22717,
											"name": "tag",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 22586,
											"end": 22717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22578,
											"end": 22717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22578,
											"end": 22717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22305,
											"end": 22724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22305,
											"end": 22724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22305,
											"end": 22724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22305,
											"end": 22724,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22730,
											"end": 23149,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 22730,
											"end": 23149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22896,
											"end": 22900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22934,
											"end": 22936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22923,
											"end": 22932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22919,
											"end": 22937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22911,
											"end": 22937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22911,
											"end": 22937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22983,
											"end": 22992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22977,
											"end": 22981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22973,
											"end": 22993,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22969,
											"end": 22970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22958,
											"end": 22967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22954,
											"end": 22971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22947,
											"end": 22994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23011,
											"end": 23142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 23137,
											"end": 23141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23011,
											"end": 23142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 23011,
											"end": 23142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23011,
											"end": 23142,
											"name": "tag",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 23011,
											"end": 23142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23003,
											"end": 23142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23003,
											"end": 23142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 23149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 23149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 23149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 23149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23155,
											"end": 23574,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 23155,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23321,
											"end": 23325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23359,
											"end": 23361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23348,
											"end": 23357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23344,
											"end": 23362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23336,
											"end": 23362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23336,
											"end": 23362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23408,
											"end": 23417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23402,
											"end": 23406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23398,
											"end": 23418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23394,
											"end": 23395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23383,
											"end": 23392,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23379,
											"end": 23396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23372,
											"end": 23419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 23562,
											"end": 23566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 23436,
											"end": 23567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23436,
											"end": 23567,
											"name": "tag",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 23436,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23155,
											"end": 23574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23155,
											"end": 23574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23155,
											"end": 23574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23155,
											"end": 23574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23746,
											"end": 23750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23784,
											"end": 23786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23773,
											"end": 23782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23769,
											"end": 23787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23833,
											"end": 23842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23827,
											"end": 23831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23823,
											"end": 23843,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23819,
											"end": 23820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23808,
											"end": 23817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23804,
											"end": 23821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23797,
											"end": 23844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 23987,
											"end": 23991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "tag",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23853,
											"end": 23992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23853,
											"end": 23992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24005,
											"end": 24227,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 24005,
											"end": 24227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24098,
											"end": 24102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24136,
											"end": 24138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24125,
											"end": 24134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24113,
											"end": 24139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24113,
											"end": 24139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24149,
											"end": 24220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 24217,
											"end": 24218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24206,
											"end": 24215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24202,
											"end": 24219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24193,
											"end": 24199,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24149,
											"end": 24220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 24149,
											"end": 24220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24149,
											"end": 24220,
											"name": "tag",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 24149,
											"end": 24220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24005,
											"end": 24227,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24005,
											"end": 24227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24005,
											"end": 24227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24005,
											"end": 24227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24005,
											"end": 24227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24354,
											"end": 24358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24392,
											"end": 24394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24381,
											"end": 24390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24377,
											"end": 24395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24369,
											"end": 24395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24369,
											"end": 24395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24405,
											"end": 24476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 24473,
											"end": 24474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24462,
											"end": 24471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24458,
											"end": 24475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24449,
											"end": 24455,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24405,
											"end": 24476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 24405,
											"end": 24476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24405,
											"end": 24476,
											"name": "tag",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 24405,
											"end": 24476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24486,
											"end": 24558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 24554,
											"end": 24556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24543,
											"end": 24552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24539,
											"end": 24557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24530,
											"end": 24536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24486,
											"end": 24558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 24486,
											"end": 24558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24486,
											"end": 24558,
											"name": "tag",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 24486,
											"end": 24558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24233,
											"end": 24565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24652,
											"end": 24750,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 24652,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24737,
											"end": 24742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24731,
											"end": 24743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24721,
											"end": 24743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24721,
											"end": 24743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24652,
											"end": 24750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24652,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24652,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24652,
											"end": 24750,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24756,
											"end": 24855,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 24756,
											"end": 24855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24808,
											"end": 24814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24842,
											"end": 24847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24836,
											"end": 24848,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24826,
											"end": 24848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24826,
											"end": 24848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24861,
											"end": 25008,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 24861,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24962,
											"end": 24973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24999,
											"end": 25002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24984,
											"end": 25002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24984,
											"end": 25002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24861,
											"end": 25008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24861,
											"end": 25008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24861,
											"end": 25008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24861,
											"end": 25008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24861,
											"end": 25008,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25014,
											"end": 25183,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 25014,
											"end": 25183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25098,
											"end": 25109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25132,
											"end": 25138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25127,
											"end": 25130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25120,
											"end": 25139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25172,
											"end": 25176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25167,
											"end": 25170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25163,
											"end": 25177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25148,
											"end": 25177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25148,
											"end": 25177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25014,
											"end": 25183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25014,
											"end": 25183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25014,
											"end": 25183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25014,
											"end": 25183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25014,
											"end": 25183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25189,
											"end": 25494,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 25189,
											"end": 25494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25229,
											"end": 25232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25248,
											"end": 25268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 25266,
											"end": 25267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 25248,
											"end": 25268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25248,
											"end": 25268,
											"name": "tag",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 25248,
											"end": 25268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25243,
											"end": 25268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25243,
											"end": 25268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25282,
											"end": 25302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "881"
										},
										{
											"begin": 25300,
											"end": 25301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25282,
											"end": 25302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 25282,
											"end": 25302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25282,
											"end": 25302,
											"name": "tag",
											"source": 1,
											"value": "881"
										},
										{
											"begin": 25282,
											"end": 25302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25277,
											"end": 25302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25277,
											"end": 25302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25436,
											"end": 25437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25368,
											"end": 25434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25364,
											"end": 25438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25361,
											"end": 25362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25358,
											"end": 25439,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25355,
											"end": 25462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25355,
											"end": 25462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 25355,
											"end": 25462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25442,
											"end": 25460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 25442,
											"end": 25460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 25442,
											"end": 25460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25442,
											"end": 25460,
											"name": "tag",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 25442,
											"end": 25460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25355,
											"end": 25462,
											"name": "tag",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 25355,
											"end": 25462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25486,
											"end": 25487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25483,
											"end": 25484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25479,
											"end": 25488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25472,
											"end": 25488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25472,
											"end": 25488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25189,
											"end": 25494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25189,
											"end": 25494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25189,
											"end": 25494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25189,
											"end": 25494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25189,
											"end": 25494,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25500,
											"end": 25685,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 25500,
											"end": 25685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25540,
											"end": 25541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25557,
											"end": 25577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "886"
										},
										{
											"begin": 25575,
											"end": 25576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25557,
											"end": 25577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 25557,
											"end": 25577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25557,
											"end": 25577,
											"name": "tag",
											"source": 1,
											"value": "886"
										},
										{
											"begin": 25557,
											"end": 25577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25552,
											"end": 25577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25552,
											"end": 25577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25591,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "887"
										},
										{
											"begin": 25609,
											"end": 25610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25591,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 25591,
											"end": 25611,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25591,
											"end": 25611,
											"name": "tag",
											"source": 1,
											"value": "887"
										},
										{
											"begin": 25591,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25586,
											"end": 25611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25586,
											"end": 25611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25630,
											"end": 25631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25620,
											"end": 25655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 25620,
											"end": 25655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25635,
											"end": 25653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 25635,
											"end": 25653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 25635,
											"end": 25653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25635,
											"end": 25653,
											"name": "tag",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 25635,
											"end": 25653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25620,
											"end": 25655,
											"name": "tag",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 25620,
											"end": 25655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25677,
											"end": 25678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25674,
											"end": 25675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25670,
											"end": 25679,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 25665,
											"end": 25679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25665,
											"end": 25679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25500,
											"end": 25685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25500,
											"end": 25685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25500,
											"end": 25685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25500,
											"end": 25685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25500,
											"end": 25685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25691,
											"end": 26039,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 25691,
											"end": 26039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25731,
											"end": 25738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25754,
											"end": 25774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "892"
										},
										{
											"begin": 25772,
											"end": 25773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25754,
											"end": 25774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 25754,
											"end": 25774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25754,
											"end": 25774,
											"name": "tag",
											"source": 1,
											"value": "892"
										},
										{
											"begin": 25754,
											"end": 25774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25749,
											"end": 25774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25749,
											"end": 25774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25788,
											"end": 25808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "893"
										},
										{
											"begin": 25806,
											"end": 25807,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25788,
											"end": 25808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 25788,
											"end": 25808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25788,
											"end": 25808,
											"name": "tag",
											"source": 1,
											"value": "893"
										},
										{
											"begin": 25788,
											"end": 25808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25783,
											"end": 25808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25783,
											"end": 25808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 25977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25908,
											"end": 25974,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25904,
											"end": 25978,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 25901,
											"end": 25902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25898,
											"end": 25979,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25893,
											"end": 25894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25886,
											"end": 25895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25879,
											"end": 25896,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25875,
											"end": 25980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25872,
											"end": 26003,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25872,
											"end": 26003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 25872,
											"end": 26003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25983,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 25983,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 25983,
											"end": 26001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25983,
											"end": 26001,
											"name": "tag",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 25983,
											"end": 26001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25872,
											"end": 26003,
											"name": "tag",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 25872,
											"end": 26003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26031,
											"end": 26032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26028,
											"end": 26029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26024,
											"end": 26033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 26013,
											"end": 26033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26013,
											"end": 26033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25691,
											"end": 26039,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25691,
											"end": 26039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25691,
											"end": 26039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25691,
											"end": 26039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25691,
											"end": 26039,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26045,
											"end": 26236,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 26045,
											"end": 26236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26085,
											"end": 26089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26105,
											"end": 26125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 26123,
											"end": 26124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26105,
											"end": 26125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 26105,
											"end": 26125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26105,
											"end": 26125,
											"name": "tag",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 26105,
											"end": 26125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26100,
											"end": 26125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26100,
											"end": 26125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26139,
											"end": 26159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "898"
										},
										{
											"begin": 26157,
											"end": 26158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26139,
											"end": 26159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 26139,
											"end": 26159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26139,
											"end": 26159,
											"name": "tag",
											"source": 1,
											"value": "898"
										},
										{
											"begin": 26139,
											"end": 26159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26134,
											"end": 26159,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26134,
											"end": 26159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26175,
											"end": 26176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26172,
											"end": 26180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "899"
										},
										{
											"begin": 26169,
											"end": 26203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26183,
											"end": 26201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 26183,
											"end": 26201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 26183,
											"end": 26201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26183,
											"end": 26201,
											"name": "tag",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 26183,
											"end": 26201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26203,
											"name": "tag",
											"source": 1,
											"value": "899"
										},
										{
											"begin": 26169,
											"end": 26203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26228,
											"end": 26229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26225,
											"end": 26226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26221,
											"end": 26230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26213,
											"end": 26230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26213,
											"end": 26230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26236,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26242,
											"end": 26338,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 26242,
											"end": 26338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26279,
											"end": 26286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26308,
											"end": 26332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 26326,
											"end": 26331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26308,
											"end": 26332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 26308,
											"end": 26332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26308,
											"end": 26332,
											"name": "tag",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 26308,
											"end": 26332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26297,
											"end": 26332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26297,
											"end": 26332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26242,
											"end": 26338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26242,
											"end": 26338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26242,
											"end": 26338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26242,
											"end": 26338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26344,
											"end": 26434,
											"name": "tag",
											"source": 1,
											"value": "904"
										},
										{
											"begin": 26344,
											"end": 26434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26378,
											"end": 26385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26421,
											"end": 26426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26427,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26407,
											"end": 26428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26396,
											"end": 26428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26396,
											"end": 26428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26344,
											"end": 26434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26344,
											"end": 26434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26344,
											"end": 26434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26344,
											"end": 26434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26440,
											"end": 26550,
											"name": "tag",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 26440,
											"end": 26550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26491,
											"end": 26498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26520,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "908"
										},
										{
											"begin": 26538,
											"end": 26543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26520,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 26520,
											"end": 26544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26520,
											"end": 26544,
											"name": "tag",
											"source": 1,
											"value": "908"
										},
										{
											"begin": 26520,
											"end": 26544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26509,
											"end": 26544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26509,
											"end": 26544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26440,
											"end": 26550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26440,
											"end": 26550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26440,
											"end": 26550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26440,
											"end": 26550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26556,
											"end": 26667,
											"name": "tag",
											"source": 1,
											"value": "909"
										},
										{
											"begin": 26556,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26608,
											"end": 26615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26637,
											"end": 26661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 26655,
											"end": 26660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26637,
											"end": 26661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 26637,
											"end": 26661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26637,
											"end": 26661,
											"name": "tag",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 26637,
											"end": 26661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26626,
											"end": 26661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26626,
											"end": 26661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26556,
											"end": 26667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26556,
											"end": 26667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26556,
											"end": 26667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26556,
											"end": 26667,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26673,
											"end": 26790,
											"name": "tag",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 26673,
											"end": 26790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26731,
											"end": 26738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26760,
											"end": 26784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "914"
										},
										{
											"begin": 26778,
											"end": 26783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26760,
											"end": 26784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 26760,
											"end": 26784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26760,
											"end": 26784,
											"name": "tag",
											"source": 1,
											"value": "914"
										},
										{
											"begin": 26760,
											"end": 26784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26749,
											"end": 26784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26749,
											"end": 26784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26673,
											"end": 26790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26673,
											"end": 26790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26673,
											"end": 26790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26673,
											"end": 26790,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26796,
											"end": 26922,
											"name": "tag",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 26796,
											"end": 26922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26833,
											"end": 26840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26873,
											"end": 26915,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26866,
											"end": 26871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26862,
											"end": 26916,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26851,
											"end": 26916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26851,
											"end": 26916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26796,
											"end": 26922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26796,
											"end": 26922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26796,
											"end": 26922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26796,
											"end": 26922,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26928,
											"end": 27005,
											"name": "tag",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 26928,
											"end": 27005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26965,
											"end": 26972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26994,
											"end": 26999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26983,
											"end": 26999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26983,
											"end": 26999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26928,
											"end": 27005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26928,
											"end": 27005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26928,
											"end": 27005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26928,
											"end": 27005,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27011,
											"end": 27151,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 27011,
											"end": 27151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27075,
											"end": 27084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27108,
											"end": 27145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "918"
										},
										{
											"begin": 27139,
											"end": 27144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27108,
											"end": 27145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "919"
										},
										{
											"begin": 27108,
											"end": 27145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27108,
											"end": 27145,
											"name": "tag",
											"source": 1,
											"value": "918"
										},
										{
											"begin": 27108,
											"end": 27145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27095,
											"end": 27145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27095,
											"end": 27145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27157,
											"end": 27298,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 27157,
											"end": 27298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27222,
											"end": 27231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27255,
											"end": 27292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "921"
										},
										{
											"begin": 27286,
											"end": 27291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27255,
											"end": 27292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "919"
										},
										{
											"begin": 27255,
											"end": 27292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27255,
											"end": 27292,
											"name": "tag",
											"source": 1,
											"value": "921"
										},
										{
											"begin": 27255,
											"end": 27292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27242,
											"end": 27292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27242,
											"end": 27292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27157,
											"end": 27298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27157,
											"end": 27298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27157,
											"end": 27298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27157,
											"end": 27298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27304,
											"end": 27451,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 27304,
											"end": 27451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27375,
											"end": 27384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27408,
											"end": 27445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "923"
										},
										{
											"begin": 27439,
											"end": 27444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27408,
											"end": 27445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "919"
										},
										{
											"begin": 27408,
											"end": 27445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27408,
											"end": 27445,
											"name": "tag",
											"source": 1,
											"value": "923"
										},
										{
											"begin": 27408,
											"end": 27445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27395,
											"end": 27445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27395,
											"end": 27445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27304,
											"end": 27451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27304,
											"end": 27451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27304,
											"end": 27451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27304,
											"end": 27451,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27457,
											"end": 27583,
											"name": "tag",
											"source": 1,
											"value": "919"
										},
										{
											"begin": 27457,
											"end": 27583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27507,
											"end": 27516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27540,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "925"
										},
										{
											"begin": 27571,
											"end": 27576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27540,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "926"
										},
										{
											"begin": 27540,
											"end": 27577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27540,
											"end": 27577,
											"name": "tag",
											"source": 1,
											"value": "925"
										},
										{
											"begin": 27540,
											"end": 27577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27527,
											"end": 27577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27527,
											"end": 27577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27457,
											"end": 27583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27457,
											"end": 27583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27457,
											"end": 27583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27457,
											"end": 27583,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27589,
											"end": 27702,
											"name": "tag",
											"source": 1,
											"value": "926"
										},
										{
											"begin": 27589,
											"end": 27702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27639,
											"end": 27648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27672,
											"end": 27696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "928"
										},
										{
											"begin": 27690,
											"end": 27695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27672,
											"end": 27696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 27672,
											"end": 27696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27672,
											"end": 27696,
											"name": "tag",
											"source": 1,
											"value": "928"
										},
										{
											"begin": 27672,
											"end": 27696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27659,
											"end": 27696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27659,
											"end": 27696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27589,
											"end": 27702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27589,
											"end": 27702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27589,
											"end": 27702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27589,
											"end": 27702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27708,
											"end": 28015,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 27708,
											"end": 28015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27776,
											"end": 27777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "tag",
											"source": 1,
											"value": "930"
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27800,
											"end": 27806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27797,
											"end": 27798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27794,
											"end": 27807,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "932"
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27885,
											"end": 27886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27880,
											"end": 27883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27876,
											"end": 27887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27870,
											"end": 27888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27866,
											"end": 27867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27861,
											"end": 27864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27857,
											"end": 27868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27822,
											"end": 27824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27819,
											"end": 27820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27815,
											"end": 27825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27810,
											"end": 27825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27810,
											"end": 27825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "930"
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "tag",
											"source": 1,
											"value": "932"
										},
										{
											"begin": 27786,
											"end": 27899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27917,
											"end": 27923,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27914,
											"end": 27915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27911,
											"end": 27924,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 27908,
											"end": 28009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27908,
											"end": 28009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "933"
										},
										{
											"begin": 27908,
											"end": 28009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27997,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27988,
											"end": 27994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27983,
											"end": 27986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27979,
											"end": 27995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27972,
											"end": 27999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27908,
											"end": 28009,
											"name": "tag",
											"source": 1,
											"value": "933"
										},
										{
											"begin": 27908,
											"end": 28009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27757,
											"end": 28015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27708,
											"end": 28015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27708,
											"end": 28015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27708,
											"end": 28015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27708,
											"end": 28015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28021,
											"end": 28254,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 28021,
											"end": 28254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28060,
											"end": 28063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28083,
											"end": 28107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 28101,
											"end": 28106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28083,
											"end": 28107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 28083,
											"end": 28107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28083,
											"end": 28107,
											"name": "tag",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 28083,
											"end": 28107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28074,
											"end": 28107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28074,
											"end": 28107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28129,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28122,
											"end": 28127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28119,
											"end": 28196,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28116,
											"end": 28219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28116,
											"end": 28219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "936"
										},
										{
											"begin": 28116,
											"end": 28219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28199,
											"end": 28217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "937"
										},
										{
											"begin": 28199,
											"end": 28217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 28199,
											"end": 28217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28199,
											"end": 28217,
											"name": "tag",
											"source": 1,
											"value": "937"
										},
										{
											"begin": 28199,
											"end": 28217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28116,
											"end": 28219,
											"name": "tag",
											"source": 1,
											"value": "936"
										},
										{
											"begin": 28116,
											"end": 28219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28246,
											"end": 28247,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28239,
											"end": 28244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28235,
											"end": 28248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28228,
											"end": 28248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28228,
											"end": 28248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28021,
											"end": 28254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28021,
											"end": 28254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28021,
											"end": 28254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28021,
											"end": 28254,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28260,
											"end": 28440,
											"name": "tag",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 28260,
											"end": 28440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28308,
											"end": 28385,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28305,
											"end": 28306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28298,
											"end": 28386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28405,
											"end": 28409,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 28402,
											"end": 28403,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28395,
											"end": 28410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28429,
											"end": 28433,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 28426,
											"end": 28427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28419,
											"end": 28434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28446,
											"end": 28626,
											"name": "tag",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 28446,
											"end": 28626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28494,
											"end": 28571,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28491,
											"end": 28492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28484,
											"end": 28572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28591,
											"end": 28595,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 28588,
											"end": 28589,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28581,
											"end": 28596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28615,
											"end": 28619,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 28612,
											"end": 28613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28605,
											"end": 28620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28632,
											"end": 28812,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 28632,
											"end": 28812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28680,
											"end": 28757,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28677,
											"end": 28678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28670,
											"end": 28758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28777,
											"end": 28781,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 28774,
											"end": 28775,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28767,
											"end": 28782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28801,
											"end": 28805,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 28798,
											"end": 28799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28791,
											"end": 28806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28941,
											"end": 29058,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 28941,
											"end": 29058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29050,
											"end": 29051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29047,
											"end": 29048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29040,
											"end": 29052,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29064,
											"end": 29166,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 29064,
											"end": 29166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29156,
											"end": 29158,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 29152,
											"end": 29159,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 29147,
											"end": 29149,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 29140,
											"end": 29145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29136,
											"end": 29150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29132,
											"end": 29160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29064,
											"end": 29166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29064,
											"end": 29166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29064,
											"end": 29166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29064,
											"end": 29166,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29172,
											"end": 29397,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 29172,
											"end": 29397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29312,
											"end": 29346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 29308,
											"end": 29309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29300,
											"end": 29306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29296,
											"end": 29310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29289,
											"end": 29347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29381,
											"end": 29389,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29376,
											"end": 29378,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29368,
											"end": 29374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29364,
											"end": 29379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29357,
											"end": 29390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29172,
											"end": 29397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29172,
											"end": 29397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29403,
											"end": 29572,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 29403,
											"end": 29572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29543,
											"end": 29564,
											"name": "PUSH",
											"source": 1,
											"value": "506F776572206973206E6F7420656E6F75676800000000000000000000000000"
										},
										{
											"begin": 29539,
											"end": 29540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29531,
											"end": 29537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29527,
											"end": 29541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29520,
											"end": 29565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29403,
											"end": 29572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29403,
											"end": 29572,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29578,
											"end": 29755,
											"name": "tag",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 29578,
											"end": 29755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29718,
											"end": 29747,
											"name": "PUSH",
											"source": 1,
											"value": "776974686472617720506F77657220627920756E7374616B696E670000000000"
										},
										{
											"begin": 29714,
											"end": 29715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29706,
											"end": 29712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29702,
											"end": 29716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29695,
											"end": 29748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29578,
											"end": 29755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29578,
											"end": 29755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29761,
											"end": 29938,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 29761,
											"end": 29938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29901,
											"end": 29930,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 29897,
											"end": 29898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29889,
											"end": 29895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29885,
											"end": 29899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29878,
											"end": 29931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29761,
											"end": 29938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29761,
											"end": 29938,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29944,
											"end": 30169,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 29944,
											"end": 30169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30084,
											"end": 30118,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 30080,
											"end": 30081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30072,
											"end": 30078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30068,
											"end": 30082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30061,
											"end": 30119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30153,
											"end": 30161,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30148,
											"end": 30150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30140,
											"end": 30146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30136,
											"end": 30151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30129,
											"end": 30162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29944,
											"end": 30169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29944,
											"end": 30169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30175,
											"end": 30339,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 30175,
											"end": 30339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30315,
											"end": 30331,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206973207A65726F000000000000000000000000000000000000"
										},
										{
											"begin": 30311,
											"end": 30312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30303,
											"end": 30309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30299,
											"end": 30313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30292,
											"end": 30332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30339,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30345,
											"end": 30519,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 30345,
											"end": 30519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30485,
											"end": 30511,
											"name": "PUSH",
											"source": 1,
											"value": "6465706F73697420506F776572206279207374616B696E670000000000000000"
										},
										{
											"begin": 30481,
											"end": 30482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30473,
											"end": 30479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30469,
											"end": 30483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30462,
											"end": 30512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30345,
											"end": 30519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30345,
											"end": 30519,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30525,
											"end": 30745,
											"name": "tag",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 30525,
											"end": 30745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30665,
											"end": 30699,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 30661,
											"end": 30662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30653,
											"end": 30659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30649,
											"end": 30663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30642,
											"end": 30700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30734,
											"end": 30737,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30729,
											"end": 30731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30721,
											"end": 30727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30717,
											"end": 30732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30710,
											"end": 30738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30525,
											"end": 30745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30525,
											"end": 30745,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30751,
											"end": 30933,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 30751,
											"end": 30933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30891,
											"end": 30925,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 30887,
											"end": 30888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30879,
											"end": 30885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30875,
											"end": 30889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30868,
											"end": 30926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30751,
											"end": 30933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30751,
											"end": 30933,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30939,
											"end": 31109,
											"name": "tag",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 30939,
											"end": 31109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31079,
											"end": 31101,
											"name": "PUSH",
											"source": 1,
											"value": "43616C6C6572206973206E6F742066616D696C79000000000000000000000000"
										},
										{
											"begin": 31075,
											"end": 31076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31067,
											"end": 31073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31063,
											"end": 31077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31056,
											"end": 31102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30939,
											"end": 31109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30939,
											"end": 31109,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31115,
											"end": 31294,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 31115,
											"end": 31294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31255,
											"end": 31286,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 31251,
											"end": 31252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31243,
											"end": 31249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31239,
											"end": 31253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31232,
											"end": 31287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31115,
											"end": 31294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31115,
											"end": 31294,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31300,
											"end": 31468,
											"name": "tag",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 31300,
											"end": 31468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31440,
											"end": 31460,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 31436,
											"end": 31437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31428,
											"end": 31434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31424,
											"end": 31438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31417,
											"end": 31461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31300,
											"end": 31468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31300,
											"end": 31468,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31474,
											"end": 31703,
											"name": "tag",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 31474,
											"end": 31703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31614,
											"end": 31648,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 31610,
											"end": 31611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31602,
											"end": 31608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31598,
											"end": 31612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31591,
											"end": 31649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31683,
											"end": 31695,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 31678,
											"end": 31680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31670,
											"end": 31676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31666,
											"end": 31681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31659,
											"end": 31696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31474,
											"end": 31703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31474,
											"end": 31703,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31709,
											"end": 31871,
											"name": "tag",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 31709,
											"end": 31871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31849,
											"end": 31863,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206261640000000000000000000000000000000000000000"
										},
										{
											"begin": 31845,
											"end": 31846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31837,
											"end": 31843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31833,
											"end": 31847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31826,
											"end": 31864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31709,
											"end": 31871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31709,
											"end": 31871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31877,
											"end": 32118,
											"name": "tag",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 31877,
											"end": 32118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32017,
											"end": 32051,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 32013,
											"end": 32014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32005,
											"end": 32011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32001,
											"end": 32015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31994,
											"end": 32052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32086,
											"end": 32110,
											"name": "PUSH",
											"source": 1,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 32081,
											"end": 32083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32073,
											"end": 32079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32069,
											"end": 32084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32062,
											"end": 32111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31877,
											"end": 32118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31877,
											"end": 32118,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32124,
											"end": 32294,
											"name": "tag",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 32124,
											"end": 32294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32264,
											"end": 32286,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206E6F206D69677261746F72000000000000000000000000"
										},
										{
											"begin": 32260,
											"end": 32261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32252,
											"end": 32258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32248,
											"end": 32262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32241,
											"end": 32287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32124,
											"end": 32294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32124,
											"end": 32294,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32300,
											"end": 32422,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 32300,
											"end": 32422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32373,
											"end": 32397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "962"
										},
										{
											"begin": 32391,
											"end": 32396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32373,
											"end": 32397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 32373,
											"end": 32397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32373,
											"end": 32397,
											"name": "tag",
											"source": 1,
											"value": "962"
										},
										{
											"begin": 32373,
											"end": 32397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32366,
											"end": 32371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32363,
											"end": 32398,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 32353,
											"end": 32416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "963"
										},
										{
											"begin": 32353,
											"end": 32416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32412,
											"end": 32413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32409,
											"end": 32410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32402,
											"end": 32414,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32353,
											"end": 32416,
											"name": "tag",
											"source": 1,
											"value": "963"
										},
										{
											"begin": 32353,
											"end": 32416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32300,
											"end": 32422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32300,
											"end": 32422,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32428,
											"end": 32544,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 32428,
											"end": 32544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32498,
											"end": 32519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "965"
										},
										{
											"begin": 32513,
											"end": 32518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32498,
											"end": 32519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "904"
										},
										{
											"begin": 32498,
											"end": 32519,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32498,
											"end": 32519,
											"name": "tag",
											"source": 1,
											"value": "965"
										},
										{
											"begin": 32498,
											"end": 32519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32491,
											"end": 32496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32488,
											"end": 32520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 32478,
											"end": 32538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "966"
										},
										{
											"begin": 32478,
											"end": 32538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32534,
											"end": 32535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32531,
											"end": 32532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32524,
											"end": 32536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32478,
											"end": 32538,
											"name": "tag",
											"source": 1,
											"value": "966"
										},
										{
											"begin": 32478,
											"end": 32538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32428,
											"end": 32544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32428,
											"end": 32544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32550,
											"end": 32700,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 32550,
											"end": 32700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32637,
											"end": 32675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "968"
										},
										{
											"begin": 32669,
											"end": 32674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32637,
											"end": 32675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 32637,
											"end": 32675,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32637,
											"end": 32675,
											"name": "tag",
											"source": 1,
											"value": "968"
										},
										{
											"begin": 32637,
											"end": 32675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32630,
											"end": 32635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32627,
											"end": 32676,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 32617,
											"end": 32694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "969"
										},
										{
											"begin": 32617,
											"end": 32694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32690,
											"end": 32691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32687,
											"end": 32688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32680,
											"end": 32692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32617,
											"end": 32694,
											"name": "tag",
											"source": 1,
											"value": "969"
										},
										{
											"begin": 32617,
											"end": 32694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32550,
											"end": 32700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32550,
											"end": 32700,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32706,
											"end": 32858,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 32706,
											"end": 32858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32794,
											"end": 32833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "971"
										},
										{
											"begin": 32827,
											"end": 32832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32794,
											"end": 32833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "909"
										},
										{
											"begin": 32794,
											"end": 32833,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32794,
											"end": 32833,
											"name": "tag",
											"source": 1,
											"value": "971"
										},
										{
											"begin": 32794,
											"end": 32833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32787,
											"end": 32792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32784,
											"end": 32834,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 32774,
											"end": 32852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "972"
										},
										{
											"begin": 32774,
											"end": 32852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32848,
											"end": 32849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32845,
											"end": 32846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32838,
											"end": 32850,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32774,
											"end": 32852,
											"name": "tag",
											"source": 1,
											"value": "972"
										},
										{
											"begin": 32774,
											"end": 32852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32706,
											"end": 32858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32706,
											"end": 32858,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32864,
											"end": 33028,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 32864,
											"end": 33028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32958,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "974"
										},
										{
											"begin": 32997,
											"end": 33002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32958,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 32958,
											"end": 33003,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32958,
											"end": 33003,
											"name": "tag",
											"source": 1,
											"value": "974"
										},
										{
											"begin": 32958,
											"end": 33003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32951,
											"end": 32956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32948,
											"end": 33004,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 32938,
											"end": 33022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "975"
										},
										{
											"begin": 32938,
											"end": 33022,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33018,
											"end": 33019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33015,
											"end": 33016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33008,
											"end": 33020,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32938,
											"end": 33022,
											"name": "tag",
											"source": 1,
											"value": "975"
										},
										{
											"begin": 32938,
											"end": 33022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32864,
											"end": 33028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32864,
											"end": 33028,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33034,
											"end": 33156,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 33034,
											"end": 33156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33107,
											"end": 33131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "977"
										},
										{
											"begin": 33125,
											"end": 33130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33107,
											"end": 33131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 33107,
											"end": 33131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33107,
											"end": 33131,
											"name": "tag",
											"source": 1,
											"value": "977"
										},
										{
											"begin": 33107,
											"end": 33131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33100,
											"end": 33105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33097,
											"end": 33132,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 33087,
											"end": 33150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "978"
										},
										{
											"begin": 33087,
											"end": 33150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33146,
											"end": 33147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33143,
											"end": 33144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33136,
											"end": 33148,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33087,
											"end": 33150,
											"name": "tag",
											"source": 1,
											"value": "978"
										},
										{
											"begin": 33087,
											"end": 33150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33034,
											"end": 33156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33034,
											"end": 33156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DDT()": "cb3cba55",
							"DDTMasterchefAddress()": "22f58541",
							"NFTStakeAddress()": "83e32135",
							"PowerPerBlock()": "5990c569",
							"add(uint256,address,bool)": "1eaaa045",
							"addNFT(address,uint256)": "4ea2813c",
							"claimNFTReward(uint256,uint256)": "1d5fbd87",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"enterStakingCompund(uint256,address)": "cf35fddf",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPowerBalance(address)": "8c51793b",
							"leaveStaking(uint256)": "1058d281",
							"massUpdatePools()": "630b5ba1",
							"migrate(uint256)": "454b0608",
							"migrator()": "7cd07e47",
							"nftsInfo(uint256)": "61c1b724",
							"owner()": "8da5cb5b",
							"pendingPower(uint256,address)": "f3239ab5",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"powerBalance(address)": "d209db8c",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateDDTMasterchefAddress(address)": "56b4685f",
							"updateMultiplier(uint256)": "5ffe6146",
							"updateNFT(uint256,uint256)": "c11490cc",
							"updateNFTStakeAddress(address)": "0ba33a58",
							"updatePool(uint256)": "51eb05a6",
							"updatePowerPerBlock(uint256)": "3df7aff3",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DDT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_PowerPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDTMasterchefAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTStakeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PowerPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"addNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claimNFTReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"enterStakingCompund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPowerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftsInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPowerPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"powerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_DDTMasterchefAddress\",\"type\":\"address\"}],\"name\":\"updateDDTMasterchefAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"updateNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTStakeAddress\",\"type\":\"address\"}],\"name\":\"updateNFTStakeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updatePowerPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"NFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 967,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "nftsInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(NFTsInfo)963_storage)dyn_storage"
							},
							{
								"astId": 970,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 972,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "PowerPerBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 975,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 978,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "migrator",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 982,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(PoolInfo)957_storage)dyn_storage"
							},
							{
								"astId": 989,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))"
							},
							{
								"astId": 992,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 994,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 996,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "NFTStakeAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 998,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDTMasterchefAddress",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "powerBalance",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(NFTsInfo)963_storage)dyn_storage": {
								"base": "t_struct(NFTsInfo)963_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.NFTsInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)957_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)957_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)933": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)947_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTMasterChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)947_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)947_storage)"
							},
							"t_struct(NFTsInfo)963_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.NFTsInfo",
								"members": [
									{
										"astId": 960,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "NFT",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)933"
									},
									{
										"astId": 962,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "power",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)957_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.PoolInfo",
								"members": [
									{
										"astId": 950,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)286"
									},
									{
										"astId": 952,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 954,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 956,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "accPowerPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)947_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.UserInfo",
								"members": [
									{
										"astId": 944,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 946,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122059d61bcdeed2034f48c206ddc018851eee3f60e5c0c5d10dbc7586cfd59cff4364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059d61bcdeed2034f48c206ddc018851eee3f60e5c0c5d10dbc7586cfd59cff4364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xD6 SHL 0xCD 0xEE 0xD2 SUB 0x4F BASEFEE 0xC2 MOD 0xDD 0xC0 XOR DUP6 0x1E 0xEE EXTCODEHASH PUSH1 0xE5 0xC0 0xC5 0xD1 0xD 0xBC PUSH22 0x86CFD59CFF4364736F6C634300080700330000000000 ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059d61bcdeed2034f48c206ddc018851eee3f60e5c0c5d10dbc7586cfd59cff4364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xD6 SHL 0xCD 0xEE 0xD2 SUB 0x4F BASEFEE 0xC2 MOD 0xDD 0xC0 XOR DUP6 0x1E 0xEE EXTCODEHASH PUSH1 0xE5 0xC0 0xC5 0xD1 0xD 0xBC PUSH22 0x86CFD59CFF4364736F6C634300080700330000000000 ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059d61bcdeed2034f48c206ddc018851eee3f60e5c0c5d10dbc7586cfd59cff4364736f6c63430008070033",
									".code": [
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220092b08ec97db7c79b9bb982d5115caf5e56b64879cb3946c2dddb65961dadde264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092b08ec97db7c79b9bb982d5115caf5e56b64879cb3946c2dddb65961dadde264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2B ADDMOD 0xEC SWAP8 0xDB PUSH29 0x79B9BB982D5115CAF5E56B64879CB3946C2DDDB65961DADDE264736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092b08ec97db7c79b9bb982d5115caf5e56b64879cb3946c2dddb65961dadde264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2B ADDMOD 0xEC SWAP8 0xDB PUSH29 0x79B9BB982D5115CAF5E56B64879CB3946C2DDDB65961DADDE264736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220092b08ec97db7c79b9bb982d5115caf5e56b64879cb3946c2dddb65961dadde264736f6c63430008070033",
									".code": [
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x2677381df3fba847c28e7e29b0520a32c287516c572b76ec2b765ef37c40fc5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57aed7e0c25263b2750a3036f7ed96f0d241ac84987b4ac0e8e99b7e74d65ac2\",\"dweb:/ipfs/Qmak1icnbt2tUvA1JkdALK23JU32WpKa3G9Qzu4QUJW3Le\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/NFTMasterChef.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC20": [
							286
						],
						"IERC721": [
							933
						],
						"IMigratorChef": [
							927
						],
						"NFTMasterChef": [
							2475
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "138:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "452:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "471:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "463:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "463:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "499:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "504:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "491:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "557:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "550:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:0"
									},
									"scope": 194,
									"src": "385:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "908:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "930:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "933:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "936:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "919:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "574:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "850:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "862:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "854:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "873:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:9:0"
									},
									"scope": 194,
									"src": "841:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1409:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1436:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1420:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1468:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1460:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1472:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1460:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1497:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1490:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "985:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1323:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1327:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1363:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1349:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:9:0"
									},
									"scope": 194,
									"src": "1314:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1824:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2060:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2056:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2068:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2083:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2123:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2115:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2115:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2151:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2151:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2163:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2143:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2219:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2212:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1514:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1766:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1778:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1770:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1789:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1781:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:9:0"
									},
									"scope": 194,
									"src": "1757:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2763:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2781:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2774:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2236:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2705:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2728:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2720:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:9:0"
									},
									"scope": 194,
									"src": "2696:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3453:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3531:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3578:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3570:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3570:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3694:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3687:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2836:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3367:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3390:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3407:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3393:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3370:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:9:0"
									},
									"scope": 194,
									"src": "3358:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4227:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4252:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4255:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4245:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4238:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3711:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4169:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4192:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4184:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4218:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4217:9:0"
									},
									"scope": 194,
									"src": "4160:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4904:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4931:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4915:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "4962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "4955:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4298:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4818:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4830:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4858:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4844:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:9:0"
									},
									"scope": 194,
									"src": "4809:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "130:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "4992:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5006:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5089:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:9:0"
									},
									"scope": 286,
									"src": "5080:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5143:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5232:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:9:0"
									},
									"scope": 286,
									"src": "5223:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5299:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5529:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5546:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5538:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5537:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:6:0"
									},
									"scope": 286,
									"src": "5520:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5605:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5890:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 286,
									"src": "5881:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "5972:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6649:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6700:6:0"
									},
									"scope": 286,
									"src": "6633:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6724:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:6:0"
									},
									"scope": 286,
									"src": "6715:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6794:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7113:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7169:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7161:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7125:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7228:6:0"
									},
									"scope": 286,
									"src": "7104:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7243:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7418:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7443:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7427:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7465:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7449:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7426:57:0"
									},
									"src": "7412:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7492:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 277,
									"name": "Approval",
									"nameLocation": "7655:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7664:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7663:63:0"
									},
									"src": "7649:78:0"
								},
								{
									"anonymous": false,
									"id": 285,
									"name": "Mint",
									"nameLocation": "7741:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7746:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7786:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:60:0"
									},
									"src": "7735:71:0"
								}
							],
							"scope": 2476,
							"src": "4982:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7821:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8887:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9116:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9116:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9116:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9109:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7836:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8830:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8840:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8881:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8880:6:0"
									},
									"scope": 578,
									"src": "8821:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10153:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10180:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10172:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10172:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10172:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10172:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10205:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10164:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10164:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10256:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10251:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10299:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10269:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10269:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10291:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10269:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10269:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10250:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10330:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10313:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10313:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9155:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10091:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10117:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10101:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10100:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10153:0:0"
									},
									"scope": 578,
									"src": "10082:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11250:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11295:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11268:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11268:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11261:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10407:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11170:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11212:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11199:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11182:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11236:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11235:14:0"
									},
									"scope": 578,
									"src": "11161:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11717:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11735:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11735:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11728:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11344:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11575:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11636:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11587:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11703:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11702:14:0"
									},
									"scope": 578,
									"src": "11566:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12317:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12378:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12335:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12335:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12328:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11803:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12179:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12236:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12272:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12200:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12303:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12302:14:0"
									},
									"scope": 578,
									"src": "12170:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12870:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12897:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12889:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12889:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12889:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12889:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12921:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12881:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12881:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "12992:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "12981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12981:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13001:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12973:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "12973:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13052:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13047:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13074:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13061:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13114:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13088:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13088:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13088:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13088:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13046:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13137:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13137:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13130:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12438:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12695:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12765:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12752:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12788:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12780:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12818:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12804:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12716:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12856:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12855:14:0"
									},
									"scope": 578,
									"src": "12686:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13481:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13532:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13499:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13499:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13492:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13204:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13390:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13408:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13467:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13466:14:0"
									},
									"scope": 578,
									"src": "13381:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "13934:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "13964:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13953:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13973:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13945:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "13945:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14031:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14026:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14053:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14040:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14040:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14067:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14025:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14146:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14108:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14108:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14101:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13588:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13781:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13877:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13863:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13799:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13920:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13919:14:0"
									},
									"scope": 578,
									"src": "13772:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14451:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14504:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14469:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14469:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14462:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14175:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14363:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14400:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14383:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14437:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14436:14:0"
									},
									"scope": 578,
									"src": "14354:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14907:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "14937:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14926:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14946:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14918:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14918:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15006:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15001:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15028:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15015:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15062:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15000:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15123:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15085:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15085:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15078:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14562:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14757:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14813:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14777:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14893:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14892:14:0"
									},
									"scope": 578,
									"src": "14748:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15536:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15610:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15696:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15696:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15696:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16011:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16037:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16030:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16030:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16030:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15692:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15719:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15842:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15865:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15894:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15888:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15888:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15869:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15938:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "15942:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15934:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15934:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "15955:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15927:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15927:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15927:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15894:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15942:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15833:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15547:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15560:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15575:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15152:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15381:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15444:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15431:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15479:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15465:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15397:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15522:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15521:14:0"
									},
									"scope": 578,
									"src": "15372:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "7813:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16099:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16122:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16116:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16134:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16256:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16317:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16317:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16317:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16342:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16346:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16294:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16294:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16294:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16267:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16267:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16267:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16159:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16182:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16182:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16213:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16205:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16256:0:0"
									},
									"scope": 797,
									"src": "16150:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16502:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16533:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16563:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16563:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16563:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16598:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16602:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16540:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16540:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16513:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16513:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16513:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16378:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16405:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16459:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16451:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16394:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16502:0:0"
									},
									"scope": 797,
									"src": "16369:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "16996:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17259:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17249:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17290:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17282:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17282:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17282:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17297:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17266:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17266:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17266:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17265:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17249:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17326:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17227:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17227:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17454:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17454:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17454:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17487:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17431:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17431:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17431:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17404:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17404:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17404:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16625:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16895:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16917:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16917:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16917:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16906:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16996:0:0"
									},
									"scope": 797,
									"src": "16886:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17630:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17649:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17641:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17688:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17680:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17680:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17664:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17664:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17664:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17641:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17772:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17772:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17772:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17796:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17805:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17749:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17749:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17749:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17722:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17722:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17722:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17519:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17551:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17540:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17630:0:0"
									},
									"scope": 797,
									"src": "17510:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "17955:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "17966:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "17999:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "17991:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18038:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18030:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18030:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18030:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18014:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18014:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18014:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17991:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18076:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18092:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18076:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18099:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18068:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18068:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18068:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18166:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18158:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18181:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18196:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18181:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18158:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18266:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18266:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18290:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18299:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18243:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18243:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18243:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18216:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18216:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18216:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17844:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17883:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17876:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17865:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17955:0:0"
									},
									"scope": 797,
									"src": "17835:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18793:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19160:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19147:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19207:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19173:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19173:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19173:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19173:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19147:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19257:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19257:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19253:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19280:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19354:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19367:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19367:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19343:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19343:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19343:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19375:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19335:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19335:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18340:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18732:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18752:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18752:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18766:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18751:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18793:0:0"
									},
									"scope": 797,
									"src": "18723:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2476,
							"src": "16091:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19464:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19541:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19559:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19559:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19552:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19488:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19498:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19531:9:0"
									},
									"scope": 816,
									"src": "19479:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19652:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19670:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19663:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19594:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19636:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19635:16:0"
									},
									"scope": 816,
									"src": "19585:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "19446:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19722:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19722:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19711:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19753:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19737:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19737:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19774:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19811:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19795:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19794:57:0"
									},
									"src": "19768:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "19973:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "19984:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19984:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "19984:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19860:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19970:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19973:0:0"
									},
									"scope": 917,
									"src": "19959:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20160:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20171:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20032:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20114:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20119:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20150:9:0"
									},
									"scope": 917,
									"src": "20105:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20306:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20325:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20325:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20336:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20336:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20325:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20350:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20317:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20317:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20396:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20200:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20294:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20303:2:0"
									},
									"src": "20285:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20810:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20821:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20821:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20821:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20413:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20800:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20800:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20765:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20782:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20810:0:0"
									},
									"scope": 917,
									"src": "20756:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21084:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21103:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21123:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21115:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21115:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21103:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21127:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21095:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21095:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21179:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21179:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20867:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21074:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21074:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21023:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21049:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21041:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21040:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21084:0:0"
									},
									"scope": 917,
									"src": "21014:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21438:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21457:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21449:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21449:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21449:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21485:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21485:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21485:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21549:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21518:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21518:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21513:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21223:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21384:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21402:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21438:0:0"
									},
									"scope": 917,
									"src": "21375:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "19693:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21583:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21613:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21620:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21653:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21653:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21652:8:0"
									},
									"scope": 927,
									"src": "21604:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2476,
							"src": "21573:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "IERC721",
							"nameLocation": "21678:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17e5883c",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNFT",
									"nameLocation": "21702:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "21712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21711:12:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21732:0:0"
									},
									"scope": 933,
									"src": "21693:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2476,
							"src": "21668:68:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "22137:7:0"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "22137:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2475,
							"linearizedBaseContracts": [
								2475,
								917,
								816
							],
							"name": "NFTMasterChef",
							"nameLocation": "22120:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 938,
									"libraryName": {
										"id": 936,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "22158:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22152:27:0",
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22171:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 942,
									"libraryName": {
										"id": 939,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "22191:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22185:27:0",
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "22205:6:0"
										},
										"referencedDeclaration": 286,
										"src": "22205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTMasterChef.UserInfo",
									"id": 947,
									"members": [
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "22280:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22272:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22272:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "22350:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22342:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22342:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "22252:8:0",
									"nodeType": "StructDefinition",
									"scope": 2475,
									"src": "22245:794:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.PoolInfo",
									"id": 957,
									"members": [
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "23106:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23099:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$286",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 949,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 948,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 286,
													"src": "23099:6:0"
												},
												"referencedDeclaration": 286,
												"src": "23099:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "23165:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23157:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23157:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "23279:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23271:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23271:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "accPowerPerShare",
											"nameLocation": "23367:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23359:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23359:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "23079:8:0",
									"nodeType": "StructDefinition",
									"scope": 2475,
									"src": "23072:375:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.NFTsInfo",
									"id": 963,
									"members": [
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "NFT",
											"nameLocation": "23490:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23482:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$933",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 959,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 958,
													"name": "IERC721",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 933,
													"src": "23482:7:0"
												},
												"referencedDeclaration": 933,
												"src": "23482:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "23512:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23504:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23504:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTsInfo",
									"nameLocation": "23462:8:0",
									"nodeType": "StructDefinition",
									"scope": 2475,
									"src": "23455:70:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61c1b724",
									"id": 967,
									"mutability": "mutable",
									"name": "nftsInfo",
									"nameLocation": "23551:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23533:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.NFTsInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 965,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 964,
												"name": "NFTsInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "23533:8:0"
											},
											"referencedDeclaration": 963,
											"src": "23533:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
												"typeString": "struct NFTMasterChef.NFTsInfo"
											}
										},
										"id": 966,
										"nodeType": "ArrayTypeName",
										"src": "23533:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.NFTsInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3cba55",
									"id": 970,
									"mutability": "mutable",
									"name": "DDT",
									"nameLocation": "23607:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23593:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 969,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 968,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "23593:6:0"
										},
										"referencedDeclaration": 286,
										"src": "23593:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5990c569",
									"id": 972,
									"mutability": "mutable",
									"name": "PowerPerBlock",
									"nameLocation": "23672:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23657:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 975,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "23755:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23740:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23740:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 974,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23774:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 978,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "23901:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23880:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 977,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 976,
											"name": "IMigratorChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "23880:13:0"
										},
										"referencedDeclaration": 927,
										"src": "23880:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 982,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "23961:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23943:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 980,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 979,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "23943:8:0"
											},
											"referencedDeclaration": 957,
											"src": "23943:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
												"typeString": "struct NFTMasterChef.PoolInfo"
											}
										},
										"id": 981,
										"nodeType": "ArrayTypeName",
										"src": "23943:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 989,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "24081:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24025:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
									},
									"typeName": {
										"id": 988,
										"keyType": {
											"id": 983,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24033:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24025:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
										},
										"valueType": {
											"id": 987,
											"keyType": {
												"id": 984,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24052:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24044:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
												"typeString": "mapping(address => struct NFTMasterChef.UserInfo)"
											},
											"valueType": {
												"id": 986,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 985,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 947,
													"src": "24063:8:0"
												},
												"referencedDeclaration": 947,
												"src": "24063:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
													"typeString": "struct NFTMasterChef.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 992,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "24199:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24184:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24184:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24217:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 994,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "24291:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24276:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24276:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83e32135",
									"id": 996,
									"mutability": "mutable",
									"name": "NFTStakeAddress",
									"nameLocation": "24325:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24310:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 995,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24310:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "22f58541",
									"id": 998,
									"mutability": "mutable",
									"name": "DDTMasterchefAddress",
									"nameLocation": "24362:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24347:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 997,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24347:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d209db8c",
									"id": 1002,
									"mutability": "mutable",
									"name": "powerBalance",
									"nameLocation": "24426:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24391:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1001,
										"keyType": {
											"id": 999,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24399:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24391:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1000,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24410:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1010,
									"name": "Deposit",
									"nameLocation": "24453:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24461:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24499:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24483:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24512:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24504:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24460:59:0"
									},
									"src": "24447:73:0"
								},
								{
									"anonymous": false,
									"id": 1018,
									"name": "Withdraw",
									"nameLocation": "24532:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24557:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24579:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24563:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24540:59:0"
									},
									"src": "24526:74:0"
								},
								{
									"anonymous": false,
									"id": 1026,
									"name": "EmergencyWithdraw",
									"nameLocation": "24612:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24656:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24640:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24687:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24671:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24709:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24629:93:0"
									},
									"src": "24606:117:0"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "24835:358:0",
										"statements": [
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "24846:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "_DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "24852:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "24846:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "24846:10:0"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "24867:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "_PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "24883:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24867:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "24867:30:0"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "24908:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1045,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24921:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24908:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "24908:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1052,
																	"name": "DDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "25025:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25055:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																{
																	"id": 1054,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "25091:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25134:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1051,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "24992:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "24992:155:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1048,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "24978:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "24978:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24978:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "24978:170:0"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "25161:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25179:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "25161:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "25161:22:0"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_DDT",
												"nameLocation": "24760:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24753:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1027,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "24753:6:0"
													},
													"referencedDeclaration": 286,
													"src": "24753:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_PowerPerBlock",
												"nameLocation": "24783:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24775:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "24816:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24808:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24742:92:0"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24835:0:0"
									},
									"scope": 2475,
									"src": "24731:462:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "25274:53:0",
										"statements": [
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "NFTStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "25285:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_NFTStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "25303:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25285:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "25285:34:0"
											}
										]
									},
									"functionSelector": "0ba33a58",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1068,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25265:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25265:9:0"
										}
									],
									"name": "updateNFTStakeAddress",
									"nameLocation": "25210:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "_NFTStakeAddress",
												"nameLocation": "25240:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "25232:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25231:26:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25274:0:0"
									},
									"scope": 2475,
									"src": "25201:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "25418:63:0",
										"statements": [
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "DDTMasterchefAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "25429:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1084,
														"name": "_DDTMasterchefAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "25452:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25429:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "25429:44:0"
											}
										]
									},
									"functionSelector": "56b4685f",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25409:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25409:9:0"
										}
									],
									"name": "updateDDTMasterchefAddress",
									"nameLocation": "25344:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_DDTMasterchefAddress",
												"nameLocation": "25379:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "25371:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25370:31:0"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25418:0:0"
									},
									"scope": 2475,
									"src": "25335:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "25560:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1095,
														"name": "powerBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "25578:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1097,
													"indexExpression": {
														"id": 1096,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "25591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25578:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1098,
												"nodeType": "Return",
												"src": "25571:28:0"
											}
										]
									},
									"functionSelector": "8c51793b",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPowerBalance",
									"nameLocation": "25498:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "25514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25513:17:0"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "25551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25550:9:0"
									},
									"scope": 2475,
									"src": "25489:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "25678:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1114,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "25750:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1115,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "25780:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1113,
																"name": "NFTsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "25717:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_NFTsInfo_$963_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.NFTsInfo storage pointer)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"NFT",
																"power"
															],
															"nodeType": "FunctionCall",
															"src": "25717:85:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														],
														"expression": {
															"id": 1110,
															"name": "nftsInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "25689:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "25689:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$_t_struct$_NFTsInfo_$963_storage_$returns$__$bound_to$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.NFTsInfo storage ref[] storage pointer,struct NFTMasterChef.NFTsInfo storage ref)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25689:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "25689:124:0"
											}
										]
									},
									"functionSelector": "4ea2813c",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1107,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25668:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25668:9:0"
										}
									],
									"name": "addNFT",
									"nameLocation": "25624:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "25639:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "25631:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1101,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "25631:7:0"
													},
													"referencedDeclaration": 933,
													"src": "25631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$933",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25653:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "25645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25630:30:0"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25678:0:0"
									},
									"scope": 2475,
									"src": "25615:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "25896:49:0",
										"statements": [
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1129,
																"name": "nftsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "25907:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
																}
															},
															"id": 1131,
															"indexExpression": {
																"id": 1130,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "25916:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25907:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "25907:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1133,
														"name": "_power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "25931:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25907:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "25907:30:0"
											}
										]
									},
									"functionSelector": "c11490cc",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1127,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1126,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25886:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25886:9:0"
										}
									],
									"name": "updateNFT",
									"nameLocation": "25838:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25856:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "25848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25871:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "25863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25847:31:0"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25896:0:0"
									},
									"scope": 2475,
									"src": "25829:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "26013:1208:0",
										"statements": [
											{
												"assignments": [
													1146
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "26041:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26024:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1145,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1144,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "26024:8:0"
															},
															"referencedDeclaration": 957,
															"src": "26024:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"initialValue": {
													"baseExpression": {
														"id": 1147,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "26048:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1149,
													"indexExpression": {
														"id": 1148,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "26057:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26048:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26024:38:0"
											},
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "26090:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26073:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1152,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1151,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "26073:8:0"
															},
															"referencedDeclaration": 947,
															"src": "26073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1154,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "26097:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1156,
														"indexExpression": {
															"id": 1155,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "26106:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26097:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1159,
													"indexExpression": {
														"expression": {
															"id": 1157,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "26112:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "26112:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26097:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26073:50:0"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "26142:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26134:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"expression": {
														"id": 1163,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "26161:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "26161:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26134:48:0"
											},
											{
												"assignments": [
													1167
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "26201:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26193:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1166,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1173,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26243:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26235:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26235:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26235:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1168,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "26212:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "26212:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "26212:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26212:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26193:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1177,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "26264:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "26264:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1179,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "26279:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "26279:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26264:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1182,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "26303:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26315:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "26303:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26264:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "26260:354:0",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "26318:296:0",
													"statements": [
														{
															"assignments": [
																1187
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1187,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "26341:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1222,
																	"src": "26333:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1186,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26333:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1194,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1189,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "26368:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "26368:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1191,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "26390:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "26390:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1188,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "26354:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26354:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26333:70:0"
														},
														{
															"assignments": [
																1196
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1196,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "26426:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1222,
																	"src": "26418:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1195,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26418:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1208,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1206,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "26495:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1202,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1146,
																					"src": "26474:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "26474:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1199,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "26455:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1197,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "26440:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "26440:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26440:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "26440:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26440:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "26440:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26440:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26418:93:0"
														},
														{
															"expression": {
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "26526:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1217,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "26592:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1214,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26582:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1212,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1196,
																							"src": "26566:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1213,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "26566:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26566:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "26566:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26566:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1210,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "26545:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "26545:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26545:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26526:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1221,
															"nodeType": "ExpressionStatement",
															"src": "26526:76:0"
														}
													]
												}
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "26632:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26624:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1235,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "26690:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "26690:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26680:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1229,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "26658:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1226,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1153,
																				"src": "26642:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "26642:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "26642:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26642:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "26642:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26642:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "26642:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26642:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26624:82:0"
											},
											{
												"assignments": [
													1241
												],
												"declarations": [
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "26734:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26717:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
															"typeString": "struct NFTMasterChef.NFTsInfo"
														},
														"typeName": {
															"id": 1240,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1239,
																"name": "NFTsInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 963,
																"src": "26717:8:0"
															},
															"referencedDeclaration": 963,
															"src": "26717:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"baseExpression": {
														"id": 1242,
														"name": "nftsInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "26740:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
														}
													},
													"id": 1244,
													"indexExpression": {
														"id": 1243,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "26749:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26740:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
														"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26717:38:0"
											},
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "26774:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26766:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1255,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1250,
																"name": "powerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "26794:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1253,
															"indexExpression": {
																"expression": {
																	"id": 1251,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "26807:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "26807:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26794:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1248,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "26782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "26782:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26782:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26766:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1256,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "26833:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1257,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "26841:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "26841:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26833:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "IfStatement",
												"src": "26830:188:0",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "26851:167:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1260,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "26869:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26877:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26869:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1268,
															"nodeType": "IfStatement",
															"src": "26866:63:0",
															"trueBody": {
																"id": 1267,
																"nodeType": "Block",
																"src": "26879:50:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26911:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1263,
																				"name": "leaveStaking",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2405,
																				"src": "26898:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26898:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1266,
																		"nodeType": "ExpressionStatement",
																		"src": "26898:15:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1269,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "26946:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26954:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26946:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1278,
															"nodeType": "IfStatement",
															"src": "26943:64:0",
															"trueBody": {
																"id": 1277,
																"nodeType": "Block",
																"src": "26956:51:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1273,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "26984:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26989:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1272,
																				"name": "withdraw",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2004,
																				"src": "26975:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26975:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1276,
																		"nodeType": "ExpressionStatement",
																		"src": "26975:16:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1282,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "27036:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "27036:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1284,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "27048:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1287,
																"indexExpression": {
																	"expression": {
																		"id": 1285,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27061:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27061:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27048:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27036:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f776572206973206e6f7420656e6f756768",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27074:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															},
															"value": "Power is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27028:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "27028:68:0"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1292,
															"name": "powerBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "27107:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1295,
														"indexExpression": {
															"expression": {
																"id": 1293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27120:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27120:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27107:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1301,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "27163:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "27163:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1296,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "27134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1299,
																"indexExpression": {
																	"expression": {
																		"id": 1297,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27147:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27147:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27134:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "27134:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27134:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27107:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "27107:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27202:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27202:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1306,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "27184:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 960,
															"src": "27184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$933",
																"typeString": "contract IERC721"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "createNFT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "27184:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27184:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "27184:29:0"
											}
										]
									},
									"functionSelector": "1d5fbd87",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimNFTReward",
									"nameLocation": "25962:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "25977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "26000:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "25992:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25976:29:0"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26013:0:0"
									},
									"scope": 2475,
									"src": "25953:1268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "27298:54:0",
										"statements": [
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1323,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "27309:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1324,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "27328:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27309:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "27309:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1320,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27288:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27288:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "27238:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "27263:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "27255:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27254:26:0"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27298:0:0"
									},
									"scope": 2475,
									"src": "27229:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "27414:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1333,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "27432:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "27432:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1335,
												"nodeType": "Return",
												"src": "27425:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "27369:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27379:2:0"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "27405:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27404:9:0"
									},
									"scope": 2475,
									"src": "27360:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "27712:472:0",
										"statements": [
											{
												"condition": {
													"id": 1349,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1344,
													"src": "27727:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "27723:61:0",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "27740:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1350,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "27755:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27755:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "27755:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "27802:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "27794:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1357,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "27820:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "27820:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1359,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "27835:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27820:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1363,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "27863:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "27820:53:0",
													"trueExpression": {
														"expression": {
															"id": 1361,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "27848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "27848:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27794:79:0"
											},
											{
												"expression": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1366,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "27884:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1369,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "27922:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1367,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "27902:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "27902:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27902:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27884:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "27884:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1377,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "28010:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1378,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "28049:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1379,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "28096:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28148:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1376,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "27973:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "27973:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1373,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "27945:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "27945:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27945:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "27945:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27702:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27702:9:0"
										}
									],
									"name": "add",
									"nameLocation": "27633:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "27646:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "27638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "27666:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "27659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1340,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "27659:6:0"
													},
													"referencedDeclaration": 286,
													"src": "27659:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "27681:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "27676:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27676:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27636:58:0"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27712:0:0"
									},
									"scope": 2475,
									"src": "27624:560:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "28365:221:0",
										"statements": [
											{
												"condition": {
													"id": 1396,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "28380:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1401,
												"nodeType": "IfStatement",
												"src": "28376:61:0",
												"trueBody": {
													"id": 1400,
													"nodeType": "Block",
													"src": "28393:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1397,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "28408:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28408:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1399,
															"nodeType": "ExpressionStatement",
															"src": "28408:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1402,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "28447:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1411,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "28516:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1405,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "28485:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																					"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1407,
																			"indexExpression": {
																				"id": 1406,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1387,
																				"src": "28494:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28485:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																				"typeString": "struct NFTMasterChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "28485:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1403,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "28465:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "28465:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28465:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "28465:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28465:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28447:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "28447:81:0"
											},
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1415,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "28539:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1417,
															"indexExpression": {
																"id": 1416,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "28548:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28539:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "28539:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1419,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "28567:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28539:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "28539:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28355:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28355:9:0"
										}
									],
									"name": "set",
									"nameLocation": "28290:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "28295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "28317:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "28309:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "28335:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "28330:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28293:54:0"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28365:0:0"
									},
									"scope": 2475,
									"src": "28281:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "28725:39:0",
										"statements": [
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1431,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "28736:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1432,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "28747:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "28736:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "28736:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1428,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28715:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28715:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "28671:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "28697:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "28683:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "IMigratorChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "28683:13:0"
													},
													"referencedDeclaration": 927,
													"src": "28683:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28682:25:0"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28725:0:0"
									},
									"scope": 2475,
									"src": "28662:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "28925:453:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1444,
																		"name": "migrator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "28952:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	],
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28944:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1442,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28944:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28944:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28973:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28965:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28965:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28965:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28944:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a206e6f206d69677261746f72",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28977:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															},
															"value": "migrate: no migrator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															}
														],
														"id": 1441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28936:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "28936:64:0"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "29028:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29011:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1455,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1454,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "29011:8:0"
															},
															"referencedDeclaration": 957,
															"src": "29011:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"baseExpression": {
														"id": 1457,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29035:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1459,
													"indexExpression": {
														"id": 1458,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "29044:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29035:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29011:38:0"
											},
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "lpToken",
														"nameLocation": "29067:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29060:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1462,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1461,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "29060:6:0"
															},
															"referencedDeclaration": 286,
															"src": "29060:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"expression": {
														"id": 1464,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "29077:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lpToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 950,
													"src": "29077:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29060:29:0"
											},
											{
												"assignments": [
													1468
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "29108:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29100:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1473,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29140:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29132:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29132:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29132:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1469,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "29114:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "29114:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29114:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29100:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1482,
																	"name": "migrator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "29185:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29177:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29177:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29177:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "29196:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1477,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "29157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 674,
														"src": "29157:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29157:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "29157:43:0"
											},
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "newLpToken",
														"nameLocation": "29218:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29211:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1488,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1487,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "29211:6:0"
															},
															"referencedDeclaration": 286,
															"src": "29211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"arguments": [
														{
															"id": 1492,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "29248:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														],
														"expression": {
															"id": 1490,
															"name": "migrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "29231:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMigratorChef_$927",
																"typeString": "contract IMigratorChef"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "migrate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "29231:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$286_$returns$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20) external returns (contract IERC20)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29231:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29211:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1496,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "29275:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1501,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "29311:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29303:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29303:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29303:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1497,
																		"name": "newLpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "29282:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 208,
																	"src": "29282:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29282:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29275:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a20626164",
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29319:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															},
															"value": "migrate: bad"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															}
														],
														"id": 1495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29267:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "29267:67:0"
											},
											{
												"expression": {
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1508,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "29345:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lpToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "29345:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1511,
														"name": "newLpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "29360:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "29345:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "29345:25:0"
											}
										]
									},
									"functionSelector": "454b0608",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "28896:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "28904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28903:14:0"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28925:0:0"
									},
									"scope": 2475,
									"src": "28887:491:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "29535:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1529,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "29573:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1526,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "29562:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1524,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "29554:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "29554:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29554:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "29554:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29554:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1531,
												"nodeType": "Return",
												"src": "29547:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "29463:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "29485:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "29477:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "29500:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "29492:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29476:28:0"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "29526:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29525:9:0"
									},
									"scope": 2475,
									"src": "29454:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "29745:685:0",
										"statements": [
											{
												"assignments": [
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "29773:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29756:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1542,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "29756:8:0"
															},
															"referencedDeclaration": 957,
															"src": "29756:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1548,
												"initialValue": {
													"baseExpression": {
														"id": 1545,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29780:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1547,
													"indexExpression": {
														"id": 1546,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "29789:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29780:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29756:38:0"
											},
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "29822:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29805:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1550,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1549,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "29805:8:0"
															},
															"referencedDeclaration": 947,
															"src": "29805:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1552,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "29829:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1554,
														"indexExpression": {
															"id": 1553,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "29838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29829:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1556,
													"indexExpression": {
														"id": 1555,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "29844:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29829:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29805:45:0"
											},
											{
												"assignments": [
													1559
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "29869:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29861:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1562,
												"initialValue": {
													"expression": {
														"id": 1560,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "29888:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "29888:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29861:48:0"
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "29928:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29920:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1570,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29970:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29962:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29962:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29962:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1565,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "29939:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "29939:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "29939:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29939:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29920:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1574,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29991:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "29991:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1576,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "30006:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "30006:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29991:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1579,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "30030:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30042:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "30030:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29991:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1620,
												"nodeType": "IfStatement",
												"src": "29987:354:0",
												"trueBody": {
													"id": 1619,
													"nodeType": "Block",
													"src": "30045:296:0",
													"statements": [
														{
															"assignments": [
																1584
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1584,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "30068:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1619,
																	"src": "30060:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1583,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1591,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1586,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "30095:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "30095:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1588,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "30117:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "30117:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1585,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "30081:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30081:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30060:70:0"
														},
														{
															"assignments": [
																1593
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1593,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "30153:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1619,
																	"src": "30145:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1592,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1605,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1603,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "30222:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1599,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1544,
																					"src": "30201:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1600,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "30201:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1596,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "30182:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1594,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1584,
																						"src": "30167:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "30167:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30167:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "30167:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30167:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "30167:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30167:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30145:93:0"
														},
														{
															"expression": {
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1606,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "30253:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1614,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1564,
																					"src": "30319:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30309:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1609,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1593,
																							"src": "30293:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "30293:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30293:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "30293:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30293:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1607,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "30272:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "30272:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30272:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30253:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1618,
															"nodeType": "ExpressionStatement",
															"src": "30253:76:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1630,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "30406:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "30406:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30396:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1624,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "30374:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1621,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "30358:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "30358:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "30358:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30358:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "30358:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30358:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "30358:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30358:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1633,
												"nodeType": "Return",
												"src": "30351:71:0"
											}
										]
									},
									"functionSelector": "f3239ab5",
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPower",
									"nameLocation": "29672:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "29693:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29685:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "29707:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29699:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29684:29:0"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29737:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29736:9:0"
									},
									"scope": 2475,
									"src": "29663:767:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "30547:146:0",
										"statements": [
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "30566:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "30558:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1642,
												"initialValue": {
													"expression": {
														"id": 1640,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30575:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30575:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30558:32:0"
											},
											{
												"body": {
													"id": 1657,
													"nodeType": "Block",
													"src": "30644:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1654,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "30670:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1653,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "30659:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30659:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1656,
															"nodeType": "ExpressionStatement",
															"src": "30659:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1647,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "30623:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1648,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "30629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30623:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1658,
												"initializationExpression": {
													"assignments": [
														1644
													],
													"declarations": [
														{
															"constant": false,
															"id": 1644,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "30614:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1658,
															"src": "30606:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1643,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30606:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1646,
													"initialValue": {
														"hexValue": "30",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "30606:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "30637:5:0",
														"subExpression": {
															"id": 1650,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "30639:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1652,
													"nodeType": "ExpressionStatement",
													"src": "30637:5:0"
												},
												"nodeType": "ForStatement",
												"src": "30601:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "30522:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30537:2:0"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30547:0:0"
									},
									"scope": 2475,
									"src": "30513:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "30810:649:0",
										"statements": [
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "30838:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "30821:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1666,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1665,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "30821:8:0"
															},
															"referencedDeclaration": 957,
															"src": "30821:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"baseExpression": {
														"id": 1668,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30845:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1670,
													"indexExpression": {
														"id": 1669,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "30854:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30845:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30821:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1672,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30874:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1674,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "30890:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "30890:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30874:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "30870:75:0",
												"trueBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "30912:33:0",
													"statements": [
														{
															"functionReturnParameters": 1664,
															"id": 1677,
															"nodeType": "Return",
															"src": "30927:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "30963:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "30955:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1690,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1687,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31005:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1685,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30997:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30997:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1682,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "30974:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "30974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "30974:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30974:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30955:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "31026:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31038:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31026:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "31022:102:0",
												"trueBody": {
													"id": 1702,
													"nodeType": "Block",
													"src": "31041:83:0",
													"statements": [
														{
															"expression": {
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1694,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "31056:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "31056:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1697,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "31079:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "31079:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31056:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "31056:35:0"
														},
														{
															"functionReturnParameters": 1664,
															"id": 1701,
															"nodeType": "Return",
															"src": "31106:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "31142:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "31134:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1707,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "31169:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "31169:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1709,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31191:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31191:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1706,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "31155:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31155:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31134:70:0"
											},
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "PowerReward",
														"nameLocation": "31223:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "31215:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1726,
												"initialValue": {
													"arguments": [
														{
															"id": 1724,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "31292:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1720,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "31271:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "31271:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1717,
																			"name": "PowerPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "31252:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1715,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "31237:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "31237:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31237:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "31237:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31237:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "31237:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31237:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31215:93:0"
											},
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1727,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "31319:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accPowerPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "31319:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1738,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "31395:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31385:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1733,
																				"name": "PowerReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1714,
																				"src": "31369:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "31369:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31369:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "31369:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31369:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1730,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "31343:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																		"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accPowerPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "31343:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31343:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31343:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31319:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "31319:86:0"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1743,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "31416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "31416:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1746,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31439:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31439:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31416:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "31416:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "30778:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "30797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "30789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30788:14:0"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30810:0:0"
									},
									"scope": 2475,
									"src": "30769:690:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "31584:788:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1759,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "31604:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31612:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31604:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6465706f73697420506f776572206279207374616b696e67",
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31615:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															},
															"value": "deposit Power by staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															}
														],
														"id": 1758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31595:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "31595:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "31661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31661:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31674:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31653:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "31653:38:0"
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "31721:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "31704:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1773,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1772,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "31704:8:0"
															},
															"referencedDeclaration": 957,
															"src": "31704:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1778,
												"initialValue": {
													"baseExpression": {
														"id": 1775,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "31728:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1777,
													"indexExpression": {
														"id": 1776,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "31737:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31728:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31704:38:0"
											},
											{
												"assignments": [
													1781
												],
												"declarations": [
													{
														"constant": false,
														"id": 1781,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "31770:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "31753:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1780,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1779,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "31753:8:0"
															},
															"referencedDeclaration": 947,
															"src": "31753:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1782,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "31777:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1784,
														"indexExpression": {
															"id": 1783,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "31786:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31777:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1787,
													"indexExpression": {
														"expression": {
															"id": 1785,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31792:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "31792:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31777:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31753:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1790,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "31825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "31814:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31814:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "31814:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1793,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "31845:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31845:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31859:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31845:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "31841:263:0",
												"trueBody": {
													"id": 1831,
													"nodeType": "Block",
													"src": "31862:242:0",
													"statements": [
														{
															"assignments": [
																1798
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1798,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "31885:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1831,
																	"src": "31877:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1797,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31877:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1812,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1809,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "31948:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "31948:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31938:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1802,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1774,
																							"src": "31911:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 1803,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "31911:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1799,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1781,
																							"src": "31895:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1800,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "31895:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "31895:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31895:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "31895:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31895:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "31895:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31895:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31877:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1813,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "31982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31992:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31982:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1830,
															"nodeType": "IfStatement",
															"src": "31979:114:0",
															"trueBody": {
																"id": 1829,
																"nodeType": "Block",
																"src": "31994:99:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1816,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "32013:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1819,
																				"indexExpression": {
																					"expression": {
																						"id": 1817,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "32026:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "32026:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "32013:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1825,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1798,
																						"src": "32069:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 1820,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "32040:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1823,
																						"indexExpression": {
																							"expression": {
																								"id": 1821,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "32053:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1822,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "32053:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "32040:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1824,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "32040:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "32040:37:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32013:64:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1828,
																		"nodeType": "ExpressionStatement",
																		"src": "32013:64:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1840,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32152:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32152:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32144:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32144:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1845,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32165:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1843,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32165:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32165:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1847,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "32180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1833,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "32114:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "32114:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 630,
														"src": "32114:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32114:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "32114:74:0"
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1850,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "32199:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32199:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1856,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "32229:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1853,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "32213:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32213:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "32213:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32213:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32199:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "32199:38:0"
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1860,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "32248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "32248:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32309:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1866,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "32282:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "32282:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1863,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "32266:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "32266:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "32266:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32266:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "32266:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32266:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32248:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "32248:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1875,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32338:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32338:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1877,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "32350:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1878,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "32356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "32330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32330:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "EmitStatement",
												"src": "32325:39:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "31538:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "31554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "31546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "31568:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "31560:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31545:31:0"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31584:0:0"
									},
									"scope": 2475,
									"src": "31529:843:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "32480:731:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1890,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "32502:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32502:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32513:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															},
															"value": "withdraw Power by unstaking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															}
														],
														"id": 1889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32493:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "32493:50:0"
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "32573:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "32556:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1897,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1896,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "32556:8:0"
															},
															"referencedDeclaration": 957,
															"src": "32556:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1902,
												"initialValue": {
													"baseExpression": {
														"id": 1899,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "32580:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1901,
													"indexExpression": {
														"id": 1900,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "32589:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32580:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32556:38:0"
											},
											{
												"assignments": [
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32622:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "32605:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1904,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1903,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "32605:8:0"
															},
															"referencedDeclaration": 947,
															"src": "32605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1912,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1906,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "32629:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1908,
														"indexExpression": {
															"id": 1907,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "32638:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32629:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1911,
													"indexExpression": {
														"expression": {
															"id": 1909,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32644:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "32644:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32629:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32605:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1914,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "32674:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32674:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1916,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "32689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32674:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32698:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32666:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32666:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "32666:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1922,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "32741:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "32730:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32730:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "32730:16:0"
											},
											{
												"assignments": [
													1926
												],
												"declarations": [
													{
														"constant": false,
														"id": 1926,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "32765:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "32757:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1925,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1940,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1937,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "32828:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "32828:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32818:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1930,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1898,
																				"src": "32791:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "32791:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1927,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1905,
																				"src": "32775:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "32775:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "32775:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32775:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "32775:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32775:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "32775:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32775:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32757:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1941,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "32858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32858:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1958,
												"nodeType": "IfStatement",
												"src": "32855:106:0",
												"trueBody": {
													"id": 1957,
													"nodeType": "Block",
													"src": "32870:91:0",
													"statements": [
														{
															"expression": {
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1944,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "32885:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1947,
																	"indexExpression": {
																		"expression": {
																			"id": 1945,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32898:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32898:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32885:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1953,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "32941:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1948,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "32912:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1951,
																			"indexExpression": {
																				"expression": {
																					"id": 1949,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "32925:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "32925:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32912:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "32912:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32912:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32885:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1956,
															"nodeType": "ExpressionStatement",
															"src": "32885:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1959,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "32971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32971:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1965,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "33001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1962,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "32985:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32985:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "32985:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32985:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32971:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "32971:38:0"
											},
											{
												"expression": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1969,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "33020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "33020:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33081:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1975,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "33054:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "33054:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1972,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "33038:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "33038:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "33038:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33038:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "33038:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33038:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33020:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "33020:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1990,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "33131:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "33131:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33123:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33123:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "33144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1983,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "33097:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "33097:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "33097:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33097:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "33097:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1997,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33177:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33177:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "33189:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2000,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "33195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1996,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "33168:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33168:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "EmitStatement",
												"src": "33163:40:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "32433:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32450:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "32442:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "32464:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "32456:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32441:31:0"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32480:0:0"
									},
									"scope": 2475,
									"src": "32424:787:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "33310:800:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2010,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "33329:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33339:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33329:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33342:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 2009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33321:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "33321:38:0"
											},
											{
												"assignments": [
													2018
												],
												"declarations": [
													{
														"constant": false,
														"id": 2018,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33387:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "33370:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2017,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2016,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "33370:8:0"
															},
															"referencedDeclaration": 957,
															"src": "33370:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"baseExpression": {
														"id": 2019,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "33394:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2021,
													"indexExpression": {
														"hexValue": "30",
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33403:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33394:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33370:35:0"
											},
											{
												"assignments": [
													2025
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33433:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "33416:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2024,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2023,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "33416:8:0"
															},
															"referencedDeclaration": 947,
															"src": "33416:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2035,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2026,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "33440:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2028,
														"indexExpression": {
															"hexValue": "30",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33440:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2034,
													"indexExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2031,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33460:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33460:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33452:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2029,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33452:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33452:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33440:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33416:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33504:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2036,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "33493:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33493:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "ExpressionStatement",
												"src": "33493:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2040,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "33521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "33521:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33521:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2085,
												"nodeType": "IfStatement",
												"src": "33517:282:0",
												"trueBody": {
													"id": 2084,
													"nodeType": "Block",
													"src": "33538:261:0",
													"statements": [
														{
															"assignments": [
																2045
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2045,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "33561:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2084,
																	"src": "33553:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2044,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33553:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2059,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2056,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2025,
																			"src": "33624:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "33624:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33614:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2049,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2018,
																							"src": "33587:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 2050,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "33587:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2046,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2025,
																							"src": "33571:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2047,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "33571:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2048,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "33571:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33571:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "33571:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33571:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "33571:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33571:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33553:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2060,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "33658:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33668:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "33658:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2083,
															"nodeType": "IfStatement",
															"src": "33655:133:0",
															"trueBody": {
																"id": 2082,
																"nodeType": "Block",
																"src": "33671:117:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2063,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "33690:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2069,
																				"indexExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2066,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "33711:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2067,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "33711:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2065,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33703:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2064,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33703:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33703:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "33690:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2078,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2045,
																						"src": "33764:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2070,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "33726:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2076,
																						"indexExpression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 2073,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "33747:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 2074,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "33747:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2072,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "33739:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2071,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "33739:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2075,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33739:19:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33726:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2077,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "33726:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33726:46:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33690:82:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2081,
																		"nodeType": "ExpressionStatement",
																		"src": "33690:82:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2086,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "33812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33822:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33812:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "IfStatement",
												"src": "33809:170:0",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "33825:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2096,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "33878:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "33878:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33870:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2094,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33870:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33870:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2101,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "33899:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33891:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2099,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33891:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33891:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2103,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "33906:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2089,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "33840:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "33840:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "33840:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33840:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2105,
															"nodeType": "ExpressionStatement",
															"src": "33840:74:0"
														},
														{
															"expression": {
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2106,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "33929:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "33929:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2112,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "33959:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2109,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2025,
																				"src": "33943:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "33943:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33943:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33943:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33929:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2115,
															"nodeType": "ExpressionStatement",
															"src": "33929:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2118,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "33989:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "33989:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34050:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2124,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "34023:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "34023:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2121,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2025,
																			"src": "34007:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "34007:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "34007:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34007:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "34007:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34007:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33989:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "33989:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2133,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34079:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34079:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34091:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2136,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "34094:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2132,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "34071:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34071:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2138,
												"nodeType": "EmitStatement",
												"src": "34066:36:0"
											}
										]
									},
									"functionSelector": "41441d3b",
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "33273:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "33294:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "33286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33285:17:0"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33310:0:0"
									},
									"scope": 2475,
									"src": "33264:846:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "34189:903:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2148,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "34208:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34218:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34208:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34221:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 2147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34200:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "34200:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2155,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "34257:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "34257:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2157,
																	"name": "NFTStakeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "34271:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "34257:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2159,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "34290:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "34290:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2161,
																	"name": "DDTMasterchefAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "34304:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "34290:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "34257:67:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742066616d696c79",
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34326:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																"typeString": "literal_string \"Caller is not family\""
															},
															"value": "Caller is not family"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																"typeString": "literal_string \"Caller is not family\""
															}
														],
														"id": 2154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34249:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "34249:100:0"
											},
											{
												"assignments": [
													2169
												],
												"declarations": [
													{
														"constant": false,
														"id": 2169,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34377:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2286,
														"src": "34360:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2168,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2167,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "34360:8:0"
															},
															"referencedDeclaration": 957,
															"src": "34360:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2173,
												"initialValue": {
													"baseExpression": {
														"id": 2170,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "34384:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2172,
													"indexExpression": {
														"hexValue": "30",
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34384:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34360:35:0"
											},
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "34423:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2286,
														"src": "34406:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2175,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2174,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "34406:8:0"
															},
															"referencedDeclaration": 947,
															"src": "34406:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2185,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2177,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "34430:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2179,
														"indexExpression": {
															"hexValue": "30",
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34439:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34430:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2184,
													"indexExpression": {
														"arguments": [
															{
																"id": 2182,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "34450:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "34442:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34442:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34430:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34406:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34492:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2186,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "34481:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34481:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "34481:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2190,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "34509:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "34509:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34523:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34509:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2233,
												"nodeType": "IfStatement",
												"src": "34505:278:0",
												"trueBody": {
													"id": 2232,
													"nodeType": "Block",
													"src": "34526:257:0",
													"statements": [
														{
															"assignments": [
																2195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2195,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "34549:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2232,
																	"src": "34541:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34541:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2209,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2206,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "34612:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "34612:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 2203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34602:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2199,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2169,
																							"src": "34575:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 2200,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "34575:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2196,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2176,
																							"src": "34559:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2197,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "34559:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "34559:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34559:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "34559:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34559:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "34559:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34559:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34541:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2210,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "34646:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34656:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "34646:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2231,
															"nodeType": "IfStatement",
															"src": "34643:129:0",
															"trueBody": {
																"id": 2230,
																"nodeType": "Block",
																"src": "34659:113:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2213,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "34678:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2218,
																				"indexExpression": {
																					"arguments": [
																						{
																							"id": 2216,
																							"name": "_account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2144,
																							"src": "34699:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "34691:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2214,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "34691:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2217,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34691:17:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "34678:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2226,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2195,
																						"src": "34748:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2219,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "34712:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2224,
																						"indexExpression": {
																							"arguments": [
																								{
																									"id": 2222,
																									"name": "_account",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2144,
																									"src": "34733:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "34725:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2220,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "34725:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2223,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "34725:17:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "34712:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "34712:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34712:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "34678:78:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2229,
																		"nodeType": "ExpressionStatement",
																		"src": "34678:78:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2234,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2142,
														"src": "34796:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34806:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34796:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "IfStatement",
												"src": "34793:170:0",
												"trueBody": {
													"id": 2264,
													"nodeType": "Block",
													"src": "34809:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2244,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "34862:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "34862:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34854:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2242,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34854:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34854:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2249,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "34883:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34875:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2247,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34875:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34875:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2251,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "34890:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2237,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2169,
																			"src": "34824:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "34824:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "34824:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34824:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2253,
															"nodeType": "ExpressionStatement",
															"src": "34824:74:0"
														},
														{
															"expression": {
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2254,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "34913:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "34913:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2260,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "34943:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2257,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2176,
																				"src": "34927:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "34927:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "34927:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34927:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34913:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2263,
															"nodeType": "ExpressionStatement",
															"src": "34913:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2266,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "34973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "34973:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35034:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2272,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2169,
																			"src": "35007:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "35007:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2269,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "34991:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "34991:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "34991:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34991:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "34991:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34991:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34973:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "34973:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2281,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "35063:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35073:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2283,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "35076:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2280,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "35055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35055:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "EmitStatement",
												"src": "35050:34:0"
											}
										]
									},
									"functionSelector": "cf35fddf",
									"id": 2287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStakingCompund",
									"nameLocation": "34127:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "34155:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "34147:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "34172:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "34164:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34146:35:0"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34189:0:0"
									},
									"scope": 2475,
									"src": "34118:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2404,
										"nodeType": "Block",
										"src": "35190:701:0",
										"statements": [
											{
												"assignments": [
													2294
												],
												"declarations": [
													{
														"constant": false,
														"id": 2294,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35218:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "35201:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2293,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2292,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "35201:8:0"
															},
															"referencedDeclaration": 957,
															"src": "35201:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2298,
												"initialValue": {
													"baseExpression": {
														"id": 2295,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "35225:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2297,
													"indexExpression": {
														"hexValue": "30",
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35234:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35225:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35201:35:0"
											},
											{
												"assignments": [
													2301
												],
												"declarations": [
													{
														"constant": false,
														"id": 2301,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35264:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "35247:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2300,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2299,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "35247:8:0"
															},
															"referencedDeclaration": 947,
															"src": "35247:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2308,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2302,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "35271:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2304,
														"indexExpression": {
															"hexValue": "30",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35280:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35271:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2307,
													"indexExpression": {
														"expression": {
															"id": 2305,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35283:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35283:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35271:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35247:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2310,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "35313:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "35313:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2312,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "35328:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35313:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35337:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 2309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35305:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2316,
												"nodeType": "ExpressionStatement",
												"src": "35305:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35380:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2317,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "35369:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35369:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "35369:13:0"
											},
											{
												"assignments": [
													2322
												],
												"declarations": [
													{
														"constant": false,
														"id": 2322,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "35401:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "35393:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2336,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2333,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "35464:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "35464:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35454:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2326,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2294,
																				"src": "35427:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "35427:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2323,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2301,
																				"src": "35411:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "35411:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "35411:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35411:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "35411:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35411:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "35411:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35411:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35393:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2337,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "35494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35504:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35494:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2354,
												"nodeType": "IfStatement",
												"src": "35491:107:0",
												"trueBody": {
													"id": 2353,
													"nodeType": "Block",
													"src": "35507:91:0",
													"statements": [
														{
															"expression": {
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2340,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "35522:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2343,
																	"indexExpression": {
																		"expression": {
																			"id": 2341,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "35535:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "35535:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "35522:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2349,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2322,
																			"src": "35578:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2344,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "35549:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2347,
																			"indexExpression": {
																				"expression": {
																					"id": 2345,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "35562:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "35562:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35549:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "35549:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35549:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35522:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2352,
															"nodeType": "ExpressionStatement",
															"src": "35522:64:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2355,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "35611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35621:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35611:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "35608:151:0",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "35624:135:0",
													"statements": [
														{
															"expression": {
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2358,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "35639:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "35639:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2364,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "35669:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2361,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2301,
																				"src": "35653:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "35653:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "35653:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35653:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35639:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2367,
															"nodeType": "ExpressionStatement",
															"src": "35639:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2375,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "35726:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "35726:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35718:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2373,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35718:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35718:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2378,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2289,
																		"src": "35739:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2368,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "35692:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "35692:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 604,
																	"src": "35692:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35692:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2380,
															"nodeType": "ExpressionStatement",
															"src": "35692:55:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2383,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "35769:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "35769:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35830:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2389,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "35803:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "35803:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2386,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "35787:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "35787:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "35787:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35787:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "35787:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35787:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35769:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2396,
												"nodeType": "ExpressionStatement",
												"src": "35769:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2398,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35860:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35860:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35872:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2401,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2289,
															"src": "35875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2397,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "35851:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35851:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2403,
												"nodeType": "EmitStatement",
												"src": "35846:37:0"
											}
										]
									},
									"functionSelector": "1058d281",
									"id": 2405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nameLocation": "35153:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "35174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "35166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35165:17:0"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35190:0:0"
									},
									"scope": 2475,
									"src": "35144:747:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2461,
										"nodeType": "Block",
										"src": "36018:308:0",
										"statements": [
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "36046:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2461,
														"src": "36029:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2411,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2410,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "36029:8:0"
															},
															"referencedDeclaration": 957,
															"src": "36029:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2416,
												"initialValue": {
													"baseExpression": {
														"id": 2413,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "36053:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2415,
													"indexExpression": {
														"id": 2414,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "36062:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "36053:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36029:38:0"
											},
											{
												"assignments": [
													2419
												],
												"declarations": [
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "36095:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2461,
														"src": "36078:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2418,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2417,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "36078:8:0"
															},
															"referencedDeclaration": 947,
															"src": "36078:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2426,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2420,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "36102:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2422,
														"indexExpression": {
															"id": 2421,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "36111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "36102:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2425,
													"indexExpression": {
														"expression": {
															"id": 2423,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "36117:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "36117:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "36102:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36078:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2434,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "36173:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "36173:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36165:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2432,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36165:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36165:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2437,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2419,
																"src": "36186:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "36186:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2427,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "36139:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "36139:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "36139:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36139:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2440,
												"nodeType": "ExpressionStatement",
												"src": "36139:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2442,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "36232:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "36232:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2444,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "36244:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2445,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2419,
																"src": "36250:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "36250:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2441,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "36214:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36214:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2448,
												"nodeType": "EmitStatement",
												"src": "36209:53:0"
											},
											{
												"expression": {
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2449,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "36273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "36273:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36287:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36273:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "36273:15:0"
											},
											{
												"expression": {
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2455,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "36299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "36299:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36299:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2460,
												"nodeType": "ExpressionStatement",
												"src": "36299:19:0"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "35979:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "36005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "35997:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35996:14:0"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36018:0:0"
									},
									"scope": 2475,
									"src": "35970:356:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "36403:44:0",
										"statements": [
											{
												"expression": {
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2469,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "36414:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2470,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2464,
														"src": "36430:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36414:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2472,
												"nodeType": "ExpressionStatement",
												"src": "36414:25:0"
											}
										]
									},
									"functionSelector": "3df7aff3",
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2466,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "36393:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36393:9:0"
										}
									],
									"name": "updatePowerPerBlock",
									"nameLocation": "36347:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "36375:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "36367:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36366:19:0"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36403:0:0"
									},
									"scope": 2475,
									"src": "36338:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2476,
							"src": "22111:14339:0",
							"usedErrors": []
						}
					],
					"src": "103:36347:0"
				},
				"id": 0
			}
		}
	}
}
{
	"id": "b060ecfb7187aa262a7e2d784d1dd25e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    // function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r\n    //     uint256 totalSupply = lpAddress.totalSupply();\r\n\r\n    //     uint256[] memory price0 = routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]);\r\n\r\n    //     return totalSupply;\r\n    // }\r\n\r\n    function totalSupply(IERC20 lpAddress) external view returns(uint256){\r\n        return lpAddress.totalSupply();\r\n    }\r\n\r\n    function token0(IERC20 lpAddress) external view returns(address){\r\n        return lpAddress.token0();\r\n    }\r\n\r\n    function token1(IERC20 lpAddress) external view returns(address){\r\n        return lpAddress.token1();\r\n    }\r\n\r\n    function price(Router routerAddress, address token) external view returns(uint){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220783bef99ea162b4f6eef0b89f7ec7b1d66496d7003d3b6badb2dfc3eea25f77d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220783bef99ea162b4f6eef0b89f7ec7b1d66496d7003d3b6badb2dfc3eea25f77d64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x3BEF99EA162B4F6EEF0B89F7EC7B1D66496D7003D3B6BADB2D 0xFC RETURNDATACOPY 0xEA 0x25 0xF7 PUSH30 0x64736F6C6343000807003300000000000000000000000000000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220783bef99ea162b4f6eef0b89f7ec7b1d66496d7003d3b6badb2dfc3eea25f77d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x3BEF99EA162B4F6EEF0B89F7EC7B1D66496D7003D3B6BADB2D 0xFC RETURNDATACOPY 0xEA 0x25 0xF7 PUSH30 0x64736F6C6343000807003300000000000000000000000000000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220783bef99ea162b4f6eef0b89f7ec7b1d66496d7003d3b6badb2dfc3eea25f77d64736f6c63430008070033",
									".code": [
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x55961508579ca583694a3020e46edd617a48ca8e762a9ba967fd16daa0edf358\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae981e57c14464ae49de172f470feed65d84e2628879594596eeedbf2415649\",\"dweb:/ipfs/QmRv6nvndeDYcMxLTzViv35ZcidBy2ELeBdSAn9dEKMzzj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x55961508579ca583694a3020e46edd617a48ca8e762a9ba967fd16daa0edf358\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae981e57c14464ae49de172f470feed65d84e2628879594596eeedbf2415649\",\"dweb:/ipfs/QmRv6nvndeDYcMxLTzViv35ZcidBy2ELeBdSAn9dEKMzzj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8846:10017  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8892:8934  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8963:9005  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9029:9048  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9012:9048  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8846:10017  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8846:10017  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2b00490d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x37823795\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x76bf39a3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe4dc2aa4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9739:10014  function price(Router routerAddress, address token) external view returns(uint){\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9623:9731  function token1(IERC20 lpAddress) external view returns(address){\r... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9507:9615  function token0(IERC20 lpAddress) external view returns(address){\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9381:9499  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9739:10014  function price(Router routerAddress, address token) external view returns(uint){\r... */\n    tag_12:\n        /* \"contracts/LpPrice.sol\":9813:9817  uint */\n      0x00\n        /* \"contracts/LpPrice.sol\":9829:9850  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":9867:9868  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":9853:9869  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n    tag_36:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_39:\n      pop\n        /* \"contracts/LpPrice.sol\":9829:9869  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9890:9895  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":9880:9884  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9885:9886  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9880:9887  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_40\n      jumpi\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n    tag_40:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9880:9895  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9916:9920  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9906:9910  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9911:9912  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":9906:9913  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_43\n      jumpi\n      tag_44\n      tag_42\n      jump\t// in\n    tag_44:\n    tag_43:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9906:9920  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9941:9945  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9931:9935  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9936:9937  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9931:9938  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_45\n      jumpi\n      tag_46\n      tag_42\n      jump\t// in\n    tag_46:\n    tag_45:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9931:9945  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9963:9976  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9963:9990  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":9991:9997  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":9998:10002  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":9963:10003  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/LpPrice.sol\":10004:10005  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9963:10006  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_55\n      tag_42\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":9956:10006  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9739:10014  function price(Router routerAddress, address token) external view returns(uint){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9623:9731  function token1(IERC20 lpAddress) external view returns(address){\r... */\n    tag_18:\n        /* \"contracts/LpPrice.sol\":9679:9686  address */\n      0x00\n        /* \"contracts/LpPrice.sol\":9705:9714  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9705:9721  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":9705:9723  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/LpPrice.sol\":9698:9723  return lpAddress.token1() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9623:9731  function token1(IERC20 lpAddress) external view returns(address){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_22:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9507:9615  function token0(IERC20 lpAddress) external view returns(address){\r... */\n    tag_26:\n        /* \"contracts/LpPrice.sol\":9563:9570  address */\n      0x00\n        /* \"contracts/LpPrice.sol\":9589:9598  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9589:9605  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9589:9607  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_66:\n        /* \"contracts/LpPrice.sol\":9582:9607  return lpAddress.token0() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9507:9615  function token0(IERC20 lpAddress) external view returns(address){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_29:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9381:9499  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_33:\n        /* \"contracts/LpPrice.sol\":9442:9449  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9468:9477  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9468:9489  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":9468:9491  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"contracts/LpPrice.sol\":9461:9491  return lpAddress.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9381:9499  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_74:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_76\n        /* \"#utility.yul\":172:236   */\n      tag_77\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":156:237   */\n      tag_79\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":361:504   */\n    tag_80:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_83:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_86\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_83)\n    tag_85:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:913   */\n    tag_88:\n        /* \"#utility.yul\":820:825   */\n      0x00\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":845:865   */\n      calldataload\n        /* \"#utility.yul\":836:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":874:907   */\n      tag_90\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":874:907   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":774:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":919:1062   */\n    tag_92:\n        /* \"#utility.yul\":976:981   */\n      0x00\n        /* \"#utility.yul\":1007:1013   */\n      dup2\n        /* \"#utility.yul\":1001:1014   */\n      mload\n        /* \"#utility.yul\":992:1014   */\n      swap1\n      pop\n        /* \"#utility.yul\":1023:1056   */\n      tag_94\n        /* \"#utility.yul\":1050:1055   */\n      dup2\n        /* \"#utility.yul\":1023:1056   */\n      tag_91\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":919:1062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1470   */\n    tag_95:\n        /* \"#utility.yul\":1167:1172   */\n      0x00\n        /* \"#utility.yul\":1216:1219   */\n      dup3\n        /* \"#utility.yul\":1209:1213   */\n      0x1f\n        /* \"#utility.yul\":1201:1207   */\n      dup4\n        /* \"#utility.yul\":1197:1214   */\n      add\n        /* \"#utility.yul\":1193:1220   */\n      slt\n        /* \"#utility.yul\":1183:1305   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1224:1303   */\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1183:1305   */\n    tag_97:\n        /* \"#utility.yul\":1334:1340   */\n      dup2\n        /* \"#utility.yul\":1328:1341   */\n      mload\n        /* \"#utility.yul\":1359:1464   */\n      tag_100\n        /* \"#utility.yul\":1460:1463   */\n      dup5\n        /* \"#utility.yul\":1452:1458   */\n      dup3\n        /* \"#utility.yul\":1445:1449   */\n      0x20\n        /* \"#utility.yul\":1437:1443   */\n      dup7\n        /* \"#utility.yul\":1433:1450   */\n      add\n        /* \"#utility.yul\":1359:1464   */\n      tag_74\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1350:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1173:1470   */\n      pop\n        /* \"#utility.yul\":1085:1470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1476:1641   */\n    tag_101:\n        /* \"#utility.yul\":1535:1540   */\n      0x00\n        /* \"#utility.yul\":1573:1579   */\n      dup2\n        /* \"#utility.yul\":1560:1580   */\n      calldataload\n        /* \"#utility.yul\":1551:1580   */\n      swap1\n      pop\n        /* \"#utility.yul\":1589:1635   */\n      tag_103\n        /* \"#utility.yul\":1629:1634   */\n      dup2\n        /* \"#utility.yul\":1589:1635   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1476:1641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1647:1814   */\n    tag_105:\n        /* \"#utility.yul\":1707:1712   */\n      0x00\n        /* \"#utility.yul\":1745:1751   */\n      dup2\n        /* \"#utility.yul\":1732:1752   */\n      calldataload\n        /* \"#utility.yul\":1723:1752   */\n      swap1\n      pop\n        /* \"#utility.yul\":1761:1808   */\n      tag_107\n        /* \"#utility.yul\":1802:1807   */\n      dup2\n        /* \"#utility.yul\":1761:1808   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1647:1814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1820:1963   */\n    tag_87:\n        /* \"#utility.yul\":1877:1882   */\n      0x00\n        /* \"#utility.yul\":1908:1914   */\n      dup2\n        /* \"#utility.yul\":1902:1915   */\n      mload\n        /* \"#utility.yul\":1893:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1924:1957   */\n      tag_110\n        /* \"#utility.yul\":1951:1956   */\n      dup2\n        /* \"#utility.yul\":1924:1957   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1820:1963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1969:2320   */\n    tag_61:\n        /* \"#utility.yul\":2039:2045   */\n      0x00\n        /* \"#utility.yul\":2088:2090   */\n      0x20\n        /* \"#utility.yul\":2076:2085   */\n      dup3\n        /* \"#utility.yul\":2067:2074   */\n      dup5\n        /* \"#utility.yul\":2063:2086   */\n      sub\n        /* \"#utility.yul\":2059:2091   */\n      slt\n        /* \"#utility.yul\":2056:2175   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":2094:2173   */\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2056:2175   */\n    tag_113:\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2239:2303   */\n      tag_116\n        /* \"#utility.yul\":2295:2302   */\n      dup5\n        /* \"#utility.yul\":2286:2292   */\n      dup3\n        /* \"#utility.yul\":2275:2284   */\n      dup6\n        /* \"#utility.yul\":2271:2293   */\n      add\n        /* \"#utility.yul\":2239:2303   */\n      tag_92\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2229:2303   */\n      swap2\n      pop\n        /* \"#utility.yul\":2185:2313   */\n      pop\n        /* \"#utility.yul\":1969:2320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2326:2880   */\n    tag_53:\n        /* \"#utility.yul\":2421:2427   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2458:2467   */\n      dup3\n        /* \"#utility.yul\":2449:2456   */\n      dup5\n        /* \"#utility.yul\":2445:2468   */\n      sub\n        /* \"#utility.yul\":2441:2473   */\n      slt\n        /* \"#utility.yul\":2438:2557   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":2476:2555   */\n      tag_119\n      tag_115\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2438:2557   */\n    tag_118:\n        /* \"#utility.yul\":2617:2618   */\n      0x00\n        /* \"#utility.yul\":2606:2615   */\n      dup3\n        /* \"#utility.yul\":2602:2619   */\n      add\n        /* \"#utility.yul\":2596:2620   */\n      mload\n        /* \"#utility.yul\":2647:2665   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2639:2645   */\n      dup2\n        /* \"#utility.yul\":2636:2666   */\n      gt\n        /* \"#utility.yul\":2633:2750   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":2669:2748   */\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2633:2750   */\n    tag_120:\n        /* \"#utility.yul\":2774:2863   */\n      tag_123\n        /* \"#utility.yul\":2855:2862   */\n      dup5\n        /* \"#utility.yul\":2846:2852   */\n      dup3\n        /* \"#utility.yul\":2835:2844   */\n      dup6\n        /* \"#utility.yul\":2831:2853   */\n      add\n        /* \"#utility.yul\":2774:2863   */\n      tag_95\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2764:2863   */\n      swap2\n      pop\n        /* \"#utility.yul\":2567:2873   */\n      pop\n        /* \"#utility.yul\":2326:2880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2886:3241   */\n    tag_17:\n        /* \"#utility.yul\":2958:2964   */\n      0x00\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2995:3004   */\n      dup3\n        /* \"#utility.yul\":2986:2993   */\n      dup5\n        /* \"#utility.yul\":2982:3005   */\n      sub\n        /* \"#utility.yul\":2978:3010   */\n      slt\n        /* \"#utility.yul\":2975:3094   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":3013:3092   */\n      tag_126\n      tag_115\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2975:3094   */\n    tag_125:\n        /* \"#utility.yul\":3133:3134   */\n      0x00\n        /* \"#utility.yul\":3158:3224   */\n      tag_127\n        /* \"#utility.yul\":3216:3223   */\n      dup5\n        /* \"#utility.yul\":3207:3213   */\n      dup3\n        /* \"#utility.yul\":3196:3205   */\n      dup6\n        /* \"#utility.yul\":3192:3214   */\n      add\n        /* \"#utility.yul\":3158:3224   */\n      tag_101\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3148:3224   */\n      swap2\n      pop\n        /* \"#utility.yul\":3104:3234   */\n      pop\n        /* \"#utility.yul\":2886:3241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3749   */\n    tag_11:\n        /* \"#utility.yul\":3329:3335   */\n      0x00\n        /* \"#utility.yul\":3337:3343   */\n      dup1\n        /* \"#utility.yul\":3386:3388   */\n      0x40\n        /* \"#utility.yul\":3374:3383   */\n      dup4\n        /* \"#utility.yul\":3365:3372   */\n      dup6\n        /* \"#utility.yul\":3361:3384   */\n      sub\n        /* \"#utility.yul\":3357:3389   */\n      slt\n        /* \"#utility.yul\":3354:3473   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":3392:3471   */\n      tag_130\n      tag_115\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3354:3473   */\n    tag_129:\n        /* \"#utility.yul\":3512:3513   */\n      0x00\n        /* \"#utility.yul\":3537:3604   */\n      tag_131\n        /* \"#utility.yul\":3596:3603   */\n      dup6\n        /* \"#utility.yul\":3587:3593   */\n      dup3\n        /* \"#utility.yul\":3576:3585   */\n      dup7\n        /* \"#utility.yul\":3572:3594   */\n      add\n        /* \"#utility.yul\":3537:3604   */\n      tag_105\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3527:3604   */\n      swap3\n      pop\n        /* \"#utility.yul\":3483:3614   */\n      pop\n        /* \"#utility.yul\":3653:3655   */\n      0x20\n        /* \"#utility.yul\":3679:3732   */\n      tag_132\n        /* \"#utility.yul\":3724:3731   */\n      dup6\n        /* \"#utility.yul\":3715:3721   */\n      dup3\n        /* \"#utility.yul\":3704:3713   */\n      dup7\n        /* \"#utility.yul\":3700:3722   */\n      add\n        /* \"#utility.yul\":3679:3732   */\n      tag_88\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3669:3732   */\n      swap2\n      pop\n        /* \"#utility.yul\":3624:3742   */\n      pop\n        /* \"#utility.yul\":3247:3749   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3755:4106   */\n    tag_72:\n        /* \"#utility.yul\":3825:3831   */\n      0x00\n        /* \"#utility.yul\":3874:3876   */\n      0x20\n        /* \"#utility.yul\":3862:3871   */\n      dup3\n        /* \"#utility.yul\":3853:3860   */\n      dup5\n        /* \"#utility.yul\":3849:3872   */\n      sub\n        /* \"#utility.yul\":3845:3877   */\n      slt\n        /* \"#utility.yul\":3842:3961   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":3880:3959   */\n      tag_135\n      tag_115\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3842:3961   */\n    tag_134:\n        /* \"#utility.yul\":4000:4001   */\n      0x00\n        /* \"#utility.yul\":4025:4089   */\n      tag_136\n        /* \"#utility.yul\":4081:4088   */\n      dup5\n        /* \"#utility.yul\":4072:4078   */\n      dup3\n        /* \"#utility.yul\":4061:4070   */\n      dup6\n        /* \"#utility.yul\":4057:4079   */\n      add\n        /* \"#utility.yul\":4025:4089   */\n      tag_87\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4015:4089   */\n      swap2\n      pop\n        /* \"#utility.yul\":3971:4099   */\n      pop\n        /* \"#utility.yul\":3755:4106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4112:4291   */\n    tag_137:\n        /* \"#utility.yul\":4181:4191   */\n      0x00\n        /* \"#utility.yul\":4202:4248   */\n      tag_139\n        /* \"#utility.yul\":4244:4247   */\n      dup4\n        /* \"#utility.yul\":4236:4242   */\n      dup4\n        /* \"#utility.yul\":4202:4248   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4280:4284   */\n      0x20\n        /* \"#utility.yul\":4275:4278   */\n      dup4\n        /* \"#utility.yul\":4271:4285   */\n      add\n        /* \"#utility.yul\":4257:4285   */\n      swap1\n      pop\n        /* \"#utility.yul\":4112:4291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4297:4405   */\n    tag_140:\n        /* \"#utility.yul\":4374:4398   */\n      tag_142\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4374:4398   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4369:4372   */\n      dup3\n        /* \"#utility.yul\":4362:4399   */\n      mstore\n        /* \"#utility.yul\":4297:4405   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4411:4529   */\n    tag_144:\n        /* \"#utility.yul\":4498:4522   */\n      tag_146\n        /* \"#utility.yul\":4516:4521   */\n      dup2\n        /* \"#utility.yul\":4498:4522   */\n      tag_143\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4493:4496   */\n      dup3\n        /* \"#utility.yul\":4486:4523   */\n      mstore\n        /* \"#utility.yul\":4411:4529   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4565:5297   */\n    tag_147:\n        /* \"#utility.yul\":4684:4687   */\n      0x00\n        /* \"#utility.yul\":4713:4767   */\n      tag_149\n        /* \"#utility.yul\":4761:4766   */\n      dup3\n        /* \"#utility.yul\":4713:4767   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4783:4869   */\n      tag_151\n        /* \"#utility.yul\":4862:4868   */\n      dup2\n        /* \"#utility.yul\":4857:4860   */\n      dup6\n        /* \"#utility.yul\":4783:4869   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4776:4869   */\n      swap4\n      pop\n        /* \"#utility.yul\":4893:4949   */\n      tag_153\n        /* \"#utility.yul\":4943:4948   */\n      dup4\n        /* \"#utility.yul\":4893:4949   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4972:4979   */\n      dup1\n        /* \"#utility.yul\":5003:5004   */\n      0x00\n        /* \"#utility.yul\":4988:5272   */\n    tag_155:\n        /* \"#utility.yul\":5013:5019   */\n      dup4\n        /* \"#utility.yul\":5010:5011   */\n      dup2\n        /* \"#utility.yul\":5007:5020   */\n      lt\n        /* \"#utility.yul\":4988:5272   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":5089:5095   */\n      dup2\n        /* \"#utility.yul\":5083:5096   */\n      mload\n        /* \"#utility.yul\":5116:5179   */\n      tag_158\n        /* \"#utility.yul\":5175:5178   */\n      dup9\n        /* \"#utility.yul\":5160:5173   */\n      dup3\n        /* \"#utility.yul\":5116:5179   */\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5109:5179   */\n      swap8\n      pop\n        /* \"#utility.yul\":5202:5262   */\n      tag_159\n        /* \"#utility.yul\":5255:5261   */\n      dup4\n        /* \"#utility.yul\":5202:5262   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5192:5262   */\n      swap3\n      pop\n        /* \"#utility.yul\":5048:5272   */\n      pop\n        /* \"#utility.yul\":5035:5036   */\n      0x01\n        /* \"#utility.yul\":5032:5033   */\n      dup2\n        /* \"#utility.yul\":5028:5037   */\n      add\n        /* \"#utility.yul\":5023:5037   */\n      swap1\n      pop\n        /* \"#utility.yul\":4988:5272   */\n      jump(tag_155)\n    tag_157:\n        /* \"#utility.yul\":4992:5006   */\n      pop\n        /* \"#utility.yul\":5288:5291   */\n      dup6\n        /* \"#utility.yul\":5281:5291   */\n      swap4\n      pop\n        /* \"#utility.yul\":4689:5297   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4565:5297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5303:5421   */\n    tag_161:\n        /* \"#utility.yul\":5390:5414   */\n      tag_163\n        /* \"#utility.yul\":5408:5413   */\n      dup2\n        /* \"#utility.yul\":5390:5414   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5385:5388   */\n      dup3\n        /* \"#utility.yul\":5378:5415   */\n      mstore\n        /* \"#utility.yul\":5303:5421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5427:5649   */\n    tag_20:\n        /* \"#utility.yul\":5520:5524   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x20\n        /* \"#utility.yul\":5547:5556   */\n      dup3\n        /* \"#utility.yul\":5543:5561   */\n      add\n        /* \"#utility.yul\":5535:5561   */\n      swap1\n      pop\n        /* \"#utility.yul\":5571:5642   */\n      tag_166\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5628:5637   */\n      dup4\n        /* \"#utility.yul\":5624:5641   */\n      add\n        /* \"#utility.yul\":5615:5621   */\n      dup5\n        /* \"#utility.yul\":5571:5642   */\n      tag_144\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5427:5649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5655:5877   */\n    tag_14:\n        /* \"#utility.yul\":5748:5752   */\n      0x00\n        /* \"#utility.yul\":5786:5788   */\n      0x20\n        /* \"#utility.yul\":5775:5784   */\n      dup3\n        /* \"#utility.yul\":5771:5789   */\n      add\n        /* \"#utility.yul\":5763:5789   */\n      swap1\n      pop\n        /* \"#utility.yul\":5799:5870   */\n      tag_168\n        /* \"#utility.yul\":5867:5868   */\n      0x00\n        /* \"#utility.yul\":5856:5865   */\n      dup4\n        /* \"#utility.yul\":5852:5869   */\n      add\n        /* \"#utility.yul\":5843:5849   */\n      dup5\n        /* \"#utility.yul\":5799:5870   */\n      tag_161\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5655:5877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5883:6366   */\n    tag_48:\n        /* \"#utility.yul\":6054:6058   */\n      0x00\n        /* \"#utility.yul\":6092:6094   */\n      0x40\n        /* \"#utility.yul\":6081:6090   */\n      dup3\n        /* \"#utility.yul\":6077:6095   */\n      add\n        /* \"#utility.yul\":6069:6095   */\n      swap1\n      pop\n        /* \"#utility.yul\":6105:6176   */\n      tag_170\n        /* \"#utility.yul\":6173:6174   */\n      0x00\n        /* \"#utility.yul\":6162:6171   */\n      dup4\n        /* \"#utility.yul\":6158:6175   */\n      add\n        /* \"#utility.yul\":6149:6155   */\n      dup6\n        /* \"#utility.yul\":6105:6176   */\n      tag_161\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6223:6232   */\n      dup2\n        /* \"#utility.yul\":6217:6221   */\n      dup2\n        /* \"#utility.yul\":6213:6233   */\n      sub\n        /* \"#utility.yul\":6208:6210   */\n      0x20\n        /* \"#utility.yul\":6197:6206   */\n      dup4\n        /* \"#utility.yul\":6193:6211   */\n      add\n        /* \"#utility.yul\":6186:6234   */\n      mstore\n        /* \"#utility.yul\":6251:6359   */\n      tag_171\n        /* \"#utility.yul\":6354:6358   */\n      dup2\n        /* \"#utility.yul\":6345:6351   */\n      dup5\n        /* \"#utility.yul\":6251:6359   */\n      tag_147\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6243:6359   */\n      swap1\n      pop\n        /* \"#utility.yul\":5883:6366   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6501   */\n    tag_79:\n        /* \"#utility.yul\":6406:6412   */\n      0x00\n        /* \"#utility.yul\":6433:6453   */\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6423:6453   */\n      swap1\n      pop\n        /* \"#utility.yul\":6462:6495   */\n      tag_175\n        /* \"#utility.yul\":6490:6494   */\n      dup3\n        /* \"#utility.yul\":6482:6488   */\n      dup3\n        /* \"#utility.yul\":6462:6495   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6372:6501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6507:6582   */\n    tag_174:\n        /* \"#utility.yul\":6540:6546   */\n      0x00\n        /* \"#utility.yul\":6573:6575   */\n      0x40\n        /* \"#utility.yul\":6567:6576   */\n      mload\n        /* \"#utility.yul\":6557:6576   */\n      swap1\n      pop\n        /* \"#utility.yul\":6507:6582   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6588:6899   */\n    tag_78:\n        /* \"#utility.yul\":6665:6669   */\n      0x00\n        /* \"#utility.yul\":6755:6773   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6747:6753   */\n      dup3\n        /* \"#utility.yul\":6744:6774   */\n      gt\n        /* \"#utility.yul\":6741:6797   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":6777:6795   */\n      tag_180\n      tag_38\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6741:6797   */\n    tag_179:\n        /* \"#utility.yul\":6827:6831   */\n      0x20\n        /* \"#utility.yul\":6819:6825   */\n      dup3\n        /* \"#utility.yul\":6815:6832   */\n      mul\n        /* \"#utility.yul\":6807:6832   */\n      swap1\n      pop\n        /* \"#utility.yul\":6887:6891   */\n      0x20\n        /* \"#utility.yul\":6881:6885   */\n      dup2\n        /* \"#utility.yul\":6877:6892   */\n      add\n        /* \"#utility.yul\":6869:6892   */\n      swap1\n      pop\n        /* \"#utility.yul\":6588:6899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6905:7037   */\n    tag_154:\n        /* \"#utility.yul\":6972:6976   */\n      0x00\n        /* \"#utility.yul\":6995:6998   */\n      dup2\n        /* \"#utility.yul\":6987:6998   */\n      swap1\n      pop\n        /* \"#utility.yul\":7025:7029   */\n      0x20\n        /* \"#utility.yul\":7020:7023   */\n      dup3\n        /* \"#utility.yul\":7016:7030   */\n      add\n        /* \"#utility.yul\":7008:7030   */\n      swap1\n      pop\n        /* \"#utility.yul\":6905:7037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7043:7157   */\n    tag_150:\n        /* \"#utility.yul\":7110:7116   */\n      0x00\n        /* \"#utility.yul\":7144:7149   */\n      dup2\n        /* \"#utility.yul\":7138:7150   */\n      mload\n        /* \"#utility.yul\":7128:7150   */\n      swap1\n      pop\n        /* \"#utility.yul\":7043:7157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7163:7276   */\n    tag_160:\n        /* \"#utility.yul\":7233:7237   */\n      0x00\n        /* \"#utility.yul\":7265:7269   */\n      0x20\n        /* \"#utility.yul\":7260:7263   */\n      dup3\n        /* \"#utility.yul\":7256:7270   */\n      add\n        /* \"#utility.yul\":7248:7270   */\n      swap1\n      pop\n        /* \"#utility.yul\":7163:7276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7282:7466   */\n    tag_152:\n        /* \"#utility.yul\":7381:7392   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup3\n        /* \"#utility.yul\":7410:7413   */\n      dup3\n        /* \"#utility.yul\":7403:7422   */\n      mstore\n        /* \"#utility.yul\":7455:7459   */\n      0x20\n        /* \"#utility.yul\":7450:7453   */\n      dup3\n        /* \"#utility.yul\":7446:7460   */\n      add\n        /* \"#utility.yul\":7431:7460   */\n      swap1\n      pop\n        /* \"#utility.yul\":7282:7466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7472:7568   */\n    tag_143:\n        /* \"#utility.yul\":7509:7516   */\n      0x00\n        /* \"#utility.yul\":7538:7562   */\n      tag_186\n        /* \"#utility.yul\":7556:7561   */\n      dup3\n        /* \"#utility.yul\":7538:7562   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7527:7562   */\n      swap1\n      pop\n        /* \"#utility.yul\":7472:7568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7574:7683   */\n    tag_188:\n        /* \"#utility.yul\":7624:7631   */\n      0x00\n        /* \"#utility.yul\":7653:7677   */\n      tag_190\n        /* \"#utility.yul\":7671:7676   */\n      dup3\n        /* \"#utility.yul\":7653:7677   */\n      tag_143\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7642:7677   */\n      swap1\n      pop\n        /* \"#utility.yul\":7574:7683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7689:7799   */\n    tag_191:\n        /* \"#utility.yul\":7740:7747   */\n      0x00\n        /* \"#utility.yul\":7769:7793   */\n      tag_193\n        /* \"#utility.yul\":7787:7792   */\n      dup3\n        /* \"#utility.yul\":7769:7793   */\n      tag_143\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7758:7793   */\n      swap1\n      pop\n        /* \"#utility.yul\":7689:7799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7805:7931   */\n    tag_187:\n        /* \"#utility.yul\":7842:7849   */\n      0x00\n        /* \"#utility.yul\":7882:7924   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7875:7880   */\n      dup3\n        /* \"#utility.yul\":7871:7925   */\n      and\n        /* \"#utility.yul\":7860:7925   */\n      swap1\n      pop\n        /* \"#utility.yul\":7805:7931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7937:8014   */\n    tag_164:\n        /* \"#utility.yul\":7974:7981   */\n      0x00\n        /* \"#utility.yul\":8003:8008   */\n      dup2\n        /* \"#utility.yul\":7992:8008   */\n      swap1\n      pop\n        /* \"#utility.yul\":7937:8014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8020:8301   */\n    tag_176:\n        /* \"#utility.yul\":8103:8130   */\n      tag_197\n        /* \"#utility.yul\":8125:8129   */\n      dup3\n        /* \"#utility.yul\":8103:8130   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8095:8101   */\n      dup2\n        /* \"#utility.yul\":8091:8131   */\n      add\n        /* \"#utility.yul\":8233:8239   */\n      dup2\n        /* \"#utility.yul\":8221:8231   */\n      dup2\n        /* \"#utility.yul\":8218:8240   */\n      lt\n        /* \"#utility.yul\":8197:8215   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8185:8195   */\n      dup3\n        /* \"#utility.yul\":8182:8216   */\n      gt\n        /* \"#utility.yul\":8179:8241   */\n      or\n        /* \"#utility.yul\":8176:8264   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":8244:8262   */\n      tag_200\n      tag_38\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8176:8264   */\n    tag_199:\n        /* \"#utility.yul\":8284:8294   */\n      dup1\n        /* \"#utility.yul\":8280:8282   */\n      0x40\n        /* \"#utility.yul\":8273:8295   */\n      mstore\n        /* \"#utility.yul\":8063:8301   */\n      pop\n        /* \"#utility.yul\":8020:8301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8307:8487   */\n    tag_42:\n        /* \"#utility.yul\":8355:8432   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8352:8353   */\n      0x00\n        /* \"#utility.yul\":8345:8433   */\n      mstore\n        /* \"#utility.yul\":8452:8456   */\n      0x32\n        /* \"#utility.yul\":8449:8450   */\n      0x04\n        /* \"#utility.yul\":8442:8457   */\n      mstore\n        /* \"#utility.yul\":8476:8480   */\n      0x24\n        /* \"#utility.yul\":8473:8474   */\n      0x00\n        /* \"#utility.yul\":8466:8481   */\n      revert\n        /* \"#utility.yul\":8493:8673   */\n    tag_38:\n        /* \"#utility.yul\":8541:8618   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8538:8539   */\n      0x00\n        /* \"#utility.yul\":8531:8619   */\n      mstore\n        /* \"#utility.yul\":8638:8642   */\n      0x41\n        /* \"#utility.yul\":8635:8636   */\n      0x04\n        /* \"#utility.yul\":8628:8643   */\n      mstore\n        /* \"#utility.yul\":8662:8666   */\n      0x24\n        /* \"#utility.yul\":8659:8660   */\n      0x00\n        /* \"#utility.yul\":8652:8667   */\n      revert\n        /* \"#utility.yul\":8679:8796   */\n    tag_99:\n        /* \"#utility.yul\":8788:8789   */\n      0x00\n        /* \"#utility.yul\":8785:8786   */\n      dup1\n        /* \"#utility.yul\":8778:8790   */\n      revert\n        /* \"#utility.yul\":8802:8919   */\n    tag_82:\n        /* \"#utility.yul\":8911:8912   */\n      0x00\n        /* \"#utility.yul\":8908:8909   */\n      dup1\n        /* \"#utility.yul\":8901:8913   */\n      revert\n        /* \"#utility.yul\":8925:9042   */\n    tag_122:\n        /* \"#utility.yul\":9034:9035   */\n      0x00\n        /* \"#utility.yul\":9031:9032   */\n      dup1\n        /* \"#utility.yul\":9024:9036   */\n      revert\n        /* \"#utility.yul\":9048:9165   */\n    tag_115:\n        /* \"#utility.yul\":9157:9158   */\n      0x00\n        /* \"#utility.yul\":9154:9155   */\n      dup1\n        /* \"#utility.yul\":9147:9159   */\n      revert\n        /* \"#utility.yul\":9171:9273   */\n    tag_198:\n        /* \"#utility.yul\":9212:9218   */\n      0x00\n        /* \"#utility.yul\":9263:9265   */\n      0x1f\n        /* \"#utility.yul\":9259:9266   */\n      not\n        /* \"#utility.yul\":9254:9256   */\n      0x1f\n        /* \"#utility.yul\":9247:9252   */\n      dup4\n        /* \"#utility.yul\":9243:9257   */\n      add\n        /* \"#utility.yul\":9239:9267   */\n      and\n        /* \"#utility.yul\":9229:9267   */\n      swap1\n      pop\n        /* \"#utility.yul\":9171:9273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9279:9401   */\n    tag_91:\n        /* \"#utility.yul\":9352:9376   */\n      tag_209\n        /* \"#utility.yul\":9370:9375   */\n      dup2\n        /* \"#utility.yul\":9352:9376   */\n      tag_143\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":9345:9350   */\n      dup2\n        /* \"#utility.yul\":9342:9377   */\n      eq\n        /* \"#utility.yul\":9332:9395   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":9391:9392   */\n      0x00\n        /* \"#utility.yul\":9388:9389   */\n      dup1\n        /* \"#utility.yul\":9381:9393   */\n      revert\n        /* \"#utility.yul\":9332:9395   */\n    tag_210:\n        /* \"#utility.yul\":9279:9401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9555   */\n    tag_104:\n        /* \"#utility.yul\":9493:9530   */\n      tag_212\n        /* \"#utility.yul\":9524:9529   */\n      dup2\n        /* \"#utility.yul\":9493:9530   */\n      tag_188\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":9486:9491   */\n      dup2\n        /* \"#utility.yul\":9483:9531   */\n      eq\n        /* \"#utility.yul\":9473:9549   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":9545:9546   */\n      0x00\n        /* \"#utility.yul\":9542:9543   */\n      dup1\n        /* \"#utility.yul\":9535:9547   */\n      revert\n        /* \"#utility.yul\":9473:9549   */\n    tag_213:\n        /* \"#utility.yul\":9407:9555   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9561:9711   */\n    tag_108:\n        /* \"#utility.yul\":9648:9686   */\n      tag_215\n        /* \"#utility.yul\":9680:9685   */\n      dup2\n        /* \"#utility.yul\":9648:9686   */\n      tag_191\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":9641:9646   */\n      dup2\n        /* \"#utility.yul\":9638:9687   */\n      eq\n        /* \"#utility.yul\":9628:9705   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":9701:9702   */\n      0x00\n        /* \"#utility.yul\":9698:9699   */\n      dup1\n        /* \"#utility.yul\":9691:9703   */\n      revert\n        /* \"#utility.yul\":9628:9705   */\n    tag_216:\n        /* \"#utility.yul\":9561:9711   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9717:9839   */\n    tag_111:\n        /* \"#utility.yul\":9790:9814   */\n      tag_218\n        /* \"#utility.yul\":9808:9813   */\n      dup2\n        /* \"#utility.yul\":9790:9814   */\n      tag_164\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9783:9788   */\n      dup2\n        /* \"#utility.yul\":9780:9815   */\n      eq\n        /* \"#utility.yul\":9770:9833   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":9829:9830   */\n      0x00\n        /* \"#utility.yul\":9826:9827   */\n      dup1\n        /* \"#utility.yul\":9819:9831   */\n      revert\n        /* \"#utility.yul\":9770:9833   */\n    tag_219:\n        /* \"#utility.yul\":9717:9839   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122012d46f3a9f9236b39da3c78ab9bdca5d846d55c41244d9287cb73642dd7c596c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610ac6806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632b00490d146100675780633782379514610097578063484f4ea9146100c757806376bf39a3146100e55780638dd9500214610115578063e4dc2aa414610133575b600080fd5b610081600480360381019061007c9190610720565b610163565b60405161008e919061084b565b60405180910390f35b6100b160048036038101906100ac91906106f3565b610397565b6040516100be9190610830565b60405180910390f35b6100cf61041e565b6040516100dc9190610830565b60405180910390f35b6100ff60048036038101906100fa91906106f3565b610444565b60405161010c9190610830565b60405180910390f35b61011d6104cb565b60405161012a9190610830565b60405180910390f35b61014d600480360381019061014891906106f3565b6104ef565b60405161015a919061084b565b60405180910390f35b600080600367ffffffffffffffff811115610181576101806109e0565b5b6040519080825280602002602001820160405280156101af5781602001602082028036833780820191505090505b50905082816000815181106101c7576101c66109b1565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110610236576102356109b1565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106102a7576102a66109b1565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161031e929190610866565b60006040518083038186803b15801561033657600080fd5b505afa15801561034a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061037391906106aa565b600281518110610386576103856109b1565b5b602002602001015191505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156103df57600080fd5b505afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610417919061067d565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c4919061067d565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053757600080fd5b505afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190610760565b9050919050565b6000610589610584846108bb565b610896565b905080838252602082019050828560208602820111156105ac576105ab610a14565b5b60005b858110156105dc57816105c28882610668565b8452602084019350602083019250506001810190506105af565b5050509392505050565b6000813590506105f581610a34565b92915050565b60008151905061060a81610a34565b92915050565b600082601f83011261062557610624610a0f565b5b8151610635848260208601610576565b91505092915050565b60008135905061064d81610a4b565b92915050565b60008135905061066281610a62565b92915050565b60008151905061067781610a79565b92915050565b60006020828403121561069357610692610a1e565b5b60006106a1848285016105fb565b91505092915050565b6000602082840312156106c0576106bf610a1e565b5b600082015167ffffffffffffffff8111156106de576106dd610a19565b5b6106ea84828501610610565b91505092915050565b60006020828403121561070957610708610a1e565b5b60006107178482850161063e565b91505092915050565b6000806040838503121561073757610736610a1e565b5b600061074585828601610653565b9250506020610756858286016105e6565b9150509250929050565b60006020828403121561077657610775610a1e565b5b600061078484828501610668565b91505092915050565b600061079983836107a5565b60208301905092915050565b6107ae81610920565b82525050565b6107bd81610920565b82525050565b60006107ce826108f7565b6107d8818561090f565b93506107e3836108e7565b8060005b838110156108145781516107fb888261078d565b975061080683610902565b9250506001810190506107e7565b5085935050505092915050565b61082a81610976565b82525050565b600060208201905061084560008301846107b4565b92915050565b60006020820190506108606000830184610821565b92915050565b600060408201905061087b6000830185610821565b818103602083015261088d81846107c3565b90509392505050565b60006108a06108b1565b90506108ac8282610980565b919050565b6000604051905090565b600067ffffffffffffffff8211156108d6576108d56109e0565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061092b82610956565b9050919050565b600061093d82610920565b9050919050565b600061094f82610920565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61098982610a23565b810181811067ffffffffffffffff821117156109a8576109a76109e0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610a3d81610920565b8114610a4857600080fd5b50565b610a5481610932565b8114610a5f57600080fd5b50565b610a6b81610944565b8114610a7657600080fd5b50565b610a8281610976565b8114610a8d57600080fd5b5056fea264697066735822122012d46f3a9f9236b39da3c78ab9bdca5d846d55c41244d9287cb73642dd7c596c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC6 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B00490D EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x37823795 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x76BF39A3 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x181 JUMPI PUSH2 0x180 PUSH2 0x9E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C7 JUMPI PUSH2 0x1C6 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x236 JUMPI PUSH2 0x235 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP3 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x67D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x67D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x589 PUSH2 0x584 DUP5 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x5AC JUMPI PUSH2 0x5AB PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5DC JUMPI DUP2 PUSH2 0x5C2 DUP9 DUP3 PUSH2 0x668 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5AF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F5 DUP2 PUSH2 0xA34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x60A DUP2 PUSH2 0xA34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x635 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x576 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64D DUP2 PUSH2 0xA4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x662 DUP2 PUSH2 0xA62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x677 DUP2 PUSH2 0xA79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x693 JUMPI PUSH2 0x692 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A1 DUP5 DUP3 DUP6 ADD PUSH2 0x5FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C0 JUMPI PUSH2 0x6BF PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DD PUSH2 0xA19 JUMP JUMPDEST JUMPDEST PUSH2 0x6EA DUP5 DUP3 DUP6 ADD PUSH2 0x610 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH2 0x708 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x717 DUP5 DUP3 DUP6 ADD PUSH2 0x63E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x745 DUP6 DUP3 DUP7 ADD PUSH2 0x653 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x756 DUP6 DUP3 DUP7 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP5 DUP3 DUP6 ADD PUSH2 0x668 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x799 DUP4 DUP4 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE DUP3 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x7D8 DUP2 DUP6 PUSH2 0x90F JUMP JUMPDEST SWAP4 POP PUSH2 0x7E3 DUP4 PUSH2 0x8E7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x814 JUMPI DUP2 MLOAD PUSH2 0x7FB DUP9 DUP3 PUSH2 0x78D JUMP JUMPDEST SWAP8 POP PUSH2 0x806 DUP4 PUSH2 0x902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7E7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82A DUP2 PUSH2 0x976 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x845 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x860 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x821 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x87B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x821 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x88D DUP2 DUP5 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A0 PUSH2 0x8B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x8AC DUP3 DUP3 PUSH2 0x980 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x9E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92B DUP3 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D DUP3 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94F DUP3 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x989 DUP3 PUSH2 0xA23 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0x9E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3D DUP2 PUSH2 0x920 JUMP JUMPDEST DUP2 EQ PUSH2 0xA48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA54 DUP2 PUSH2 0x932 JUMP JUMPDEST DUP2 EQ PUSH2 0xA5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA6B DUP2 PUSH2 0x944 JUMP JUMPDEST DUP2 EQ PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA82 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP2 EQ PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xD4 PUSH16 0x3A9F9236B39DA3C78AB9BDCA5D846D55 0xC4 SLT DIFFICULTY 0xD9 0x28 PUSH29 0xB73642DD7C596C64736F6C634300080700330000000000000000000000 ",
							"sourceMap": "8846:1171:0:-:0;;;8892:42;8870:64;;;;;;;;;;;;;;;;;;;;8963:42;8941:64;;;;;;;;;;;;;;;;;;;;9029:19;9012:36;;8846:1171;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_335": {
									"entryPoint": 1054,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WBNB_332": {
									"entryPoint": 1227,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_425": {
									"entryPoint": 355,
									"id": 425,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token0_364": {
									"entryPoint": 1092,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token1_377": {
									"entryPoint": 919,
									"id": 377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_351": {
									"entryPoint": 1263,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$25": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$329": {
									"entryPoint": 1619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$25": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_Router_$329t_address": {
									"entryPoint": 1824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$25": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$329": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$25": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$329": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9842:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "836:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "845:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "874:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "812:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:1",
														"type": ""
													}
												],
												"src": "774:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "982:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "992:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1001:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "992:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1050:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1023:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "960:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "968:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "976:5:1",
														"type": ""
													}
												],
												"src": "919:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1224:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1224:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1224:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1209:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1197:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1216:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1193:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:35:1"
															},
															"nodeType": "YulIf",
															"src": "1183:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1314:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1334:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1328:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1318:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1350:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1445:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1452:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1460:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1359:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1350:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1151:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1159:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1167:5:1",
														"type": ""
													}
												],
												"src": "1085:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:100:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1551:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1573:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1560:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1551:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1629:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$25",
																	"nodeType": "YulIdentifier",
																	"src": "1589:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:46:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1519:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1527:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1535:5:1",
														"type": ""
													}
												],
												"src": "1476:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1723:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1745:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1732:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1723:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1802:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$329",
																	"nodeType": "YulIdentifier",
																	"src": "1761:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1761:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1691:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1699:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1707:5:1",
														"type": ""
													}
												],
												"src": "1647:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1883:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1893:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1908:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1902:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1893:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1924:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1924:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1924:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1861:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1869:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1877:5:1",
														"type": ""
													}
												],
												"src": "1820:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2046:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2092:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2094:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2094:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2094:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2067:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2076:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2059:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2059:32:1"
															},
															"nodeType": "YulIf",
															"src": "2056:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2185:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2200:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2229:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2275:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2286:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2271:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2271:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2295:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2239:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2239:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2229:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2016:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2027:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2039:6:1",
														"type": ""
													}
												],
												"src": "1969:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2428:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2474:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2476:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2476:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2476:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2449:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2458:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:32:1"
															},
															"nodeType": "YulIf",
															"src": "2438:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2567:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2582:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2606:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2617:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2602:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2602:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2596:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2596:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2586:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2667:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2669:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2669:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2669:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2647:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2636:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2636:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2633:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2764:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2835:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2846:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2831:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2855:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2774:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2774:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2764:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2398:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2409:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2421:6:1",
														"type": ""
													}
												],
												"src": "2326:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2965:276:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3011:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3013:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3013:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2986:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2995:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3007:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2978:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2978:32:1"
															},
															"nodeType": "YulIf",
															"src": "2975:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3104:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3119:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3133:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3123:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3148:76:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3196:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3207:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3192:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3192:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3216:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$25",
																			"nodeType": "YulIdentifier",
																			"src": "3158:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:66:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3148:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2958:6:1",
														"type": ""
													}
												],
												"src": "2886:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3344:405:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3390:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3392:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3392:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3392:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3365:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3374:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3386:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:32:1"
															},
															"nodeType": "YulIf",
															"src": "3354:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3483:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3498:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3502:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3527:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3576:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3587:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3572:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3572:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3596:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "3537:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3537:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3527:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3624:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3639:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3653:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3643:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3669:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3704:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3715:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3700:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3700:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3724:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3679:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3679:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Router_$329t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3306:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3317:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3329:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3337:6:1",
														"type": ""
													}
												],
												"src": "3247:502:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3832:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3878:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3880:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3880:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3880:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3874:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3845:32:1"
															},
															"nodeType": "YulIf",
															"src": "3842:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3971:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3986:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4000:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3990:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4015:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4061:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4072:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4057:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4057:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4081:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4025:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4015:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3802:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3813:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3825:6:1",
														"type": ""
													}
												],
												"src": "3755:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4192:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4236:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4244:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4202:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4202:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4257:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4275:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4280:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4257:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4165:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4173:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4181:10:1",
														"type": ""
													}
												],
												"src": "4112:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4352:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4369:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4374:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4374:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4362:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4340:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4347:3:1",
														"type": ""
													}
												],
												"src": "4297:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4476:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4493:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4516:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4498:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4498:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4486:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4464:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4471:3:1",
														"type": ""
													}
												],
												"src": "4411:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4699:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4761:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4713:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4703:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4776:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4857:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4862:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4783:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4776:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4878:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4943:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4893:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4882:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4958:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4972:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4962:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5048:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5062:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5089:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5083:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5083:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5066:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5109:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5160:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5175:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "5116:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5116:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5109:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5192:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5255:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5202:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5202:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5192:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5010:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5013:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5007:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5007:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5021:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5023:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5032:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5035:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5028:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5028:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5023:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4992:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4994:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5003:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4998:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4988:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5281:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5288:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4668:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4675:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4684:3:1",
														"type": ""
													}
												],
												"src": "4565:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5368:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5385:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5408:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5390:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5390:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5378:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5356:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5363:3:1",
														"type": ""
													}
												],
												"src": "5303:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5525:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5535:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5547:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5535:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5615:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5628:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5639:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5624:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5624:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5571:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5571:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5571:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5497:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5509:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5520:4:1",
														"type": ""
													}
												],
												"src": "5427:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5753:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5763:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5775:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5771:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5771:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5763:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5843:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5867:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5852:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5799:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5799:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5799:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5725:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5737:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5748:4:1",
														"type": ""
													}
												],
												"src": "5655:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6059:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6069:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6081:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6092:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6149:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6173:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6105:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6105:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6197:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6208:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6193:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6193:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6217:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6223:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6213:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6186:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6186:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6243:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6354:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6251:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6251:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6243:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6023:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6035:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6043:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6054:4:1",
														"type": ""
													}
												],
												"src": "5883:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6413:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6423:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6433:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6433:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6482:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6490:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6462:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6462:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6462:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6397:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6406:6:1",
														"type": ""
													}
												],
												"src": "6372:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6547:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6557:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6573:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6567:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6567:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6540:6:1",
														"type": ""
													}
												],
												"src": "6507:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6670:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6775:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6777:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6777:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6777:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6747:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6755:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6744:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6744:30:1"
															},
															"nodeType": "YulIf",
															"src": "6741:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6807:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6819:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6827:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6807:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6869:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6881:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6887:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6877:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6869:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6654:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6665:4:1",
														"type": ""
													}
												],
												"src": "6588:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6977:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6987:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6995:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6987:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7008:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7020:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7025:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7008:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6964:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6972:4:1",
														"type": ""
													}
												],
												"src": "6905:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7117:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7128:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7144:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7138:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7128:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7100:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7110:6:1",
														"type": ""
													}
												],
												"src": "7043:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7238:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7248:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7260:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7265:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7256:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7248:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7225:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7233:4:1",
														"type": ""
													}
												],
												"src": "7163:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7393:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7410:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7415:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7403:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7431:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7450:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7455:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7446:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7431:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7365:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7370:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7381:11:1",
														"type": ""
													}
												],
												"src": "7282:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7517:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7527:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7556:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7538:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7538:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7527:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7499:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7509:7:1",
														"type": ""
													}
												],
												"src": "7472:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7632:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7642:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7671:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7653:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7653:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7642:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7614:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7624:7:1",
														"type": ""
													}
												],
												"src": "7574:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7748:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7758:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7787:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7769:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7769:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7758:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7730:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7740:7:1",
														"type": ""
													}
												],
												"src": "7689:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7850:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7860:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7875:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7882:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7871:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7860:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7832:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7842:7:1",
														"type": ""
													}
												],
												"src": "7805:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7982:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7992:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8003:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7992:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7964:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7974:7:1",
														"type": ""
													}
												],
												"src": "7937:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8063:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8073:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8125:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8103:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8103:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8091:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8077:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8242:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8244:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8244:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8244:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8185:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8197:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8182:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8182:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8221:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8218:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8218:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8179:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8179:62:1"
															},
															"nodeType": "YulIf",
															"src": "8176:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8280:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8284:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8049:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8057:4:1",
														"type": ""
													}
												],
												"src": "8020:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8452:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8442:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8466:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8466:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8307:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8638:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8628:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8652:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8652:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8493:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8768:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8785:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8788:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8778:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8679:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8891:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8908:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8911:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8901:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8901:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8802:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9014:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9031:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9034:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9024:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8925:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9137:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9154:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9157:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9147:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9147:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9048:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9219:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9229:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9247:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9254:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9243:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9263:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9259:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9239:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9239:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9229:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9202:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9212:6:1",
														"type": ""
													}
												],
												"src": "9171:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9322:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9379:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9388:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9391:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9381:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9381:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9381:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9345:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9370:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9352:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9352:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9342:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9342:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9335:43:1"
															},
															"nodeType": "YulIf",
															"src": "9332:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9315:5:1",
														"type": ""
													}
												],
												"src": "9279:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9463:92:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9533:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9542:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9545:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9535:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9535:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9535:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9486:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9524:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$25",
																					"nodeType": "YulIdentifier",
																					"src": "9493:30:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9493:37:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9483:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9483:48:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9476:56:1"
															},
															"nodeType": "YulIf",
															"src": "9473:76:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9456:5:1",
														"type": ""
													}
												],
												"src": "9407:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9618:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9689:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9698:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9701:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9691:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9691:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9691:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9641:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9680:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$329",
																					"nodeType": "YulIdentifier",
																					"src": "9648:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9648:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9638:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9638:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9631:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9631:57:1"
															},
															"nodeType": "YulIf",
															"src": "9628:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9611:5:1",
														"type": ""
													}
												],
												"src": "9561:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9760:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9817:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9826:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9829:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9819:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9819:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9819:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9783:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9808:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9790:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9790:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9780:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9780:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9773:43:1"
															},
															"nodeType": "YulIf",
															"src": "9770:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9753:5:1",
														"type": ""
													}
												],
												"src": "9717:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$25(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$25(value)\n    }\n\n    function abi_decode_t_contract$_Router_$329(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$329(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$25(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$25(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Router_$329t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$25(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$329(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$25(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$25(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$329(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$329(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80632b00490d146100675780633782379514610097578063484f4ea9146100c757806376bf39a3146100e55780638dd9500214610115578063e4dc2aa414610133575b600080fd5b610081600480360381019061007c9190610720565b610163565b60405161008e919061084b565b60405180910390f35b6100b160048036038101906100ac91906106f3565b610397565b6040516100be9190610830565b60405180910390f35b6100cf61041e565b6040516100dc9190610830565b60405180910390f35b6100ff60048036038101906100fa91906106f3565b610444565b60405161010c9190610830565b60405180910390f35b61011d6104cb565b60405161012a9190610830565b60405180910390f35b61014d600480360381019061014891906106f3565b6104ef565b60405161015a919061084b565b60405180910390f35b600080600367ffffffffffffffff811115610181576101806109e0565b5b6040519080825280602002602001820160405280156101af5781602001602082028036833780820191505090505b50905082816000815181106101c7576101c66109b1565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110610236576102356109b1565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106102a7576102a66109b1565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161031e929190610866565b60006040518083038186803b15801561033657600080fd5b505afa15801561034a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061037391906106aa565b600281518110610386576103856109b1565b5b602002602001015191505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156103df57600080fd5b505afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610417919061067d565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c4919061067d565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053757600080fd5b505afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190610760565b9050919050565b6000610589610584846108bb565b610896565b905080838252602082019050828560208602820111156105ac576105ab610a14565b5b60005b858110156105dc57816105c28882610668565b8452602084019350602083019250506001810190506105af565b5050509392505050565b6000813590506105f581610a34565b92915050565b60008151905061060a81610a34565b92915050565b600082601f83011261062557610624610a0f565b5b8151610635848260208601610576565b91505092915050565b60008135905061064d81610a4b565b92915050565b60008135905061066281610a62565b92915050565b60008151905061067781610a79565b92915050565b60006020828403121561069357610692610a1e565b5b60006106a1848285016105fb565b91505092915050565b6000602082840312156106c0576106bf610a1e565b5b600082015167ffffffffffffffff8111156106de576106dd610a19565b5b6106ea84828501610610565b91505092915050565b60006020828403121561070957610708610a1e565b5b60006107178482850161063e565b91505092915050565b6000806040838503121561073757610736610a1e565b5b600061074585828601610653565b9250506020610756858286016105e6565b9150509250929050565b60006020828403121561077657610775610a1e565b5b600061078484828501610668565b91505092915050565b600061079983836107a5565b60208301905092915050565b6107ae81610920565b82525050565b6107bd81610920565b82525050565b60006107ce826108f7565b6107d8818561090f565b93506107e3836108e7565b8060005b838110156108145781516107fb888261078d565b975061080683610902565b9250506001810190506107e7565b5085935050505092915050565b61082a81610976565b82525050565b600060208201905061084560008301846107b4565b92915050565b60006020820190506108606000830184610821565b92915050565b600060408201905061087b6000830185610821565b818103602083015261088d81846107c3565b90509392505050565b60006108a06108b1565b90506108ac8282610980565b919050565b6000604051905090565b600067ffffffffffffffff8211156108d6576108d56109e0565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061092b82610956565b9050919050565b600061093d82610920565b9050919050565b600061094f82610920565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61098982610a23565b810181811067ffffffffffffffff821117156109a8576109a76109e0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610a3d81610920565b8114610a4857600080fd5b50565b610a5481610932565b8114610a5f57600080fd5b50565b610a6b81610944565b8114610a7657600080fd5b50565b610a8281610976565b8114610a8d57600080fd5b5056fea264697066735822122012d46f3a9f9236b39da3c78ab9bdca5d846d55c41244d9287cb73642dd7c596c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B00490D EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x37823795 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x76BF39A3 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x181 JUMPI PUSH2 0x180 PUSH2 0x9E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C7 JUMPI PUSH2 0x1C6 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x236 JUMPI PUSH2 0x235 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP3 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x67D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x67D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x589 PUSH2 0x584 DUP5 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x5AC JUMPI PUSH2 0x5AB PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5DC JUMPI DUP2 PUSH2 0x5C2 DUP9 DUP3 PUSH2 0x668 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5AF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F5 DUP2 PUSH2 0xA34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x60A DUP2 PUSH2 0xA34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x635 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x576 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64D DUP2 PUSH2 0xA4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x662 DUP2 PUSH2 0xA62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x677 DUP2 PUSH2 0xA79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x693 JUMPI PUSH2 0x692 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A1 DUP5 DUP3 DUP6 ADD PUSH2 0x5FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C0 JUMPI PUSH2 0x6BF PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DD PUSH2 0xA19 JUMP JUMPDEST JUMPDEST PUSH2 0x6EA DUP5 DUP3 DUP6 ADD PUSH2 0x610 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH2 0x708 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x717 DUP5 DUP3 DUP6 ADD PUSH2 0x63E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x745 DUP6 DUP3 DUP7 ADD PUSH2 0x653 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x756 DUP6 DUP3 DUP7 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP5 DUP3 DUP6 ADD PUSH2 0x668 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x799 DUP4 DUP4 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE DUP3 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x7D8 DUP2 DUP6 PUSH2 0x90F JUMP JUMPDEST SWAP4 POP PUSH2 0x7E3 DUP4 PUSH2 0x8E7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x814 JUMPI DUP2 MLOAD PUSH2 0x7FB DUP9 DUP3 PUSH2 0x78D JUMP JUMPDEST SWAP8 POP PUSH2 0x806 DUP4 PUSH2 0x902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7E7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82A DUP2 PUSH2 0x976 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x845 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x860 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x821 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x87B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x821 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x88D DUP2 DUP5 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A0 PUSH2 0x8B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x8AC DUP3 DUP3 PUSH2 0x980 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x9E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92B DUP3 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D DUP3 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94F DUP3 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x989 DUP3 PUSH2 0xA23 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0x9E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3D DUP2 PUSH2 0x920 JUMP JUMPDEST DUP2 EQ PUSH2 0xA48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA54 DUP2 PUSH2 0x932 JUMP JUMPDEST DUP2 EQ PUSH2 0xA5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA6B DUP2 PUSH2 0x944 JUMP JUMPDEST DUP2 EQ PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA82 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP2 EQ PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xD4 PUSH16 0x3A9F9236B39DA3C78AB9BDCA5D846D55 0xC4 SLT DIFFICULTY 0xD9 0x28 PUSH29 0xB73642DD7C596C64736F6C634300080700330000000000000000000000 ",
							"sourceMap": "8846:1171:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9739:275;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9623:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8941:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9507:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8870:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9381:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9739:275;9813:4;9829:21;9867:1;9853:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9829:40;;9890:5;9880:4;9885:1;9880:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;9916:4;;;;;;;;;;9906;9911:1;9906:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9941:4;;;;;;;;;;;9931;9936:1;9931:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9963:13;:27;;;9991:6;;9998:4;9963:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10004:1;9963:43;;;;;;;;:::i;:::-;;;;;;;;9956:50;;;9739:275;;;;:::o;9623:108::-;9679:7;9705:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9698:25;;9623:108;;;:::o;8941:64::-;;;;;;;;;;;;;:::o;9507:108::-;9563:7;9589:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9582:25;;9507:108;;;:::o;8870:64::-;;;;;;;;;;;;:::o;9381:118::-;9442:7;9468:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9461:30;;9381:118;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:139::-;820:5;858:6;845:20;836:29;;874:33;901:5;874:33;:::i;:::-;774:139;;;;:::o;919:143::-;976:5;1007:6;1001:13;992:22;;1023:33;1050:5;1023:33;:::i;:::-;919:143;;;;:::o;1085:385::-;1167:5;1216:3;1209:4;1201:6;1197:17;1193:27;1183:122;;1224:79;;:::i;:::-;1183:122;1334:6;1328:13;1359:105;1460:3;1452:6;1445:4;1437:6;1433:17;1359:105;:::i;:::-;1350:114;;1173:297;1085:385;;;;:::o;1476:165::-;1535:5;1573:6;1560:20;1551:29;;1589:46;1629:5;1589:46;:::i;:::-;1476:165;;;;:::o;1647:167::-;1707:5;1745:6;1732:20;1723:29;;1761:47;1802:5;1761:47;:::i;:::-;1647:167;;;;:::o;1820:143::-;1877:5;1908:6;1902:13;1893:22;;1924:33;1951:5;1924:33;:::i;:::-;1820:143;;;;:::o;1969:351::-;2039:6;2088:2;2076:9;2067:7;2063:23;2059:32;2056:119;;;2094:79;;:::i;:::-;2056:119;2214:1;2239:64;2295:7;2286:6;2275:9;2271:22;2239:64;:::i;:::-;2229:74;;2185:128;1969:351;;;;:::o;2326:554::-;2421:6;2470:2;2458:9;2449:7;2445:23;2441:32;2438:119;;;2476:79;;:::i;:::-;2438:119;2617:1;2606:9;2602:17;2596:24;2647:18;2639:6;2636:30;2633:117;;;2669:79;;:::i;:::-;2633:117;2774:89;2855:7;2846:6;2835:9;2831:22;2774:89;:::i;:::-;2764:99;;2567:306;2326:554;;;;:::o;2886:355::-;2958:6;3007:2;2995:9;2986:7;2982:23;2978:32;2975:119;;;3013:79;;:::i;:::-;2975:119;3133:1;3158:66;3216:7;3207:6;3196:9;3192:22;3158:66;:::i;:::-;3148:76;;3104:130;2886:355;;;;:::o;3247:502::-;3329:6;3337;3386:2;3374:9;3365:7;3361:23;3357:32;3354:119;;;3392:79;;:::i;:::-;3354:119;3512:1;3537:67;3596:7;3587:6;3576:9;3572:22;3537:67;:::i;:::-;3527:77;;3483:131;3653:2;3679:53;3724:7;3715:6;3704:9;3700:22;3679:53;:::i;:::-;3669:63;;3624:118;3247:502;;;;;:::o;3755:351::-;3825:6;3874:2;3862:9;3853:7;3849:23;3845:32;3842:119;;;3880:79;;:::i;:::-;3842:119;4000:1;4025:64;4081:7;4072:6;4061:9;4057:22;4025:64;:::i;:::-;4015:74;;3971:128;3755:351;;;;:::o;4112:179::-;4181:10;4202:46;4244:3;4236:6;4202:46;:::i;:::-;4280:4;4275:3;4271:14;4257:28;;4112:179;;;;:::o;4297:108::-;4374:24;4392:5;4374:24;:::i;:::-;4369:3;4362:37;4297:108;;:::o;4411:118::-;4498:24;4516:5;4498:24;:::i;:::-;4493:3;4486:37;4411:118;;:::o;4565:732::-;4684:3;4713:54;4761:5;4713:54;:::i;:::-;4783:86;4862:6;4857:3;4783:86;:::i;:::-;4776:93;;4893:56;4943:5;4893:56;:::i;:::-;4972:7;5003:1;4988:284;5013:6;5010:1;5007:13;4988:284;;;5089:6;5083:13;5116:63;5175:3;5160:13;5116:63;:::i;:::-;5109:70;;5202:60;5255:6;5202:60;:::i;:::-;5192:70;;5048:224;5035:1;5032;5028:9;5023:14;;4988:284;;;4992:14;5288:3;5281:10;;4689:608;;;4565:732;;;;:::o;5303:118::-;5390:24;5408:5;5390:24;:::i;:::-;5385:3;5378:37;5303:118;;:::o;5427:222::-;5520:4;5558:2;5547:9;5543:18;5535:26;;5571:71;5639:1;5628:9;5624:17;5615:6;5571:71;:::i;:::-;5427:222;;;;:::o;5655:::-;5748:4;5786:2;5775:9;5771:18;5763:26;;5799:71;5867:1;5856:9;5852:17;5843:6;5799:71;:::i;:::-;5655:222;;;;:::o;5883:483::-;6054:4;6092:2;6081:9;6077:18;6069:26;;6105:71;6173:1;6162:9;6158:17;6149:6;6105:71;:::i;:::-;6223:9;6217:4;6213:20;6208:2;6197:9;6193:18;6186:48;6251:108;6354:4;6345:6;6251:108;:::i;:::-;6243:116;;5883:483;;;;;:::o;6372:129::-;6406:6;6433:20;;:::i;:::-;6423:30;;6462:33;6490:4;6482:6;6462:33;:::i;:::-;6372:129;;;:::o;6507:75::-;6540:6;6573:2;6567:9;6557:19;;6507:75;:::o;6588:311::-;6665:4;6755:18;6747:6;6744:30;6741:56;;;6777:18;;:::i;:::-;6741:56;6827:4;6819:6;6815:17;6807:25;;6887:4;6881;6877:15;6869:23;;6588:311;;;:::o;6905:132::-;6972:4;6995:3;6987:11;;7025:4;7020:3;7016:14;7008:22;;6905:132;;;:::o;7043:114::-;7110:6;7144:5;7138:12;7128:22;;7043:114;;;:::o;7163:113::-;7233:4;7265;7260:3;7256:14;7248:22;;7163:113;;;:::o;7282:184::-;7381:11;7415:6;7410:3;7403:19;7455:4;7450:3;7446:14;7431:29;;7282:184;;;;:::o;7472:96::-;7509:7;7538:24;7556:5;7538:24;:::i;:::-;7527:35;;7472:96;;;:::o;7574:109::-;7624:7;7653:24;7671:5;7653:24;:::i;:::-;7642:35;;7574:109;;;:::o;7689:110::-;7740:7;7769:24;7787:5;7769:24;:::i;:::-;7758:35;;7689:110;;;:::o;7805:126::-;7842:7;7882:42;7875:5;7871:54;7860:65;;7805:126;;;:::o;7937:77::-;7974:7;8003:5;7992:16;;7937:77;;;:::o;8020:281::-;8103:27;8125:4;8103:27;:::i;:::-;8095:6;8091:40;8233:6;8221:10;8218:22;8197:18;8185:10;8182:34;8179:62;8176:88;;;8244:18;;:::i;:::-;8176:88;8284:10;8280:2;8273:22;8063:238;8020:281;;:::o;8307:180::-;8355:77;8352:1;8345:88;8452:4;8449:1;8442:15;8476:4;8473:1;8466:15;8493:180;8541:77;8538:1;8531:88;8638:4;8635:1;8628:15;8662:4;8659:1;8652:15;8679:117;8788:1;8785;8778:12;8802:117;8911:1;8908;8901:12;8925:117;9034:1;9031;9024:12;9048:117;9157:1;9154;9147:12;9171:102;9212:6;9263:2;9259:7;9254:2;9247:5;9243:14;9239:28;9229:38;;9171:102;;;:::o;9279:122::-;9352:24;9370:5;9352:24;:::i;:::-;9345:5;9342:35;9332:63;;9391:1;9388;9381:12;9332:63;9279:122;:::o;9407:148::-;9493:37;9524:5;9493:37;:::i;:::-;9486:5;9483:48;9473:76;;9545:1;9542;9535:12;9473:76;9407:148;:::o;9561:150::-;9648:38;9680:5;9648:38;:::i;:::-;9641:5;9638:49;9628:77;;9701:1;9698;9691:12;9628:77;9561:150;:::o;9717:122::-;9790:24;9808:5;9790:24;:::i;:::-;9783:5;9780:35;9770:63;;9829:1;9826;9819:12;9770:63;9717:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "551600",
								"executionCost": "71227",
								"totalCost": "622827"
							},
							"external": {
								"BUSD()": "2536",
								"WBNB()": "2577",
								"price(address,address)": "infinite",
								"token0(address)": "infinite",
								"token1(address)": "infinite",
								"totalSupply(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8892,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8963,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9029,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 10017,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012d46f3a9f9236b39da3c78ab9bdca5d846d55c41244d9287cb73642dd7c596c64736f6c63430008070033",
									".code": [
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "2B00490D"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "37823795"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "76BF39A3"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "E4DC2AA4"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 10017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9813,
											"end": 9817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9867,
											"end": 9868,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9890,
											"end": 9895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 9886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9936,
											"end": 9937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 9990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9990,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 9991,
											"end": 9997,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9991,
											"end": 9997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9963,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 10006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9956,
											"end": 10006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9956,
											"end": 10006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9956,
											"end": 10006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10014,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9705,
											"end": 9721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9721,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9731,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9582,
											"end": 9607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9582,
											"end": 9607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9615,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9442,
											"end": 9449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9468,
											"end": 9489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9468,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9461,
											"end": 9491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9461,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 976,
											"end": 981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1460,
											"end": 1463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1580,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2086,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2091,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2295,
											"end": 2302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2473,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2666,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3010,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3372,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3384,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3392,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3354,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3537,
											"end": 3604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3537,
											"end": 3604,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3537,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3749,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3755,
											"end": 4106,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3755,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3853,
											"end": 3860,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3961,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3842,
											"end": 3961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3961,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3842,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4081,
											"end": 4088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4025,
											"end": 4089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4025,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 4099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 4106,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 4106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 4106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 4106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 4106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4112,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4112,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4244,
											"end": 4247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4202,
											"end": 4248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4202,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4202,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4297,
											"end": 4405,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4297,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4405,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4411,
											"end": 4529,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4411,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4516,
											"end": 4521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4565,
											"end": 5297,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4565,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4761,
											"end": 4766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4713,
											"end": 4767,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4713,
											"end": 4767,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4713,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4783,
											"end": 4869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4783,
											"end": 4869,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4783,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4869,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4943,
											"end": 4948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4893,
											"end": 4949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4893,
											"end": 4949,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4893,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5020,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5175,
											"end": 5178,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5116,
											"end": 5179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5116,
											"end": 5179,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5116,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5179,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5255,
											"end": 5261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5202,
											"end": 5262,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5262,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5202,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5262,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5032,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4988,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5291,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 5297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 5297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 5297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 5297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 5297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 5297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 5297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 5297,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5303,
											"end": 5421,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5303,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5408,
											"end": 5413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5390,
											"end": 5414,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5390,
											"end": 5414,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5390,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5421,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5427,
											"end": 5649,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5427,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5624,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5571,
											"end": 5642,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5571,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5571,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5649,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5649,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5655,
											"end": 5877,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5655,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5786,
											"end": 5788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5775,
											"end": 5784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5799,
											"end": 5870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5799,
											"end": 5870,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5799,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6105,
											"end": 6176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6105,
											"end": 6176,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6105,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6354,
											"end": 6358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6251,
											"end": 6359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6251,
											"end": 6359,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6251,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6372,
											"end": 6501,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6372,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6433,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 6433,
											"end": 6453,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6433,
											"end": 6453,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6433,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6462,
											"end": 6495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6462,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6462,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6507,
											"end": 6582,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 6507,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6575,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6567,
											"end": 6576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6582,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6588,
											"end": 6899,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6588,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6774,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6797,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6741,
											"end": 6797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6797,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6741,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6832,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6899,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6905,
											"end": 7037,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6905,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 6998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 7023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 7037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 7037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 7037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 7037,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7043,
											"end": 7157,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7043,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7110,
											"end": 7116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7150,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7128,
											"end": 7150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7128,
											"end": 7150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7163,
											"end": 7276,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7163,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7276,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7282,
											"end": 7466,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7282,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7410,
											"end": 7413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7466,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7466,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7472,
											"end": 7568,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7472,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7538,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7556,
											"end": 7561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7538,
											"end": 7562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7538,
											"end": 7562,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7538,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7472,
											"end": 7568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7472,
											"end": 7568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7472,
											"end": 7568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7472,
											"end": 7568,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7574,
											"end": 7683,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7574,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7671,
											"end": 7676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7653,
											"end": 7677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7653,
											"end": 7677,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7653,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7683,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7689,
											"end": 7799,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 7689,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7787,
											"end": 7792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7769,
											"end": 7793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7769,
											"end": 7793,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7769,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7799,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7805,
											"end": 7931,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7805,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7924,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7875,
											"end": 7880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7871,
											"end": 7925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7931,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7937,
											"end": 8014,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7937,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8003,
											"end": 8008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 8014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 8014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 8014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 8014,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8020,
											"end": 8301,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8020,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8125,
											"end": 8129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8103,
											"end": 8130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8103,
											"end": 8130,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8103,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8240,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8215,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8182,
											"end": 8216,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8179,
											"end": 8241,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8264,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8176,
											"end": 8264,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8264,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8176,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8282,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8273,
											"end": 8295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8301,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8307,
											"end": 8487,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 8307,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8432,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8456,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8476,
											"end": 8480,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8473,
											"end": 8474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8481,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8673,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 8493,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8638,
											"end": 8642,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8635,
											"end": 8636,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8628,
											"end": 8643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8659,
											"end": 8660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8652,
											"end": 8667,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8679,
											"end": 8796,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8679,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8788,
											"end": 8789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8919,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 8802,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8913,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9042,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8925,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9024,
											"end": 9036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9165,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9048,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9273,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 9171,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9265,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9259,
											"end": 9266,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9254,
											"end": 9256,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9247,
											"end": 9252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9243,
											"end": 9257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9267,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9279,
											"end": 9401,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9279,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9370,
											"end": 9375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9345,
											"end": 9350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9342,
											"end": 9377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9332,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9332,
											"end": 9395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9393,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9332,
											"end": 9395,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9332,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9407,
											"end": 9555,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9407,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 9524,
											"end": 9529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9483,
											"end": 9531,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 9473,
											"end": 9549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9549,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 9473,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9555,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9561,
											"end": 9711,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 9561,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9648,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 9680,
											"end": 9685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9648,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9648,
											"end": 9686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9648,
											"end": 9686,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 9648,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9687,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9628,
											"end": 9705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9703,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9705,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9628,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9717,
											"end": 9839,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9717,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9808,
											"end": 9813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 9790,
											"end": 9814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9790,
											"end": 9814,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9790,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9783,
											"end": 9788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9780,
											"end": 9815,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9770,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9770,
											"end": 9833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9831,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9770,
											"end": 9833,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9770,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9839,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"WBNB()": "8dd95002",
							"price(address,address)": "2b00490d",
							"token0(address)": "76bf39a3",
							"token1(address)": "37823795",
							"totalSupply(address)": "e4dc2aa4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x55961508579ca583694a3020e46edd617a48ca8e762a9ba967fd16daa0edf358\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae981e57c14464ae49de172f470feed65d84e2628879594596eeedbf2415649\",\"dweb:/ipfs/QmRv6nvndeDYcMxLTzViv35ZcidBy2ELeBdSAn9dEKMzzj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 338,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x55961508579ca583694a3020e46edd617a48ca8e762a9ba967fd16daa0edf358\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae981e57c14464ae49de172f470feed65d84e2628879594596eeedbf2415649\",\"dweb:/ipfs/QmRv6nvndeDYcMxLTzViv35ZcidBy2ELeBdSAn9dEKMzzj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							317
						],
						"IERC20": [
							25
						],
						"LpUtils": [
							426
						],
						"Router": [
							329
						]
					},
					"id": 427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "IERC20",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:0"
									},
									"scope": 25,
									"src": "158:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "230:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 25,
									"src": "221:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 25,
									"src": "279:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:17:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:9:0"
									},
									"scope": 25,
									"src": "337:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 427,
							"src": "60:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "Address",
							"nameLocation": "420:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1486:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 33,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1737:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1715:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 38,
												"nodeType": "Return",
												"src": "1708:30:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "435:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1429:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:0"
									},
									"scope": 317,
									"src": "1420:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2752:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 51,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2779:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 49,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2771:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2771:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2771:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 54,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2771:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2763:73:0"
											},
											{
												"assignments": [
													60,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2855:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "2850:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 61,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2868:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 63,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2890:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2868:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2849:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2912:78:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1754:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2716:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2700:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2699:43:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:0"
									},
									"scope": 317,
									"src": "2681:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3849:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 84,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															91,
															111
														],
														"referencedDeclaration": 111,
														"src": "3867:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 83,
												"id": 89,
												"nodeType": "Return",
												"src": "3860:67:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3006:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3769:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3798:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:35:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3835:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 81,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:14:0"
									},
									"scope": 317,
									"src": "3760:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4316:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 107,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "4373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 103,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4334:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 109,
												"nodeType": "Return",
												"src": "4327:59:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3943:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4174:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4205:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4197:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4222:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4264:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4250:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:97:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4302:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4301:14:0"
									},
									"scope": 317,
									"src": "4165:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4916:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4977:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 123,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4934:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4934:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 129,
												"nodeType": "Return",
												"src": "4927:94:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4402:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4778:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:84:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:14:0"
									},
									"scope": 317,
									"src": "4769:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5469:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 148,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 146,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5488:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5488:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5488:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5513:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5488:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5520:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5480:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "5591:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5580:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5600:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5572:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5651:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5646:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5673:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5660:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [
														{
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5687:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5687:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5645:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 176,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 177,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 174,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "5736:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 144,
												"id": 179,
												"nodeType": "Return",
												"src": "5729:58:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5037:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5294:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5417:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5403:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:121:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5455:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:14:0"
									},
									"scope": 317,
									"src": "5285:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "6080:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6131:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 191,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															198,
															233
														],
														"referencedDeclaration": 233,
														"src": "6098:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 196,
												"nodeType": "Return",
												"src": "6091:80:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5803:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5989:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:35:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6066:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:14:0"
									},
									"scope": 317,
									"src": "5980:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6533:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6563:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 211,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "6552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6552:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6572:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6544:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6544:67:0"
											},
											{
												"assignments": [
													218,
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6630:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6625:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 217,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6652:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6639:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [
														{
															"id": 223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6666:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6624:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 229,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 226,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "6707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 209,
												"id": 231,
												"nodeType": "Return",
												"src": "6700:58:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "6187:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6380:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6476:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6462:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:97:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6519:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:14:0"
									},
									"scope": 317,
									"src": "6371:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "7050:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 243,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															285
														],
														"referencedDeclaration": 285,
														"src": "7068:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "7061:84:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "6774:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6962:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:35:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7036:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7035:14:0"
									},
									"scope": 317,
									"src": "6953:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7506:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 264,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "7536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "7525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7525:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7545:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7517:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "7517:69:0"
											},
											{
												"assignments": [
													270,
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7605:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7600:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7627:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7614:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "7661:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "7641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7641:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7641:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7599:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "7701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7710:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "7722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 278,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "7684:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 283,
												"nodeType": "Return",
												"src": "7677:58:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "7161:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7356:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7412:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:97:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7492:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:14:0"
									},
									"scope": 317,
									"src": "7347:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "8135:548:0",
										"statements": [
											{
												"condition": {
													"id": 297,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "8150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "8209:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8295:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8295:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8295:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 311,
																"nodeType": "Block",
																"src": "8610:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 308,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "8636:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 307,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8629:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8629:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 310,
																		"nodeType": "ExpressionStatement",
																		"src": "8629:20:0"
																	}
																]
															},
															"id": 312,
															"nodeType": "IfStatement",
															"src": "8291:374:0",
															"trueBody": {
																"id": 306,
																"nodeType": "Block",
																"src": "8318:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8441:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8464:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8493:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8487:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8487:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8468:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8537:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8541:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8533:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8533:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8554:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8526:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8526:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8526:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8493:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8541:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 305,
																		"nodeType": "InlineAssembly",
																		"src": "8432:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 314,
												"nodeType": "IfStatement",
												"src": "8146:530:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "8159:44:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "8181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 296,
															"id": 299,
															"nodeType": "Return",
															"src": "8174:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7751:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7980:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8030:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8078:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8064:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:101:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:14:0"
									},
									"scope": 317,
									"src": "7971:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 427,
							"src": "412:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8752:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"nodeType": "ArrayTypeName",
													"src": "8752:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:38:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8816:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"nodeType": "ArrayTypeName",
													"src": "8816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:23:0"
									},
									"scope": 329,
									"src": "8714:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 427,
							"src": "8690:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 426,
							"linearizedBaseContracts": [
								426
							],
							"name": "LpUtils",
							"nameLocation": "8855:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 332,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8885:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "8870:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8870:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8892:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 335,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8956:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "8941:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8941:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8963:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9020:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "9012:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9012:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9029:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "9450:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 346,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "9468:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "9468:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9468:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 349,
												"nodeType": "Return",
												"src": "9461:30:0"
											}
										]
									},
									"functionSelector": "e4dc2aa4",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9390:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9409:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9402:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9402:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9401:18:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9441:9:0"
									},
									"scope": 426,
									"src": "9381:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9571:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 359,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "9589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "9589:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9589:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 358,
												"id": 362,
												"nodeType": "Return",
												"src": "9582:25:0"
											}
										]
									},
									"functionSelector": "76bf39a3",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "9516:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9530:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9523:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 352,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9523:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9522:18:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9563:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9562:9:0"
									},
									"scope": 426,
									"src": "9507:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "9687:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 372,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "9705:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "9705:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9705:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 371,
												"id": 375,
												"nodeType": "Return",
												"src": "9698:25:0"
											}
										]
									},
									"functionSelector": "37823795",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "9632:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9646:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "9639:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9639:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9639:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9638:18:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "9679:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9678:9:0"
									},
									"scope": 426,
									"src": "9623:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "9818:196:0",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9846:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "9829:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 390,
															"nodeType": "ArrayTypeName",
															"src": "9829:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9867:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9853:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9857:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 393,
															"nodeType": "ArrayTypeName",
															"src": "9857:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9853:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9829:40:0"
											},
											{
												"expression": {
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 398,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "9880:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 400,
														"indexExpression": {
															"hexValue": "30",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9885:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 401,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "9890:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9880:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "9880:15:0"
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 404,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "9906:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 406,
														"indexExpression": {
															"hexValue": "31",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9911:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9916:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9906:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "9906:14:0"
											},
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 410,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "9931:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 412,
														"indexExpression": {
															"hexValue": "32",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9936:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 413,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9941:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9931:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "9931:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 418,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "9991:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 419,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "9998:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 416,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "9963:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$329",
																	"typeString": "contract Router"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 328,
															"src": "9963:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9963:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 422,
													"indexExpression": {
														"hexValue": "32",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10004:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9963:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 423,
												"nodeType": "Return",
												"src": "9956:50:0"
											}
										]
									},
									"functionSelector": "2b00490d",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "9748:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9761:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "9754:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 378,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9754:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9754:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9784:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "9776:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9753:37:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "9813:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9812:6:0"
									},
									"scope": 426,
									"src": "9739:275:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 427,
							"src": "8846:1171:0",
							"usedErrors": []
						}
					],
					"src": "33:9984:0"
				},
				"id": 0
			}
		}
	}
}
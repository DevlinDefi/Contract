{
	"id": "dcec7aaed35b72ed4c54adfde8c4421a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStake.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-14\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2022-01-13\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\ninterface INFTMasterChef {\r\n    function enterStakingCompund(uint256 _amount, address _account) external;\r\n}\r\n\r\n// MasterChef is the master of DDT. He can make DDT and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous DDT. The ownership\r\n// will be transferred to a governance smart contract once DDT is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTStake is Ownable, IERC721Receiver {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256[] tokenIds;\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of DDTs\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accDDTPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accDDTPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC721 NFTToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. DDTs to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that DDTs distribution occurs.\r\n        uint256 accDDTPerShare; // Accumulated DDTs per share, times 1e12. See below.\r\n    }\r\n\r\n    INFTMasterChef public NFTMasterChef;\r\n\r\n    // The DDT TOKEN!\r\n    IERC20 public DDT;\r\n    // Dev address.\r\n    address public devaddr;\r\n    // DDT tokens created per block.\r\n    uint256 public DDTPerBlock;\r\n    // Bonus muliplier for early DDT makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of DDT. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when DDT mining starts.\r\n    uint256 public startBlock;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DDT,\r\n        INFTMasterChef _NFTMasterChef,\r\n        address _devaddr,\r\n        uint256 _DDTPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DDT = _DDT;\r\n        NFTMasterChef = _NFTMasterChef;\r\n        devaddr = _devaddr;\r\n        DDTPerBlock = _DDTPerBlock;\r\n        startBlock = _startBlock;\r\n    }\r\n\r\n    /**\r\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                NFTToken: _NFTToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accDDTPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's DDT allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        return user.tokenIds;\r\n    }\r\n\r\n    // View function to see pending DDTs on frontend.\r\n    function pendingDDT(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accDDTPerShare = pool.accDDTPerShare;\r\n        uint256 NFTSupply = pool.NFTToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && NFTSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accDDTPerShare = accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply));\r\n        }\r\n        return user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 NFTSupply = pool.NFTToken.balanceOf(address(this));\r\n        if (NFTSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        DDT.mint(address(this), DDTReward);\r\n        pool.accDDTPerShare = pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit NFT tokens to MasterChef for DDT allocation.\r\n    function deposit(uint256 _pid, uint256 _tokenId) public {\r\n        require(_tokenId != 0, 'Token id is not good');\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDDTTransfer(msg.sender, pending);\r\n            }\r\n        }\r\n        pool.NFTToken.safeTransferFrom(address(msg.sender), address(this), _tokenId);\r\n        user.amount = user.amount.add(1);\r\n        user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n        user.tokenIds.push(_tokenId);\r\n        emit Deposit(msg.sender, _pid, _tokenId);\r\n    }\r\n\r\n    // Withdraw NFT tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _tokenId) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        require(user.amount > 0, 'withdraw: not good');\r\n\r\n        uint256 pending;\r\n        if(_tokenId == 0){\r\n            updatePool(_pid);\r\n            pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDDTTransfer(msg.sender, pending);\r\n            }\r\n            user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n        }else {\r\n            uint256 hasTokenId = 0;\r\n            uint256 tokenIdIndex;\r\n            for(uint256 i; i<user.tokenIds.length; i++){\r\n                if(user.tokenIds[i] == _tokenId){\r\n                    hasTokenId = 1;\r\n                    tokenIdIndex = i;\r\n                }\r\n            }\r\n            require(hasTokenId == 1, 'You are not Owner of token id');\r\n            \r\n            updatePool(_pid);\r\n            pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDDTTransfer(msg.sender, pending);\r\n            }\r\n            user.amount = user.amount.sub(1);\r\n            user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n            delete user.tokenIds[tokenIdIndex];\r\n            pool.NFTToken.safeTransferFrom(address(this), address(msg.sender), _tokenId);\r\n        }\r\n        emit Withdraw(msg.sender, _pid, _tokenId);\r\n    }\r\n\r\n    function compundDDT(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n        require(pending > 0, \"Amount is zero\");\r\n        DDT.approve(address(NFTMasterChef), pending);\r\n        NFTMasterChef.enterStakingCompund(pending, msg.sender);\r\n        user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, _pid, pending);\r\n    }\r\n\r\n    // Safe DDT transfer function, just in case if rounding error causes pool to not have enough DDTs.\r\n    function safeDDTTransfer(address _to, uint256 _amount) internal {\r\n        uint256 DDTbal = DDT.balanceOf(address(this));\r\n        if (_amount > DDTbal) {\r\n            DDT.transfer(_to, DDTbal);\r\n        } else {\r\n            DDT.transfer(_to, _amount);\r\n        }\r\n    }\r\n\r\n    function setDevAddress(address _devaddr) public onlyOwner {\r\n        devaddr = _devaddr;\r\n    }\r\n\r\n    function updateDDTPerBlock(uint256 newAmount) public onlyOwner {\r\n        DDTPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTStake.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":7883:16157  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":7883:16157  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b1deb0dde6f8d4476eb6159df732ebd3b031849e9e497a1d8a7e742acd2a910e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1deb0dde6f8d4476eb6159df732ebd3b031849e9e497a1d8a7e742acd2a910e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xDE 0xB0 0xDD 0xE6 0xF8 0xD4 SELFBALANCE PUSH15 0xB6159DF732EBD3B031849E9E497A1D DUP11 PUSH31 0x742ACD2A910E64736F6C634300080700330000000000000000000000000000 ",
							"sourceMap": "7883:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1deb0dde6f8d4476eb6159df732ebd3b031849e9e497a1d8a7e742acd2a910e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xDE 0xB0 0xDD 0xE6 0xF8 0xD4 SELFBALANCE PUSH15 0xB6159DF732EBD3B031849E9E497A1D DUP11 PUSH31 0x742ACD2A910E64736F6C634300080700330000000000000000000000000000 ",
							"sourceMap": "7883:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1deb0dde6f8d4476eb6159df732ebd3b031849e9e497a1d8a7e742acd2a910e64736f6c63430008070033",
									".code": [
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"INFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "enterStakingCompund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"enterStakingCompund(uint256,address)": "cf35fddf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"enterStakingCompund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"INFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DDT",
									"type": "address"
								},
								{
									"internalType": "contract INFTMasterChef",
									"name": "_NFTMasterChef",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_DDTPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDT",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDTPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFTMasterChef",
							"outputs": [
								{
									"internalType": "contract INFTMasterChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC721",
									"name": "_NFTToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "compundDDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devaddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserTokenIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingDDT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFTToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accDDTPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								}
							],
							"name": "setDevAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updateDDTPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":28014:38579  contract NFTStake is Ownable, IERC721Receiver {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStake.sol\":29679:29680  1 */\n  0x01\n    /* \"contracts/NFTStake.sol\":29645:29680  uint256 public BONUS_MULTIPLIER = 1 */\n  0x05\n  sstore\n    /* \"contracts/NFTStake.sol\":30120:30121  0 */\n  0x00\n    /* \"contracts/NFTStake.sol\":30087:30121  uint256 public totalAllocPoint = 0 */\n  0x09\n  sstore\n    /* \"contracts/NFTStake.sol\":30495:30835  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTStake.sol\":20054:20086  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTStake.sol\":20073:20085  _msgSender() */\n  tag_8\n    /* \"contracts/NFTStake.sol\":20073:20083  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTStake.sol\":20073:20085  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTStake.sol\":20054:20072  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTStake.sol\":20054:20086  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTStake.sol\":30681:30685  _DDT */\n  dup5\n    /* \"contracts/NFTStake.sol\":30675:30678  DDT */\n  0x02\n  0x00\n    /* \"contracts/NFTStake.sol\":30675:30685  DDT = _DDT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30712:30726  _NFTMasterChef */\n  dup4\n    /* \"contracts/NFTStake.sol\":30696:30709  NFTMasterChef */\n  0x01\n  0x00\n    /* \"contracts/NFTStake.sol\":30696:30726  NFTMasterChef = _NFTMasterChef */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30747:30755  _devaddr */\n  dup3\n    /* \"contracts/NFTStake.sol\":30737:30744  devaddr */\n  0x03\n  0x00\n    /* \"contracts/NFTStake.sol\":30737:30755  devaddr = _devaddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30780:30792  _DDTPerBlock */\n  dup2\n    /* \"contracts/NFTStake.sol\":30766:30777  DDTPerBlock */\n  0x04\n    /* \"contracts/NFTStake.sol\":30766:30792  DDTPerBlock = _DDTPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30816:30827  _startBlock */\n  dup1\n    /* \"contracts/NFTStake.sol\":30803:30813  startBlock */\n  0x0a\n    /* \"contracts/NFTStake.sol\":30803:30827  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30495:30835  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/NFTStake.sol\":28014:38579  contract NFTStake is Ownable, IERC721Receiver {\r... */\n  jump(tag_12)\n    /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {\r... */\ntag_9:\n    /* \"contracts/NFTStake.sol\":19602:19609  address */\n  0x00\n    /* \"contracts/NFTStake.sol\":19629:19639  msg.sender */\n  caller\n    /* \"contracts/NFTStake.sol\":19622:19639  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"contracts/NFTStake.sol\":21519:21535  address oldOwner */\n  0x00\n    /* \"contracts/NFTStake.sol\":21538:21544  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTStake.sol\":21519:21544  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTStake.sol\":21564:21572  newOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21555:21561  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTStake.sol\":21555:21572  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":21619:21627  newOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTStake.sol\":21609:21617  oldOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTStake.sol\":21508:21636  {\r... */\n  pop\n    /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_16:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_18\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:327   */\ntag_20:\n    /* \"#utility.yul\":227:232   */\n  0x00\n    /* \"#utility.yul\":258:264   */\n  dup2\n    /* \"#utility.yul\":252:265   */\n  mload\n    /* \"#utility.yul\":243:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":274:321   */\n  tag_22\n    /* \"#utility.yul\":315:320   */\n  dup2\n    /* \"#utility.yul\":274:321   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":156:327   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:522   */\ntag_24:\n    /* \"#utility.yul\":413:418   */\n  0x00\n    /* \"#utility.yul\":444:450   */\n  dup2\n    /* \"#utility.yul\":438:451   */\n  mload\n    /* \"#utility.yul\":429:451   */\n  swap1\n  pop\n    /* \"#utility.yul\":460:516   */\n  tag_26\n    /* \"#utility.yul\":510:515   */\n  dup2\n    /* \"#utility.yul\":460:516   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":333:522   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":528:671   */\ntag_28:\n    /* \"#utility.yul\":585:590   */\n  0x00\n    /* \"#utility.yul\":616:622   */\n  dup2\n    /* \"#utility.yul\":610:623   */\n  mload\n    /* \"#utility.yul\":601:623   */\n  swap1\n  pop\n    /* \"#utility.yul\":632:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":632:665   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":528:671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":677:1728   */\ntag_3:\n    /* \"#utility.yul\":820:826   */\n  0x00\n    /* \"#utility.yul\":828:834   */\n  dup1\n    /* \"#utility.yul\":836:842   */\n  0x00\n    /* \"#utility.yul\":844:850   */\n  dup1\n    /* \"#utility.yul\":852:858   */\n  0x00\n    /* \"#utility.yul\":901:904   */\n  0xa0\n    /* \"#utility.yul\":889:898   */\n  dup7\n    /* \"#utility.yul\":880:887   */\n  dup9\n    /* \"#utility.yul\":876:899   */\n  sub\n    /* \"#utility.yul\":872:905   */\n  slt\n    /* \"#utility.yul\":869:989   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":908:987   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":869:989   */\ntag_33:\n    /* \"#utility.yul\":1028:1029   */\n  0x00\n    /* \"#utility.yul\":1053:1131   */\n  tag_36\n    /* \"#utility.yul\":1123:1130   */\n  dup9\n    /* \"#utility.yul\":1114:1120   */\n  dup3\n    /* \"#utility.yul\":1103:1112   */\n  dup10\n    /* \"#utility.yul\":1099:1121   */\n  add\n    /* \"#utility.yul\":1053:1131   */\n  tag_20\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1043:1131   */\n  swap6\n  pop\n    /* \"#utility.yul\":999:1141   */\n  pop\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1206:1293   */\n  tag_37\n    /* \"#utility.yul\":1285:1292   */\n  dup9\n    /* \"#utility.yul\":1276:1282   */\n  dup3\n    /* \"#utility.yul\":1265:1274   */\n  dup10\n    /* \"#utility.yul\":1261:1283   */\n  add\n    /* \"#utility.yul\":1206:1293   */\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1196:1293   */\n  swap5\n  pop\n    /* \"#utility.yul\":1151:1303   */\n  pop\n    /* \"#utility.yul\":1342:1344   */\n  0x40\n    /* \"#utility.yul\":1368:1432   */\n  tag_38\n    /* \"#utility.yul\":1424:1431   */\n  dup9\n    /* \"#utility.yul\":1415:1421   */\n  dup3\n    /* \"#utility.yul\":1404:1413   */\n  dup10\n    /* \"#utility.yul\":1400:1422   */\n  add\n    /* \"#utility.yul\":1368:1432   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1358:1432   */\n  swap4\n  pop\n    /* \"#utility.yul\":1313:1442   */\n  pop\n    /* \"#utility.yul\":1481:1483   */\n  0x60\n    /* \"#utility.yul\":1507:1571   */\n  tag_39\n    /* \"#utility.yul\":1563:1570   */\n  dup9\n    /* \"#utility.yul\":1554:1560   */\n  dup3\n    /* \"#utility.yul\":1543:1552   */\n  dup10\n    /* \"#utility.yul\":1539:1561   */\n  add\n    /* \"#utility.yul\":1507:1571   */\n  tag_28\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1497:1571   */\n  swap3\n  pop\n    /* \"#utility.yul\":1452:1581   */\n  pop\n    /* \"#utility.yul\":1620:1623   */\n  0x80\n    /* \"#utility.yul\":1647:1711   */\n  tag_40\n    /* \"#utility.yul\":1703:1710   */\n  dup9\n    /* \"#utility.yul\":1694:1700   */\n  dup3\n    /* \"#utility.yul\":1683:1692   */\n  dup10\n    /* \"#utility.yul\":1679:1701   */\n  add\n    /* \"#utility.yul\":1647:1711   */\n  tag_28\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1637:1711   */\n  swap2\n  pop\n    /* \"#utility.yul\":1591:1721   */\n  pop\n    /* \"#utility.yul\":677:1728   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1815:1911   */\ntag_43:\n    /* \"#utility.yul\":1852:1859   */\n  0x00\n    /* \"#utility.yul\":1881:1905   */\n  tag_45\n    /* \"#utility.yul\":1899:1904   */\n  dup3\n    /* \"#utility.yul\":1881:1905   */\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1870:1905   */\n  swap1\n  pop\n    /* \"#utility.yul\":1815:1911   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1917:2027   */\ntag_47:\n    /* \"#utility.yul\":1968:1975   */\n  0x00\n    /* \"#utility.yul\":1997:2021   */\n  tag_49\n    /* \"#utility.yul\":2015:2020   */\n  dup3\n    /* \"#utility.yul\":1997:2021   */\n  tag_43\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1986:2021   */\n  swap1\n  pop\n    /* \"#utility.yul\":1917:2027   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2033:2152   */\ntag_50:\n    /* \"#utility.yul\":2093:2100   */\n  0x00\n    /* \"#utility.yul\":2122:2146   */\n  tag_52\n    /* \"#utility.yul\":2140:2145   */\n  dup3\n    /* \"#utility.yul\":2122:2146   */\n  tag_43\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2111:2146   */\n  swap1\n  pop\n    /* \"#utility.yul\":2033:2152   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2158:2284   */\ntag_46:\n    /* \"#utility.yul\":2195:2202   */\n  0x00\n    /* \"#utility.yul\":2235:2277   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2228:2233   */\n  dup3\n    /* \"#utility.yul\":2224:2278   */\n  and\n    /* \"#utility.yul\":2213:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2158:2284   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2290:2367   */\ntag_54:\n    /* \"#utility.yul\":2327:2334   */\n  0x00\n    /* \"#utility.yul\":2356:2361   */\n  dup2\n    /* \"#utility.yul\":2345:2361   */\n  swap1\n  pop\n    /* \"#utility.yul\":2290:2367   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2496:2613   */\ntag_35:\n    /* \"#utility.yul\":2605:2606   */\n  0x00\n    /* \"#utility.yul\":2602:2603   */\n  dup1\n    /* \"#utility.yul\":2595:2607   */\n  revert\n    /* \"#utility.yul\":2619:2741   */\ntag_19:\n    /* \"#utility.yul\":2692:2716   */\n  tag_60\n    /* \"#utility.yul\":2710:2715   */\n  dup2\n    /* \"#utility.yul\":2692:2716   */\n  tag_43\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2685:2690   */\n  dup2\n    /* \"#utility.yul\":2682:2717   */\n  eq\n    /* \"#utility.yul\":2672:2735   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2731:2732   */\n  0x00\n    /* \"#utility.yul\":2728:2729   */\n  dup1\n    /* \"#utility.yul\":2721:2733   */\n  revert\n    /* \"#utility.yul\":2672:2735   */\ntag_61:\n    /* \"#utility.yul\":2619:2741   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2747:2897   */\ntag_23:\n    /* \"#utility.yul\":2834:2872   */\n  tag_63\n    /* \"#utility.yul\":2866:2871   */\n  dup2\n    /* \"#utility.yul\":2834:2872   */\n  tag_47\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2827:2832   */\n  dup2\n    /* \"#utility.yul\":2824:2873   */\n  eq\n    /* \"#utility.yul\":2814:2891   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2887:2888   */\n  0x00\n    /* \"#utility.yul\":2884:2885   */\n  dup1\n    /* \"#utility.yul\":2877:2889   */\n  revert\n    /* \"#utility.yul\":2814:2891   */\ntag_64:\n    /* \"#utility.yul\":2747:2897   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2903:3071   */\ntag_27:\n    /* \"#utility.yul\":2999:3046   */\n  tag_66\n    /* \"#utility.yul\":3040:3045   */\n  dup2\n    /* \"#utility.yul\":2999:3046   */\n  tag_50\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2992:2997   */\n  dup2\n    /* \"#utility.yul\":2989:3047   */\n  eq\n    /* \"#utility.yul\":2979:3065   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":3061:3062   */\n  0x00\n    /* \"#utility.yul\":3058:3059   */\n  dup1\n    /* \"#utility.yul\":3051:3063   */\n  revert\n    /* \"#utility.yul\":2979:3065   */\ntag_67:\n    /* \"#utility.yul\":2903:3071   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3077:3199   */\ntag_31:\n    /* \"#utility.yul\":3150:3174   */\n  tag_69\n    /* \"#utility.yul\":3168:3173   */\n  dup2\n    /* \"#utility.yul\":3150:3174   */\n  tag_54\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3143:3148   */\n  dup2\n    /* \"#utility.yul\":3140:3175   */\n  eq\n    /* \"#utility.yul\":3130:3193   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3189:3190   */\n  0x00\n    /* \"#utility.yul\":3186:3187   */\n  dup1\n    /* \"#utility.yul\":3179:3191   */\n  revert\n    /* \"#utility.yul\":3130:3193   */\ntag_70:\n    /* \"#utility.yul\":3077:3199   */\n  pop\n  jump\t// out\n    /* \"contracts/NFTStake.sol\":28014:38579  contract NFTStake is Ownable, IERC721Receiver {\r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":28014:38579  contract NFTStake is Ownable, IERC721Receiver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64482f79\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xcb3cba55\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe2bbb158\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe4d09896\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf395db2c\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xcb3cba55\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd0d41fe1\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd49e77cd\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd5545992\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x8aa28550\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x64482f79\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x23cf3118\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x51eb05a6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5ffe6146\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x612eee43\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x23cf3118\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x1526fe27\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2080baab\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1395d8c9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTStake.sol\":31232:31327  function poolLength() external view returns (uint256) {\r... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":37400:37977  function compundDDT(uint256 _pid) public {\r... */\n    tag_4:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/NFTStake.sol\":30929:31093  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\r... */\n    tag_5:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29846:29872  PoolInfo[] public poolInfo */\n    tag_6:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":30087:30121  uint256 public totalAllocPoint = 0 */\n    tag_7:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":31496:32058  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_8:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/NFTStake.sol\":33115:33868  function pendingDDT(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32534:32636  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_10:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/NFTStake.sol\":35854:37392  function withdraw(uint256 _pid, uint256 _tokenId) public {\r... */\n    tag_11:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/NFTStake.sol\":30177:30202  uint256 public startBlock */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":34207:34936  function updatePool(uint256 _pid) public {\r... */\n    tag_13:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/NFTStake.sol\":31101:31224  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_14:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/NFTStake.sol\":38471:38576  function updateDDTPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_15:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/NFTStake.sol\":33951:34131  function massUpdatePools() public {\r... */\n    tag_16:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/NFTStake.sol\":32153:32458  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_17:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_18:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/NFTStake.sol\":29783:29812  IMigratorChef public migrator */\n    tag_19:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29645:29680  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_20:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {\r... */\n    tag_21:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32712:32856  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_22:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29928:29992  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_23:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29454:29471  IERC20 public DDT */\n    tag_24:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":38368:38463  function setDevAddress(address _devaddr) public onlyOwner {\r... */\n    tag_25:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/NFTStake.sol\":29499:29521  address public devaddr */\n    tag_26:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32864:33052  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {\r... */\n    tag_27:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":35005:35801  function deposit(uint256 _pid, uint256 _tokenId) public {\r... */\n    tag_28:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/NFTStake.sol\":29387:29422  INFTMasterChef public NFTMasterChef */\n    tag_29:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_30:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      stop\n        /* \"contracts/NFTStake.sol\":29566:29592  uint256 public DDTPerBlock */\n    tag_31:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":31232:31327  function poolLength() external view returns (uint256) {\r... */\n    tag_40:\n        /* \"contracts/NFTStake.sol\":31277:31284  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31304:31312  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":31304:31319  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31297:31319  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31232:31327  function poolLength() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":37400:37977  function compundDDT(uint256 _pid) public {\r... */\n    tag_46:\n        /* \"contracts/NFTStake.sol\":37452:37473  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":37476:37484  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":37485:37489  _pid */\n      dup3\n        /* \"contracts/NFTStake.sol\":37476:37490  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n    tag_149:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":37452:37490  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37501:37522  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":37525:37533  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":37525:37539  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":37534:37538  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":37525:37539  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":37525:37551  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":37540:37550  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37525:37551  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":37501:37551  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37562:37578  updatePool(_pid) */\n      tag_153\n        /* \"contracts/NFTStake.sol\":37573:37577  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":37562:37572  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":37562:37578  updatePool(_pid) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/NFTStake.sol\":37589:37604  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":37607:37674  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_154\n        /* \"contracts/NFTStake.sol\":37658:37662  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":37658:37673  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37607:37653  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_155\n        /* \"contracts/NFTStake.sol\":37648:37652  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37607:37643  user.amount.mul(pool.accDDTPerShare) */\n      tag_156\n        /* \"contracts/NFTStake.sol\":37623:37627  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":37623:37642  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37607:37611  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":37607:37618  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37607:37622  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":37607:37643  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/NFTStake.sol\":37607:37647  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":37607:37653  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/NFTStake.sol\":37607:37657  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":37607:37674  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/NFTStake.sol\":37589:37674  uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37703:37704  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":37693:37700  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":37693:37704  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":37685:37723  require(pending > 0, \"Amount is zero\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/NFTStake.sol\":37734:37737  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37734:37745  DDT.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/NFTStake.sol\":37754:37767  NFTMasterChef */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37770:37777  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":37734:37778  DDT.approve(address(NFTMasterChef), pending) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      pop\n        /* \"contracts/NFTStake.sol\":37789:37802  NFTMasterChef */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37789:37822  NFTMasterChef.enterStakingCompund */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf35fddf\n        /* \"contracts/NFTStake.sol\":37823:37830  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":37832:37842  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37789:37843  NFTMasterChef.enterStakingCompund(pending, msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":37872:37918  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_175\n        /* \"contracts/NFTStake.sol\":37913:37917  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37872:37908  user.amount.mul(pool.accDDTPerShare) */\n      tag_176\n        /* \"contracts/NFTStake.sol\":37888:37892  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":37888:37907  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37872:37876  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":37872:37883  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37872:37887  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":37872:37908  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/NFTStake.sol\":37872:37912  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":37872:37918  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/NFTStake.sol\":37854:37858  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":37854:37869  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":37854:37918  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37955:37959  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":37943:37953  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37934:37969  Withdraw(msg.sender, _pid, pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTStake.sol\":37961:37968  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":37934:37969  Withdraw(msg.sender, _pid, pending) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":37441:37977  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":37400:37977  function compundDDT(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30929:31093  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\r... */\n    tag_50:\n        /* \"contracts/NFTStake.sol\":31029:31035  bytes4 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31055:31085  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/NFTStake.sol\":31048:31085  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":30929:31093  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29846:29872  PoolInfo[] public poolInfo */\n    tag_55:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30087:30121  uint256 public totalAllocPoint = 0 */\n    tag_59:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":31496:32058  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_64:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_184\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/NFTStake.sol\":31601:31612  _withUpdate */\n      dup1\n        /* \"contracts/NFTStake.sol\":31597:31658  if (_withUpdate) {\r... */\n      iszero\n      tag_189\n      jumpi\n        /* \"contracts/NFTStake.sol\":31629:31646  massUpdatePools() */\n      tag_190\n        /* \"contracts/NFTStake.sol\":31629:31644  massUpdatePools */\n      tag_91\n        /* \"contracts/NFTStake.sol\":31629:31646  massUpdatePools() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/NFTStake.sol\":31597:31658  if (_withUpdate) {\r... */\n    tag_189:\n        /* \"contracts/NFTStake.sol\":31668:31691  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTStake.sol\":31709:31719  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTStake.sol\":31694:31706  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":31694:31719  block.number > startBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":31694:31747  block.number > startBlock ? block.number : startBlock */\n      tag_191\n      jumpi\n        /* \"contracts/NFTStake.sol\":31737:31747  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTStake.sol\":31694:31747  block.number > startBlock ? block.number : startBlock */\n      jump(tag_192)\n    tag_191:\n        /* \"contracts/NFTStake.sol\":31722:31734  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":31694:31747  block.number > startBlock ? block.number : startBlock */\n    tag_192:\n        /* \"contracts/NFTStake.sol\":31668:31747  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31776:31808  totalAllocPoint.add(_allocPoint) */\n      tag_193\n        /* \"contracts/NFTStake.sol\":31796:31807  _allocPoint */\n      dup5\n        /* \"contracts/NFTStake.sol\":31776:31791  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":31776:31795  totalAllocPoint.add */\n      tag_194\n      swap1\n        /* \"contracts/NFTStake.sol\":31776:31808  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"contracts/NFTStake.sol\":31758:31773  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTStake.sol\":31758:31808  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":31819:31827  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":31847:32039  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTStake.sol\":31885:31894  _NFTToken */\n      dup6\n        /* \"contracts/NFTStake.sol\":31847:32039  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":31925:31936  _allocPoint */\n      dup7\n        /* \"contracts/NFTStake.sol\":31847:32039  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":31972:31987  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTStake.sol\":31847:32039  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":32022:32023  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31847:32039  PoolInfo({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":31819:32050  poolInfo.push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":31586:32058  {\r... */\n      pop\n        /* \"contracts/NFTStake.sol\":31496:32058  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":33115:33868  function pendingDDT(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_68:\n        /* \"contracts/NFTStake.sol\":33187:33194  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":33206:33227  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTStake.sol\":33230:33238  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":33239:33243  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":33230:33244  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_198\n      tag_151\n      jump\t// in\n    tag_198:\n    tag_197:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":33206:33244  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33255:33276  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":33279:33287  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":33279:33293  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33288:33292  _pid */\n      dup7\n        /* \"contracts/NFTStake.sol\":33279:33293  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":33279:33300  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33294:33299  _user */\n      dup6\n        /* \"contracts/NFTStake.sol\":33279:33300  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":33255:33300  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33311:33333  uint256 accDDTPerShare */\n      0x00\n        /* \"contracts/NFTStake.sol\":33336:33340  pool */\n      dup3\n        /* \"contracts/NFTStake.sol\":33336:33355  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33311:33355  uint256 accDDTPerShare = pool.accDDTPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33366:33383  uint256 NFTSupply */\n      0x00\n        /* \"contracts/NFTStake.sol\":33386:33390  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":33386:33399  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":33386:33409  pool.NFTToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":33418:33422  this */\n      address\n        /* \"contracts/NFTStake.sol\":33386:33424  pool.NFTToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/NFTStake.sol\":33366:33424  uint256 NFTSupply = pool.NFTToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33454:33458  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":33454:33474  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33439:33451  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":33439:33474  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":33439:33492  block.number > pool.lastRewardBlock && NFTSupply != 0 */\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n        /* \"contracts/NFTStake.sol\":33491:33492  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":33478:33487  NFTSupply */\n      dup2\n        /* \"contracts/NFTStake.sol\":33478:33492  NFTSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTStake.sol\":33439:33492  block.number > pool.lastRewardBlock && NFTSupply != 0 */\n    tag_206:\n        /* \"contracts/NFTStake.sol\":33435:33781  if (block.number > pool.lastRewardBlock && NFTSupply != 0) {\r... */\n      iszero\n      tag_207\n      jumpi\n        /* \"contracts/NFTStake.sol\":33509:33527  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTStake.sol\":33530:33579  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_208\n        /* \"contracts/NFTStake.sol\":33544:33548  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":33544:33564  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33566:33578  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":33530:33543  getMultiplier */\n      tag_111\n        /* \"contracts/NFTStake.sol\":33530:33579  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/NFTStake.sol\":33509:33579  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33594:33611  uint256 DDTReward */\n      0x00\n        /* \"contracts/NFTStake.sol\":33614:33683  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_209\n        /* \"contracts/NFTStake.sol\":33667:33682  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":33614:33662  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      tag_210\n        /* \"contracts/NFTStake.sol\":33646:33650  pool */\n      dup9\n        /* \"contracts/NFTStake.sol\":33646:33661  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33614:33641  multiplier.mul(DDTPerBlock) */\n      tag_211\n        /* \"contracts/NFTStake.sol\":33629:33640  DDTPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTStake.sol\":33614:33624  multiplier */\n      dup8\n        /* \"contracts/NFTStake.sol\":33614:33628  multiplier.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33614:33641  multiplier.mul(DDTPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/NFTStake.sol\":33614:33645  multiplier.mul(DDTPerBlock).mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33614:33662  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/NFTStake.sol\":33614:33666  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":33614:33683  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/NFTStake.sol\":33594:33683  uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33715:33769  accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      tag_212\n        /* \"contracts/NFTStake.sol\":33734:33768  DDTReward.mul(1e12).div(NFTSupply) */\n      tag_213\n        /* \"contracts/NFTStake.sol\":33758:33767  NFTSupply */\n      dup5\n        /* \"contracts/NFTStake.sol\":33734:33753  DDTReward.mul(1e12) */\n      tag_214\n        /* \"contracts/NFTStake.sol\":33748:33752  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":33734:33743  DDTReward */\n      dup6\n        /* \"contracts/NFTStake.sol\":33734:33747  DDTReward.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33734:33753  DDTReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTStake.sol\":33734:33757  DDTReward.mul(1e12).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":33734:33768  DDTReward.mul(1e12).div(NFTSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/NFTStake.sol\":33715:33729  accDDTPerShare */\n      dup6\n        /* \"contracts/NFTStake.sol\":33715:33733  accDDTPerShare.add */\n      tag_194\n      swap1\n        /* \"contracts/NFTStake.sol\":33715:33769  accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/NFTStake.sol\":33698:33769  accDDTPerShare = accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTStake.sol\":33494:33781  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":33435:33781  if (block.number > pool.lastRewardBlock && NFTSupply != 0) {\r... */\n    tag_207:\n        /* \"contracts/NFTStake.sol\":33798:33860  user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_215\n        /* \"contracts/NFTStake.sol\":33844:33848  user */\n      dup4\n        /* \"contracts/NFTStake.sol\":33844:33859  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33798:33839  user.amount.mul(accDDTPerShare).div(1e12) */\n      tag_216\n        /* \"contracts/NFTStake.sol\":33834:33838  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":33798:33829  user.amount.mul(accDDTPerShare) */\n      tag_217\n        /* \"contracts/NFTStake.sol\":33814:33828  accDDTPerShare */\n      dup7\n        /* \"contracts/NFTStake.sol\":33798:33802  user */\n      dup9\n        /* \"contracts/NFTStake.sol\":33798:33809  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33798:33813  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33798:33829  user.amount.mul(accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/NFTStake.sol\":33798:33833  user.amount.mul(accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":33798:33839  user.amount.mul(accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"contracts/NFTStake.sol\":33798:33843  user.amount.mul(accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":33798:33860  user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"contracts/NFTStake.sol\":33791:33860  return user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":33115:33868  function pendingDDT(uint256 _pid, address _user) external view returns (uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32534:32636  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_73:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_219\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_220\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_187\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/NFTStake.sol\":32619:32628  _migrator */\n      dup1\n        /* \"contracts/NFTStake.sol\":32608:32616  migrator */\n      0x06\n      0x00\n        /* \"contracts/NFTStake.sol\":32608:32628  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32534:32636  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":35854:37392  function withdraw(uint256 _pid, uint256 _tokenId) public {\r... */\n    tag_77:\n        /* \"contracts/NFTStake.sol\":35922:35943  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":35946:35954  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":35955:35959  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35946:35960  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_226\n      tag_151\n      jump\t// in\n    tag_226:\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":35922:35960  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35971:35992  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":35995:36003  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":35995:36009  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":36004:36008  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":35995:36009  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35995:36021  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":36010:36020  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35995:36021  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35971:36021  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":36056:36057  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":36042:36046  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":36042:36053  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36042:36057  user.amount > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":36034:36080  require(user.amount > 0, 'withdraw: not good') */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/NFTStake.sol\":36093:36108  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":36134:36135  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":36122:36130  _tokenId */\n      dup5\n        /* \"contracts/NFTStake.sol\":36122:36135  _tokenId == 0 */\n      eq\n        /* \"contracts/NFTStake.sol\":36119:37333  if(_tokenId == 0){\r... */\n      iszero\n      tag_231\n      jumpi\n        /* \"contracts/NFTStake.sol\":36151:36167  updatePool(_pid) */\n      tag_232\n        /* \"contracts/NFTStake.sol\":36162:36166  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":36151:36161  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":36151:36167  updatePool(_pid) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/NFTStake.sol\":36192:36259  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_233\n        /* \"contracts/NFTStake.sol\":36243:36247  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":36243:36258  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36192:36238  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_234\n        /* \"contracts/NFTStake.sol\":36233:36237  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36192:36228  user.amount.mul(pool.accDDTPerShare) */\n      tag_235\n        /* \"contracts/NFTStake.sol\":36208:36212  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":36208:36227  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36192:36196  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":36192:36203  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36192:36207  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":36192:36228  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/NFTStake.sol\":36192:36232  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":36192:36238  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/NFTStake.sol\":36192:36242  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":36192:36259  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/NFTStake.sol\":36182:36259  pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":36287:36288  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":36277:36284  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":36277:36288  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":36274:36360  if(pending > 0){\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/NFTStake.sol\":36308:36344  safeDDTTransfer(msg.sender, pending) */\n      tag_237\n        /* \"contracts/NFTStake.sol\":36324:36334  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":36336:36343  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":36308:36323  safeDDTTransfer */\n      tag_238\n        /* \"contracts/NFTStake.sol\":36308:36344  safeDDTTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/NFTStake.sol\":36274:36360  if(pending > 0){\r... */\n    tag_236:\n        /* \"contracts/NFTStake.sol\":36392:36438  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_239\n        /* \"contracts/NFTStake.sol\":36433:36437  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36392:36428  user.amount.mul(pool.accDDTPerShare) */\n      tag_240\n        /* \"contracts/NFTStake.sol\":36408:36412  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":36408:36427  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36392:36396  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":36392:36403  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36392:36407  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":36392:36428  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/NFTStake.sol\":36392:36432  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":36392:36438  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/NFTStake.sol\":36374:36378  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":36374:36389  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":36374:36438  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":36119:37333  if(_tokenId == 0){\r... */\n      jump(tag_241)\n    tag_231:\n        /* \"contracts/NFTStake.sol\":36470:36488  uint256 hasTokenId */\n      0x00\n        /* \"contracts/NFTStake.sol\":36507:36527  uint256 tokenIdIndex */\n      dup1\n        /* \"contracts/NFTStake.sol\":36546:36555  uint256 i */\n      dup1\n        /* \"contracts/NFTStake.sol\":36542:36747  for(uint256 i; i<user.tokenIds.length; i++){\r... */\n    tag_242:\n        /* \"contracts/NFTStake.sol\":36559:36563  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36559:36572  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":36559:36579  user.tokenIds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":36557:36558  i */\n      dup2\n        /* \"contracts/NFTStake.sol\":36557:36579  i<user.tokenIds.length */\n      lt\n        /* \"contracts/NFTStake.sol\":36542:36747  for(uint256 i; i<user.tokenIds.length; i++){\r... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts/NFTStake.sol\":36627:36635  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":36607:36611  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":36607:36620  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":36621:36622  i */\n      dup3\n        /* \"contracts/NFTStake.sol\":36607:36623  user.tokenIds[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_151\n      jump\t// in\n    tag_246:\n    tag_245:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36607:36635  user.tokenIds[i] == _tokenId */\n      eq\n        /* \"contracts/NFTStake.sol\":36604:36732  if(user.tokenIds[i] == _tokenId){\r... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/NFTStake.sol\":36672:36673  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36659:36673  hasTokenId = 1 */\n      swap3\n      pop\n        /* \"contracts/NFTStake.sol\":36711:36712  i */\n      dup1\n        /* \"contracts/NFTStake.sol\":36696:36712  tokenIdIndex = i */\n      swap2\n      pop\n        /* \"contracts/NFTStake.sol\":36604:36732  if(user.tokenIds[i] == _tokenId){\r... */\n    tag_248:\n        /* \"contracts/NFTStake.sol\":36581:36584  i++ */\n      dup1\n      dup1\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":36542:36747  for(uint256 i; i<user.tokenIds.length; i++){\r... */\n      jump(tag_242)\n    tag_243:\n      pop\n        /* \"contracts/NFTStake.sol\":36783:36784  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36769:36779  hasTokenId */\n      dup3\n        /* \"contracts/NFTStake.sol\":36769:36784  hasTokenId == 1 */\n      eq\n        /* \"contracts/NFTStake.sol\":36761:36818  require(hasTokenId == 1, 'You are not Owner of token id') */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"contracts/NFTStake.sol\":36847:36863  updatePool(_pid) */\n      tag_254\n        /* \"contracts/NFTStake.sol\":36858:36862  _pid */\n      dup8\n        /* \"contracts/NFTStake.sol\":36847:36857  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":36847:36863  updatePool(_pid) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/NFTStake.sol\":36888:36955  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_255\n        /* \"contracts/NFTStake.sol\":36939:36943  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36939:36954  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36888:36934  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_256\n        /* \"contracts/NFTStake.sol\":36929:36933  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36888:36924  user.amount.mul(pool.accDDTPerShare) */\n      tag_257\n        /* \"contracts/NFTStake.sol\":36904:36908  pool */\n      dup10\n        /* \"contracts/NFTStake.sol\":36904:36923  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36888:36892  user */\n      dup10\n        /* \"contracts/NFTStake.sol\":36888:36899  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36888:36903  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":36888:36924  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"contracts/NFTStake.sol\":36888:36928  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":36888:36934  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/NFTStake.sol\":36888:36938  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":36888:36955  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/NFTStake.sol\":36878:36955  pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap3\n      pop\n        /* \"contracts/NFTStake.sol\":36983:36984  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":36973:36980  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":36973:36984  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":36970:37056  if(pending > 0){\r... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/NFTStake.sol\":37004:37040  safeDDTTransfer(msg.sender, pending) */\n      tag_259\n        /* \"contracts/NFTStake.sol\":37020:37030  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37032:37039  pending */\n      dup5\n        /* \"contracts/NFTStake.sol\":37004:37019  safeDDTTransfer */\n      tag_238\n        /* \"contracts/NFTStake.sol\":37004:37040  safeDDTTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/NFTStake.sol\":36970:37056  if(pending > 0){\r... */\n    tag_258:\n        /* \"contracts/NFTStake.sol\":37084:37102  user.amount.sub(1) */\n      tag_260\n        /* \"contracts/NFTStake.sol\":37100:37101  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":37084:37088  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":37084:37095  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37084:37099  user.amount.sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":37084:37102  user.amount.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/NFTStake.sol\":37070:37074  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":37070:37081  user.amount */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":37070:37102  user.amount = user.amount.sub(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37135:37181  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_261\n        /* \"contracts/NFTStake.sol\":37176:37180  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37135:37171  user.amount.mul(pool.accDDTPerShare) */\n      tag_262\n        /* \"contracts/NFTStake.sol\":37151:37155  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":37151:37170  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37135:37139  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":37135:37146  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37135:37150  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":37135:37171  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/NFTStake.sol\":37135:37175  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":37135:37181  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"contracts/NFTStake.sol\":37117:37121  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":37117:37132  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":37117:37181  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37203:37207  user */\n      dup4\n        /* \"contracts/NFTStake.sol\":37203:37216  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":37217:37229  tokenIdIndex */\n      dup2\n        /* \"contracts/NFTStake.sol\":37203:37230  user.tokenIds[tokenIdIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_264\n      tag_151\n      jump\t// in\n    tag_264:\n    tag_263:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/NFTStake.sol\":37196:37230  delete user.tokenIds[tokenIdIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/NFTStake.sol\":37245:37249  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":37245:37258  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37245:37275  pool.NFTToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStake.sol\":37284:37288  this */\n      address\n        /* \"contracts/NFTStake.sol\":37299:37309  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37312:37320  _tokenId */\n      dup10\n        /* \"contracts/NFTStake.sol\":37245:37321  pool.NFTToken.safeTransferFrom(address(this), address(msg.sender), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":36455:37333  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":36119:37333  if(_tokenId == 0){\r... */\n    tag_241:\n        /* \"contracts/NFTStake.sol\":37369:37373  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":37357:37367  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37348:37384  Withdraw(msg.sender, _pid, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTStake.sol\":37375:37383  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":37348:37384  Withdraw(msg.sender, _pid, _tokenId) */\n      mload(0x40)\n      tag_271\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":35911:37392  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35854:37392  function withdraw(uint256 _pid, uint256 _tokenId) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30177:30202  uint256 public startBlock */\n    tag_79:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":34207:34936  function updatePool(uint256 _pid) public {\r... */\n    tag_83:\n        /* \"contracts/NFTStake.sol\":34259:34280  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":34283:34291  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":34292:34296  _pid */\n      dup3\n        /* \"contracts/NFTStake.sol\":34283:34297  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_273\n      jumpi\n      tag_274\n      tag_151\n      jump\t// in\n    tag_274:\n    tag_273:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":34259:34297  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34328:34332  pool */\n      dup1\n        /* \"contracts/NFTStake.sol\":34328:34348  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34312:34324  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34312:34348  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":34308:34383  if (block.number <= pool.lastRewardBlock) {\r... */\n      tag_276\n      jumpi\n        /* \"contracts/NFTStake.sol\":34365:34372  return; */\n      pop\n      jump(tag_272)\n        /* \"contracts/NFTStake.sol\":34308:34383  if (block.number <= pool.lastRewardBlock) {\r... */\n    tag_276:\n        /* \"contracts/NFTStake.sol\":34393:34410  uint256 NFTSupply */\n      0x00\n        /* \"contracts/NFTStake.sol\":34413:34417  pool */\n      dup2\n        /* \"contracts/NFTStake.sol\":34413:34426  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":34413:34436  pool.NFTToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":34445:34449  this */\n      address\n        /* \"contracts/NFTStake.sol\":34413:34451  pool.NFTToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_277:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_278:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_281\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_281:\n        /* \"contracts/NFTStake.sol\":34393:34451  uint256 NFTSupply = pool.NFTToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34479:34480  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":34466:34475  NFTSupply */\n      dup2\n        /* \"contracts/NFTStake.sol\":34466:34480  NFTSupply <= 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":34462:34565  if (NFTSupply <= 0) {\r... */\n      tag_282\n      jumpi\n        /* \"contracts/NFTStake.sol\":34520:34532  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34497:34501  pool */\n      dup3\n        /* \"contracts/NFTStake.sol\":34497:34517  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":34497:34532  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34547:34554  return; */\n      pop\n      pop\n      jump(tag_272)\n        /* \"contracts/NFTStake.sol\":34462:34565  if (NFTSupply <= 0) {\r... */\n    tag_282:\n        /* \"contracts/NFTStake.sol\":34575:34593  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTStake.sol\":34596:34645  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_283\n        /* \"contracts/NFTStake.sol\":34610:34614  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":34610:34630  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34632:34644  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34596:34609  getMultiplier */\n      tag_111\n        /* \"contracts/NFTStake.sol\":34596:34645  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/NFTStake.sol\":34575:34645  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34656:34673  uint256 DDTReward */\n      0x00\n        /* \"contracts/NFTStake.sol\":34676:34745  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_284\n        /* \"contracts/NFTStake.sol\":34729:34744  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":34676:34724  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      tag_285\n        /* \"contracts/NFTStake.sol\":34708:34712  pool */\n      dup7\n        /* \"contracts/NFTStake.sol\":34708:34723  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34676:34703  multiplier.mul(DDTPerBlock) */\n      tag_286\n        /* \"contracts/NFTStake.sol\":34691:34702  DDTPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTStake.sol\":34676:34686  multiplier */\n      dup8\n        /* \"contracts/NFTStake.sol\":34676:34690  multiplier.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":34676:34703  multiplier.mul(DDTPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"contracts/NFTStake.sol\":34676:34707  multiplier.mul(DDTPerBlock).mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":34676:34724  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"contracts/NFTStake.sol\":34676:34728  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":34676:34745  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/NFTStake.sol\":34656:34745  uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34756:34759  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":34756:34764  DDT.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/NFTStake.sol\":34773:34777  this */\n      address\n        /* \"contracts/NFTStake.sol\":34780:34789  DDTReward */\n      dup4\n        /* \"contracts/NFTStake.sol\":34756:34790  DDT.mint(address(this), DDTReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_287:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_291\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_291:\n      pop\n        /* \"contracts/NFTStake.sol\":34823:34882  pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      tag_292\n        /* \"contracts/NFTStake.sol\":34847:34881  DDTReward.mul(1e12).div(NFTSupply) */\n      tag_293\n        /* \"contracts/NFTStake.sol\":34871:34880  NFTSupply */\n      dup5\n        /* \"contracts/NFTStake.sol\":34847:34866  DDTReward.mul(1e12) */\n      tag_294\n        /* \"contracts/NFTStake.sol\":34861:34865  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":34847:34856  DDTReward */\n      dup6\n        /* \"contracts/NFTStake.sol\":34847:34860  DDTReward.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":34847:34866  DDTReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/NFTStake.sol\":34847:34870  DDTReward.mul(1e12).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":34847:34881  DDTReward.mul(1e12).div(NFTSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"contracts/NFTStake.sol\":34823:34827  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":34823:34842  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34823:34846  pool.accDDTPerShare.add */\n      tag_194\n      swap1\n        /* \"contracts/NFTStake.sol\":34823:34882  pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"contracts/NFTStake.sol\":34801:34805  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":34801:34820  pool.accDDTPerShare */\n      0x03\n      add\n        /* \"contracts/NFTStake.sol\":34801:34882  pool.accDDTPerShare = pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34916:34928  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34893:34897  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":34893:34913  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":34893:34928  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34248:34936  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":34207:34936  function updatePool(uint256 _pid) public {\r... */\n    tag_272:\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":31101:31224  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_86:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_296\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_297\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_187\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"contracts/NFTStake.sol\":31200:31216  multiplierNumber */\n      dup1\n        /* \"contracts/NFTStake.sol\":31181:31197  BONUS_MULTIPLIER */\n      0x05\n        /* \"contracts/NFTStake.sol\":31181:31216  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":31101:31224  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38471:38576  function updateDDTPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_89:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_302\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_302:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_303\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_303:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap1\n      tag_187\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"contracts/NFTStake.sol\":38559:38568  newAmount */\n      dup1\n        /* \"contracts/NFTStake.sol\":38545:38556  DDTPerBlock */\n      0x04\n        /* \"contracts/NFTStake.sol\":38545:38568  DDTPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":38471:38576  function updateDDTPerBlock(uint256 newAmount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":33951:34131  function massUpdatePools() public {\r... */\n    tag_91:\n        /* \"contracts/NFTStake.sol\":33996:34010  uint256 length */\n      0x00\n        /* \"contracts/NFTStake.sol\":34013:34021  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":34013:34028  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33996:34028  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34044:34055  uint256 pid */\n      0x00\n        /* \"contracts/NFTStake.sol\":34039:34124  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_308:\n        /* \"contracts/NFTStake.sol\":34067:34073  length */\n      dup2\n        /* \"contracts/NFTStake.sol\":34061:34064  pid */\n      dup2\n        /* \"contracts/NFTStake.sol\":34061:34073  pid < length */\n      lt\n        /* \"contracts/NFTStake.sol\":34039:34124  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_309\n      jumpi\n        /* \"contracts/NFTStake.sol\":34097:34112  updatePool(pid) */\n      tag_311\n        /* \"contracts/NFTStake.sol\":34108:34111  pid */\n      dup2\n        /* \"contracts/NFTStake.sol\":34097:34107  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":34097:34112  updatePool(pid) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/NFTStake.sol\":34075:34080  ++pid */\n      dup1\n      tag_312\n      swap1\n      tag_250\n      jump\t// in\n    tag_312:\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34039:34124  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_308)\n    tag_309:\n      pop\n        /* \"contracts/NFTStake.sol\":33985:34131  {\r... */\n      pop\n        /* \"contracts/NFTStake.sol\":33951:34131  function massUpdatePools() public {\r... */\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32153:32458  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_95:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_314\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_314:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_315\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_315:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_187\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"contracts/NFTStake.sol\":32252:32263  _withUpdate */\n      dup1\n        /* \"contracts/NFTStake.sol\":32248:32309  if (_withUpdate) {\r... */\n      iszero\n      tag_319\n      jumpi\n        /* \"contracts/NFTStake.sol\":32280:32297  massUpdatePools() */\n      tag_320\n        /* \"contracts/NFTStake.sol\":32280:32295  massUpdatePools */\n      tag_91\n        /* \"contracts/NFTStake.sol\":32280:32297  massUpdatePools() */\n      jump\t// in\n    tag_320:\n        /* \"contracts/NFTStake.sol\":32248:32309  if (_withUpdate) {\r... */\n    tag_319:\n        /* \"contracts/NFTStake.sol\":32337:32400  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_321\n        /* \"contracts/NFTStake.sol\":32388:32399  _allocPoint */\n      dup3\n        /* \"contracts/NFTStake.sol\":32337:32383  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_322\n        /* \"contracts/NFTStake.sol\":32357:32365  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":32366:32370  _pid */\n      dup7\n        /* \"contracts/NFTStake.sol\":32357:32371  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_324\n      tag_151\n      jump\t// in\n    tag_324:\n    tag_323:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":32357:32382  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":32337:32352  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":32337:32356  totalAllocPoint.sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":32337:32383  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_322:\n        /* \"contracts/NFTStake.sol\":32337:32387  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_194\n      swap1\n        /* \"contracts/NFTStake.sol\":32337:32400  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"contracts/NFTStake.sol\":32319:32334  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTStake.sol\":32319:32400  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32439:32450  _allocPoint */\n      dup2\n        /* \"contracts/NFTStake.sol\":32411:32419  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":32420:32424  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":32411:32425  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_326\n      jumpi\n      tag_327\n      tag_151\n      jump\t// in\n    tag_327:\n    tag_326:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":32411:32436  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":32411:32450  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32153:32458  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_97:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_330\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_330:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_331\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_331:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_187\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"contracts/NFTStake.sol\":20891:20921  _transferOwnership(address(0)) */\n      tag_335\n        /* \"contracts/NFTStake.sol\":20918:20919  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":20891:20909  _transferOwnership */\n      tag_336\n        /* \"contracts/NFTStake.sol\":20891:20921  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29783:29812  IMigratorChef public migrator */\n    tag_99:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29645:29680  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_103:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {\r... */\n    tag_106:\n        /* \"contracts/NFTStake.sol\":20221:20228  address */\n      0x00\n        /* \"contracts/NFTStake.sol\":20248:20254  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20241:20254  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32712:32856  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_111:\n        /* \"contracts/NFTStake.sol\":32784:32791  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":32812:32848  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_339\n        /* \"contracts/NFTStake.sol\":32831:32847  BONUS_MULTIPLIER */\n      sload(0x05)\n        /* \"contracts/NFTStake.sol\":32812:32826  _to.sub(_from) */\n      tag_340\n        /* \"contracts/NFTStake.sol\":32820:32825  _from */\n      dup6\n        /* \"contracts/NFTStake.sol\":32812:32815  _to */\n      dup6\n        /* \"contracts/NFTStake.sol\":32812:32819  _to.sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":32812:32826  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_340:\n        /* \"contracts/NFTStake.sol\":32812:32830  _to.sub(_from).mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":32812:32848  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_339:\n        /* \"contracts/NFTStake.sol\":32805:32848  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":32712:32856  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29928:29992  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_115:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29454:29471  IERC20 public DDT */\n    tag_119:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38368:38463  function setDevAddress(address _devaddr) public onlyOwner {\r... */\n    tag_125:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_342\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_342:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_343\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_343:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap1\n      tag_187\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_344:\n        /* \"contracts/NFTStake.sol\":38447:38455  _devaddr */\n      dup1\n        /* \"contracts/NFTStake.sol\":38437:38444  devaddr */\n      0x03\n      0x00\n        /* \"contracts/NFTStake.sol\":38437:38455  devaddr = _devaddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":38368:38463  function setDevAddress(address _devaddr) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29499:29521  address public devaddr */\n    tag_127:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32864:33052  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {\r... */\n    tag_131:\n        /* \"contracts/NFTStake.sol\":32939:32955  uint256[] memory */\n      0x60\n        /* \"contracts/NFTStake.sol\":32968:32989  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":32992:33000  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":32992:33006  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33001:33005  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":32992:33006  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":32992:33013  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33007:33012  _user */\n      dup5\n        /* \"contracts/NFTStake.sol\":32992:33013  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":32968:33013  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33031:33035  user */\n      dup1\n        /* \"contracts/NFTStake.sol\":33031:33044  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":33024:33044  return user.tokenIds */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_348\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_349:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_349\n      jumpi\n    tag_348:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":32864:33052  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":35005:35801  function deposit(uint256 _pid, uint256 _tokenId) public {\r... */\n    tag_136:\n        /* \"contracts/NFTStake.sol\":35092:35093  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":35080:35088  _tokenId */\n      dup2\n        /* \"contracts/NFTStake.sol\":35080:35093  _tokenId != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTStake.sol\":35072:35118  require(_tokenId != 0, 'Token id is not good') */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"contracts/NFTStake.sol\":35129:35150  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":35153:35161  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":35162:35166  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35153:35167  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_354\n      jumpi\n      tag_355\n      tag_151\n      jump\t// in\n    tag_355:\n    tag_354:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":35129:35167  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35178:35199  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":35202:35210  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":35202:35216  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35211:35215  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":35202:35216  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35202:35228  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35217:35227  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35202:35228  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35178:35228  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35239:35255  updatePool(_pid) */\n      tag_357\n        /* \"contracts/NFTStake.sol\":35250:35254  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":35239:35249  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":35239:35255  updatePool(_pid) */\n      jump\t// in\n    tag_357:\n        /* \"contracts/NFTStake.sol\":35284:35285  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":35270:35274  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35270:35281  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35270:35285  user.amount > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":35266:35499  if (user.amount > 0) {\r... */\n      iszero\n      tag_358\n      jumpi\n        /* \"contracts/NFTStake.sol\":35302:35317  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":35320:35387  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_359\n        /* \"contracts/NFTStake.sol\":35371:35375  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":35371:35386  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35320:35366  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_360\n        /* \"contracts/NFTStake.sol\":35361:35365  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":35320:35356  user.amount.mul(pool.accDDTPerShare) */\n      tag_361\n        /* \"contracts/NFTStake.sol\":35336:35340  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":35336:35355  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35320:35324  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":35320:35331  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35320:35335  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":35320:35356  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"contracts/NFTStake.sol\":35320:35360  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":35320:35366  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"contracts/NFTStake.sol\":35320:35370  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":35320:35387  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_359:\n        /* \"contracts/NFTStake.sol\":35302:35387  uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35415:35416  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":35405:35412  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":35405:35416  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":35402:35488  if(pending > 0){\r... */\n      iszero\n      tag_362\n      jumpi\n        /* \"contracts/NFTStake.sol\":35436:35472  safeDDTTransfer(msg.sender, pending) */\n      tag_363\n        /* \"contracts/NFTStake.sol\":35452:35462  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35464:35471  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":35436:35451  safeDDTTransfer */\n      tag_238\n        /* \"contracts/NFTStake.sol\":35436:35472  safeDDTTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_363:\n        /* \"contracts/NFTStake.sol\":35402:35488  if(pending > 0){\r... */\n    tag_362:\n        /* \"contracts/NFTStake.sol\":35287:35499  {\r... */\n      pop\n        /* \"contracts/NFTStake.sol\":35266:35499  if (user.amount > 0) {\r... */\n    tag_358:\n        /* \"contracts/NFTStake.sol\":35509:35513  pool */\n      dup2\n        /* \"contracts/NFTStake.sol\":35509:35522  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":35509:35539  pool.NFTToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStake.sol\":35548:35558  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35569:35573  this */\n      address\n        /* \"contracts/NFTStake.sol\":35576:35584  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":35509:35585  pool.NFTToken.safeTransferFrom(address(msg.sender), address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_364:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_365\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_365:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_367:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35610:35628  user.amount.add(1) */\n      tag_368\n        /* \"contracts/NFTStake.sol\":35626:35627  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":35610:35614  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":35610:35621  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35610:35625  user.amount.add */\n      tag_194\n      swap1\n        /* \"contracts/NFTStake.sol\":35610:35628  user.amount.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_368:\n        /* \"contracts/NFTStake.sol\":35596:35600  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35596:35607  user.amount */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":35596:35628  user.amount = user.amount.add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35657:35703  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_369\n        /* \"contracts/NFTStake.sol\":35698:35702  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":35657:35693  user.amount.mul(pool.accDDTPerShare) */\n      tag_370\n        /* \"contracts/NFTStake.sol\":35673:35677  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":35673:35692  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35657:35661  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":35657:35668  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35657:35672  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":35657:35693  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_370:\n        /* \"contracts/NFTStake.sol\":35657:35697  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":35657:35703  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_369:\n        /* \"contracts/NFTStake.sol\":35639:35643  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35639:35654  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":35639:35703  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35714:35718  user */\n      dup1\n        /* \"contracts/NFTStake.sol\":35714:35727  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":35733:35741  _tokenId */\n      dup4\n        /* \"contracts/NFTStake.sol\":35714:35742  user.tokenIds.push(_tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStake.sol\":35778:35782  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35766:35776  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35758:35793  Deposit(msg.sender, _pid, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTStake.sol\":35784:35792  _tokenId */\n      dup6\n        /* \"contracts/NFTStake.sol\":35758:35793  Deposit(msg.sender, _pid, _tokenId) */\n      mload(0x40)\n      tag_372\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":35061:35801  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35005:35801  function deposit(uint256 _pid, uint256 _tokenId) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29387:29422  INFTMasterChef public NFTMasterChef */\n    tag_138:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_143:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_374\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_374:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_375\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_375:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap1\n      tag_187\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_376:\n        /* \"contracts/NFTStake.sol\":21193:21194  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":21173:21195  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21173:21181  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21173:21195  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTStake.sol\":21165:21238  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_380\n      swap1\n      tag_381\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_379:\n        /* \"contracts/NFTStake.sol\":21249:21277  _transferOwnership(newOwner) */\n      tag_382\n        /* \"contracts/NFTStake.sol\":21268:21276  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21249:21267  _transferOwnership */\n      tag_336\n        /* \"contracts/NFTStake.sol\":21249:21277  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_382:\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29566:29592  uint256 public DDTPerBlock */\n    tag_145:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":1827:2298  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_157:\n        /* \"contracts/NFTStake.sol\":1885:1892  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2135:2136  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":2130:2131  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":2130:2136  a == 0 */\n      eq\n        /* \"contracts/NFTStake.sol\":2126:2173  if (a == 0) {\r... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/NFTStake.sol\":2160:2161  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2153:2161  return 0 */\n      swap1\n      pop\n      jump(tag_383)\n        /* \"contracts/NFTStake.sol\":2126:2173  if (a == 0) {\r... */\n    tag_384:\n        /* \"contracts/NFTStake.sol\":2185:2194  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":2201:2202  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":2197:2198  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":2197:2202  a * b */\n      tag_385\n      swap2\n      swap1\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"contracts/NFTStake.sol\":2185:2202  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":2230:2231  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":2225:2226  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":2221:2222  c */\n      dup3\n        /* \"contracts/NFTStake.sol\":2221:2226  c / a */\n      tag_387\n      swap2\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"contracts/NFTStake.sol\":2221:2231  c / a == b */\n      eq\n        /* \"contracts/NFTStake.sol\":2213:2269  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_389:\n        /* \"contracts/NFTStake.sol\":2289:2290  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":2282:2290  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":1827:2298  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_383:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":2766:2898  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_158:\n        /* \"contracts/NFTStake.sol\":2824:2831  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      tag_393\n        /* \"contracts/NFTStake.sol\":2855:2856  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":2858:2859  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":2851:2854  div */\n      tag_394\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_393:\n        /* \"contracts/NFTStake.sol\":2844:2890  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":2766:2898  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":911:1047  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_159:\n        /* \"contracts/NFTStake.sol\":969:976  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_396\n        /* \"contracts/NFTStake.sol\":1000:1001  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":1003:1004  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":996:999  sub */\n      tag_397\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_396:\n        /* \"contracts/NFTStake.sol\":989:1039  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":911:1047  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_183:\n        /* \"contracts/NFTStake.sol\":19602:19609  address */\n      0x00\n        /* \"contracts/NFTStake.sol\":19629:19639  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":19622:19639  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":455:636  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_194:\n        /* \"contracts/NFTStake.sol\":513:520  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":533:542  uint256 c */\n      dup1\n        /* \"contracts/NFTStake.sol\":549:550  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":545:546  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":545:550  a + b */\n      tag_400\n      swap2\n      swap1\n      tag_401\n      jump\t// in\n    tag_400:\n        /* \"contracts/NFTStake.sol\":533:550  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":574:575  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":569:570  c */\n      dup2\n        /* \"contracts/NFTStake.sol\":569:575  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTStake.sol\":561:607  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap1\n      tag_404\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_402:\n        /* \"contracts/NFTStake.sol\":627:628  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":620:628  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":455:636  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38089:38360  function safeDDTTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_238:\n        /* \"contracts/NFTStake.sol\":38164:38178  uint256 DDTbal */\n      0x00\n        /* \"contracts/NFTStake.sol\":38181:38184  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38181:38194  DDT.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":38203:38207  this */\n      address\n        /* \"contracts/NFTStake.sol\":38181:38209  DDT.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_406:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_407\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_407:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_409\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_409:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_410\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_410:\n        /* \"contracts/NFTStake.sol\":38164:38209  uint256 DDTbal = DDT.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":38234:38240  DDTbal */\n      dup1\n        /* \"contracts/NFTStake.sol\":38224:38231  _amount */\n      dup3\n        /* \"contracts/NFTStake.sol\":38224:38240  _amount > DDTbal */\n      gt\n        /* \"contracts/NFTStake.sol\":38220:38353  if (_amount > DDTbal) {\r... */\n      iszero\n      tag_411\n      jumpi\n        /* \"contracts/NFTStake.sol\":38257:38260  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38257:38269  DDT.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTStake.sol\":38270:38273  _to */\n      dup5\n        /* \"contracts/NFTStake.sol\":38275:38281  DDTbal */\n      dup4\n        /* \"contracts/NFTStake.sol\":38257:38282  DDT.transfer(_to, DDTbal) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_412\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_412:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_413\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_413:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_415\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_415:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_416\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_416:\n      pop\n        /* \"contracts/NFTStake.sol\":38220:38353  if (_amount > DDTbal) {\r... */\n      jump(tag_417)\n    tag_411:\n        /* \"contracts/NFTStake.sol\":38315:38318  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38315:38327  DDT.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTStake.sol\":38328:38331  _to */\n      dup5\n        /* \"contracts/NFTStake.sol\":38333:38340  _amount */\n      dup5\n        /* \"contracts/NFTStake.sol\":38315:38341  DDT.transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_418\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_418:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_419\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_419:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_421\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_421:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_422\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_422:\n      pop\n        /* \"contracts/NFTStake.sol\":38220:38353  if (_amount > DDTbal) {\r... */\n    tag_417:\n        /* \"contracts/NFTStake.sol\":38153:38360  {\r... */\n      pop\n        /* \"contracts/NFTStake.sol\":38089:38360  function safeDDTTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_336:\n        /* \"contracts/NFTStake.sol\":21519:21535  address oldOwner */\n      0x00\n        /* \"contracts/NFTStake.sol\":21538:21544  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21519:21544  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":21564:21572  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21555:21561  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTStake.sol\":21555:21572  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":21619:21627  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21609:21617  oldOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":21508:21636  {\r... */\n      pop\n        /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":3428:3773  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_394:\n        /* \"contracts/NFTStake.sol\":3514:3521  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":3613:3614  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":3609:3610  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":3609:3614  b > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":3616:3628  errorMessage */\n      dup3\n        /* \"contracts/NFTStake.sol\":3601:3629  require(b > 0, errorMessage) */\n      swap1\n      tag_425\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_425:\n      pop\n        /* \"contracts/NFTStake.sol\":3640:3649  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":3656:3657  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":3652:3653  a */\n      dup6\n        /* \"contracts/NFTStake.sol\":3652:3657  a / b */\n      tag_428\n      swap2\n      swap1\n      tag_388\n      jump\t// in\n    tag_428:\n        /* \"contracts/NFTStake.sol\":3640:3657  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":3764:3765  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":3757:3765  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":3428:3773  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":1384:1576  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_397:\n        /* \"contracts/NFTStake.sol\":1470:1477  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":1503:1504  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":1498:1499  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":1498:1504  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTStake.sol\":1506:1518  errorMessage */\n      dup3\n        /* \"contracts/NFTStake.sol\":1490:1519  require(b <= a, errorMessage) */\n      swap1\n      tag_430\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_430:\n      pop\n        /* \"contracts/NFTStake.sol\":1530:1539  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":1546:1547  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":1542:1543  a */\n      dup6\n        /* \"contracts/NFTStake.sol\":1542:1547  a - b */\n      tag_432\n      swap2\n      swap1\n      tag_433\n      jump\t// in\n    tag_432:\n        /* \"contracts/NFTStake.sol\":1530:1547  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":1567:1568  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":1560:1568  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":1384:1576  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_435:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_437\n        /* \"#utility.yul\":125:173   */\n      tag_438\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_439\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":109:174   */\n      tag_440\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_442\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":249:361   */\n    tag_441:\n        /* \"#utility.yul\":370:411   */\n      tag_444\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_445\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_446:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_448\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_449\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_450:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_452\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_453\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_454:\n        /* \"#utility.yul\":761:766   */\n      0x00\n        /* \"#utility.yul\":792:798   */\n      dup2\n        /* \"#utility.yul\":786:799   */\n      mload\n        /* \"#utility.yul\":777:799   */\n      swap1\n      pop\n        /* \"#utility.yul\":808:838   */\n      tag_456\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":808:838   */\n      tag_453\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":863:1201   */\n    tag_457:\n        /* \"#utility.yul\":918:923   */\n      0x00\n        /* \"#utility.yul\":967:970   */\n      dup3\n        /* \"#utility.yul\":960:964   */\n      0x1f\n        /* \"#utility.yul\":952:958   */\n      dup4\n        /* \"#utility.yul\":948:965   */\n      add\n        /* \"#utility.yul\":944:971   */\n      slt\n        /* \"#utility.yul\":934:1056   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":975:1054   */\n      tag_460\n      tag_461\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":934:1056   */\n    tag_459:\n        /* \"#utility.yul\":1092:1098   */\n      dup2\n        /* \"#utility.yul\":1079:1099   */\n      calldataload\n        /* \"#utility.yul\":1117:1195   */\n      tag_462\n        /* \"#utility.yul\":1191:1194   */\n      dup5\n        /* \"#utility.yul\":1183:1189   */\n      dup3\n        /* \"#utility.yul\":1176:1180   */\n      0x20\n        /* \"#utility.yul\":1168:1174   */\n      dup7\n        /* \"#utility.yul\":1164:1181   */\n      add\n        /* \"#utility.yul\":1117:1195   */\n      tag_435\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1108:1195   */\n      swap2\n      pop\n        /* \"#utility.yul\":924:1201   */\n      pop\n        /* \"#utility.yul\":863:1201   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1207:1378   */\n    tag_463:\n        /* \"#utility.yul\":1269:1274   */\n      0x00\n        /* \"#utility.yul\":1307:1313   */\n      dup2\n        /* \"#utility.yul\":1294:1314   */\n      calldataload\n        /* \"#utility.yul\":1285:1314   */\n      swap1\n      pop\n        /* \"#utility.yul\":1323:1372   */\n      tag_465\n        /* \"#utility.yul\":1366:1371   */\n      dup2\n        /* \"#utility.yul\":1323:1372   */\n      tag_466\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1207:1378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1384:1565   */\n    tag_467:\n        /* \"#utility.yul\":1451:1456   */\n      0x00\n        /* \"#utility.yul\":1489:1495   */\n      dup2\n        /* \"#utility.yul\":1476:1496   */\n      calldataload\n        /* \"#utility.yul\":1467:1496   */\n      swap1\n      pop\n        /* \"#utility.yul\":1505:1559   */\n      tag_469\n        /* \"#utility.yul\":1553:1558   */\n      dup2\n        /* \"#utility.yul\":1505:1559   */\n      tag_470\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":1384:1565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1571:1710   */\n    tag_471:\n        /* \"#utility.yul\":1617:1622   */\n      0x00\n        /* \"#utility.yul\":1655:1661   */\n      dup2\n        /* \"#utility.yul\":1642:1662   */\n      calldataload\n        /* \"#utility.yul\":1633:1662   */\n      swap1\n      pop\n        /* \"#utility.yul\":1671:1704   */\n      tag_473\n        /* \"#utility.yul\":1698:1703   */\n      dup2\n        /* \"#utility.yul\":1671:1704   */\n      tag_474\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1571:1710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1859   */\n    tag_475:\n        /* \"#utility.yul\":1773:1778   */\n      0x00\n        /* \"#utility.yul\":1804:1810   */\n      dup2\n        /* \"#utility.yul\":1798:1811   */\n      mload\n        /* \"#utility.yul\":1789:1811   */\n      swap1\n      pop\n        /* \"#utility.yul\":1820:1853   */\n      tag_477\n        /* \"#utility.yul\":1847:1852   */\n      dup2\n        /* \"#utility.yul\":1820:1853   */\n      tag_474\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1716:1859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:2194   */\n    tag_124:\n        /* \"#utility.yul\":1924:1930   */\n      0x00\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1961:1970   */\n      dup3\n        /* \"#utility.yul\":1952:1959   */\n      dup5\n        /* \"#utility.yul\":1948:1971   */\n      sub\n        /* \"#utility.yul\":1944:1976   */\n      slt\n        /* \"#utility.yul\":1941:2060   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":1979:2058   */\n      tag_480\n      tag_481\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1941:2060   */\n    tag_479:\n        /* \"#utility.yul\":2099:2100   */\n      0x00\n        /* \"#utility.yul\":2124:2177   */\n      tag_482\n        /* \"#utility.yul\":2169:2176   */\n      dup5\n        /* \"#utility.yul\":2160:2166   */\n      dup3\n        /* \"#utility.yul\":2149:2158   */\n      dup6\n        /* \"#utility.yul\":2145:2167   */\n      add\n        /* \"#utility.yul\":2124:2177   */\n      tag_446\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":2114:2177   */\n      swap2\n      pop\n        /* \"#utility.yul\":2070:2187   */\n      pop\n        /* \"#utility.yul\":1865:2194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:3143   */\n    tag_49:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2303:2309   */\n      dup1\n        /* \"#utility.yul\":2311:2317   */\n      0x00\n        /* \"#utility.yul\":2319:2325   */\n      dup1\n        /* \"#utility.yul\":2368:2371   */\n      0x80\n        /* \"#utility.yul\":2356:2365   */\n      dup6\n        /* \"#utility.yul\":2347:2354   */\n      dup8\n        /* \"#utility.yul\":2343:2366   */\n      sub\n        /* \"#utility.yul\":2339:2372   */\n      slt\n        /* \"#utility.yul\":2336:2456   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":2375:2454   */\n      tag_485\n      tag_481\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2336:2456   */\n    tag_484:\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2520:2573   */\n      tag_486\n        /* \"#utility.yul\":2565:2572   */\n      dup8\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2545:2554   */\n      dup9\n        /* \"#utility.yul\":2541:2563   */\n      add\n        /* \"#utility.yul\":2520:2573   */\n      tag_446\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2510:2573   */\n      swap5\n      pop\n        /* \"#utility.yul\":2466:2583   */\n      pop\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2648:2701   */\n      tag_487\n        /* \"#utility.yul\":2693:2700   */\n      dup8\n        /* \"#utility.yul\":2684:2690   */\n      dup3\n        /* \"#utility.yul\":2673:2682   */\n      dup9\n        /* \"#utility.yul\":2669:2691   */\n      add\n        /* \"#utility.yul\":2648:2701   */\n      tag_446\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2638:2701   */\n      swap4\n      pop\n        /* \"#utility.yul\":2593:2711   */\n      pop\n        /* \"#utility.yul\":2750:2752   */\n      0x40\n        /* \"#utility.yul\":2776:2829   */\n      tag_488\n        /* \"#utility.yul\":2821:2828   */\n      dup8\n        /* \"#utility.yul\":2812:2818   */\n      dup3\n        /* \"#utility.yul\":2801:2810   */\n      dup9\n        /* \"#utility.yul\":2797:2819   */\n      add\n        /* \"#utility.yul\":2776:2829   */\n      tag_471\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2766:2829   */\n      swap3\n      pop\n        /* \"#utility.yul\":2721:2839   */\n      pop\n        /* \"#utility.yul\":2906:2908   */\n      0x60\n        /* \"#utility.yul\":2895:2904   */\n      dup6\n        /* \"#utility.yul\":2891:2909   */\n      add\n        /* \"#utility.yul\":2878:2910   */\n      calldataload\n        /* \"#utility.yul\":2937:2955   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2929:2935   */\n      dup2\n        /* \"#utility.yul\":2926:2956   */\n      gt\n        /* \"#utility.yul\":2923:3040   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":2959:3038   */\n      tag_490\n      tag_491\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":2923:3040   */\n    tag_489:\n        /* \"#utility.yul\":3064:3126   */\n      tag_492\n        /* \"#utility.yul\":3118:3125   */\n      dup8\n        /* \"#utility.yul\":3109:3115   */\n      dup3\n        /* \"#utility.yul\":3098:3107   */\n      dup9\n        /* \"#utility.yul\":3094:3116   */\n      add\n        /* \"#utility.yul\":3064:3126   */\n      tag_457\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3054:3126   */\n      swap2\n      pop\n        /* \"#utility.yul\":2849:3136   */\n      pop\n        /* \"#utility.yul\":2200:3143   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3494   */\n    tag_169:\n        /* \"#utility.yul\":3216:3222   */\n      0x00\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"#utility.yul\":3253:3262   */\n      dup3\n        /* \"#utility.yul\":3244:3251   */\n      dup5\n        /* \"#utility.yul\":3240:3263   */\n      sub\n        /* \"#utility.yul\":3236:3268   */\n      slt\n        /* \"#utility.yul\":3233:3352   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":3271:3350   */\n      tag_495\n      tag_481\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3233:3352   */\n    tag_494:\n        /* \"#utility.yul\":3391:3392   */\n      0x00\n        /* \"#utility.yul\":3416:3477   */\n      tag_496\n        /* \"#utility.yul\":3469:3476   */\n      dup5\n        /* \"#utility.yul\":3460:3466   */\n      dup3\n        /* \"#utility.yul\":3449:3458   */\n      dup6\n        /* \"#utility.yul\":3445:3467   */\n      add\n        /* \"#utility.yul\":3416:3477   */\n      tag_454\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":3406:3477   */\n      swap2\n      pop\n        /* \"#utility.yul\":3362:3487   */\n      pop\n        /* \"#utility.yul\":3149:3494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3500:3871   */\n    tag_72:\n        /* \"#utility.yul\":3580:3586   */\n      0x00\n        /* \"#utility.yul\":3629:3631   */\n      0x20\n        /* \"#utility.yul\":3617:3626   */\n      dup3\n        /* \"#utility.yul\":3608:3615   */\n      dup5\n        /* \"#utility.yul\":3604:3627   */\n      sub\n        /* \"#utility.yul\":3600:3632   */\n      slt\n        /* \"#utility.yul\":3597:3716   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":3635:3714   */\n      tag_499\n      tag_481\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3597:3716   */\n    tag_498:\n        /* \"#utility.yul\":3755:3756   */\n      0x00\n        /* \"#utility.yul\":3780:3854   */\n      tag_500\n        /* \"#utility.yul\":3846:3853   */\n      dup5\n        /* \"#utility.yul\":3837:3843   */\n      dup3\n        /* \"#utility.yul\":3826:3835   */\n      dup6\n        /* \"#utility.yul\":3822:3844   */\n      add\n        /* \"#utility.yul\":3780:3854   */\n      tag_467\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":3770:3854   */\n      swap2\n      pop\n        /* \"#utility.yul\":3726:3864   */\n      pop\n        /* \"#utility.yul\":3500:3871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3877:4206   */\n    tag_45:\n        /* \"#utility.yul\":3936:3942   */\n      0x00\n        /* \"#utility.yul\":3985:3987   */\n      0x20\n        /* \"#utility.yul\":3973:3982   */\n      dup3\n        /* \"#utility.yul\":3964:3971   */\n      dup5\n        /* \"#utility.yul\":3960:3983   */\n      sub\n        /* \"#utility.yul\":3956:3988   */\n      slt\n        /* \"#utility.yul\":3953:4072   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":3991:4070   */\n      tag_503\n      tag_481\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":3953:4072   */\n    tag_502:\n        /* \"#utility.yul\":4111:4112   */\n      0x00\n        /* \"#utility.yul\":4136:4189   */\n      tag_504\n        /* \"#utility.yul\":4181:4188   */\n      dup5\n        /* \"#utility.yul\":4172:4178   */\n      dup3\n        /* \"#utility.yul\":4161:4170   */\n      dup6\n        /* \"#utility.yul\":4157:4179   */\n      add\n        /* \"#utility.yul\":4136:4189   */\n      tag_471\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":4126:4189   */\n      swap2\n      pop\n        /* \"#utility.yul\":4082:4199   */\n      pop\n        /* \"#utility.yul\":3877:4206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4212:4563   */\n    tag_205:\n        /* \"#utility.yul\":4282:4288   */\n      0x00\n        /* \"#utility.yul\":4331:4333   */\n      0x20\n        /* \"#utility.yul\":4319:4328   */\n      dup3\n        /* \"#utility.yul\":4310:4317   */\n      dup5\n        /* \"#utility.yul\":4306:4329   */\n      sub\n        /* \"#utility.yul\":4302:4334   */\n      slt\n        /* \"#utility.yul\":4299:4418   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":4337:4416   */\n      tag_507\n      tag_481\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4299:4418   */\n    tag_506:\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4482:4546   */\n      tag_508\n        /* \"#utility.yul\":4538:4545   */\n      dup5\n        /* \"#utility.yul\":4529:4535   */\n      dup3\n        /* \"#utility.yul\":4518:4527   */\n      dup6\n        /* \"#utility.yul\":4514:4536   */\n      add\n        /* \"#utility.yul\":4482:4546   */\n      tag_475\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":4472:4546   */\n      swap2\n      pop\n        /* \"#utility.yul\":4428:4556   */\n      pop\n        /* \"#utility.yul\":4212:4563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4569:5043   */\n    tag_67:\n        /* \"#utility.yul\":4637:4643   */\n      0x00\n        /* \"#utility.yul\":4645:4651   */\n      dup1\n        /* \"#utility.yul\":4694:4696   */\n      0x40\n        /* \"#utility.yul\":4682:4691   */\n      dup4\n        /* \"#utility.yul\":4673:4680   */\n      dup6\n        /* \"#utility.yul\":4669:4692   */\n      sub\n        /* \"#utility.yul\":4665:4697   */\n      slt\n        /* \"#utility.yul\":4662:4781   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":4700:4779   */\n      tag_511\n      tag_481\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":4662:4781   */\n    tag_510:\n        /* \"#utility.yul\":4820:4821   */\n      0x00\n        /* \"#utility.yul\":4845:4898   */\n      tag_512\n        /* \"#utility.yul\":4890:4897   */\n      dup6\n        /* \"#utility.yul\":4881:4887   */\n      dup3\n        /* \"#utility.yul\":4870:4879   */\n      dup7\n        /* \"#utility.yul\":4866:4888   */\n      add\n        /* \"#utility.yul\":4845:4898   */\n      tag_471\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4835:4898   */\n      swap3\n      pop\n        /* \"#utility.yul\":4791:4908   */\n      pop\n        /* \"#utility.yul\":4947:4949   */\n      0x20\n        /* \"#utility.yul\":4973:5026   */\n      tag_513\n        /* \"#utility.yul\":5018:5025   */\n      dup6\n        /* \"#utility.yul\":5009:5015   */\n      dup3\n        /* \"#utility.yul\":4998:5007   */\n      dup7\n        /* \"#utility.yul\":4994:5016   */\n      add\n        /* \"#utility.yul\":4973:5026   */\n      tag_446\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":4963:5026   */\n      swap2\n      pop\n        /* \"#utility.yul\":4918:5036   */\n      pop\n        /* \"#utility.yul\":4569:5043   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5049:5694   */\n    tag_63:\n        /* \"#utility.yul\":5139:5145   */\n      0x00\n        /* \"#utility.yul\":5147:5153   */\n      dup1\n        /* \"#utility.yul\":5155:5161   */\n      0x00\n        /* \"#utility.yul\":5204:5206   */\n      0x60\n        /* \"#utility.yul\":5192:5201   */\n      dup5\n        /* \"#utility.yul\":5183:5190   */\n      dup7\n        /* \"#utility.yul\":5179:5202   */\n      sub\n        /* \"#utility.yul\":5175:5207   */\n      slt\n        /* \"#utility.yul\":5172:5291   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":5210:5289   */\n      tag_516\n      tag_481\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5172:5291   */\n    tag_515:\n        /* \"#utility.yul\":5330:5331   */\n      0x00\n        /* \"#utility.yul\":5355:5408   */\n      tag_517\n        /* \"#utility.yul\":5400:5407   */\n      dup7\n        /* \"#utility.yul\":5391:5397   */\n      dup3\n        /* \"#utility.yul\":5380:5389   */\n      dup8\n        /* \"#utility.yul\":5376:5398   */\n      add\n        /* \"#utility.yul\":5355:5408   */\n      tag_471\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5345:5408   */\n      swap4\n      pop\n        /* \"#utility.yul\":5301:5418   */\n      pop\n        /* \"#utility.yul\":5457:5459   */\n      0x20\n        /* \"#utility.yul\":5483:5552   */\n      tag_518\n        /* \"#utility.yul\":5544:5551   */\n      dup7\n        /* \"#utility.yul\":5535:5541   */\n      dup3\n        /* \"#utility.yul\":5524:5533   */\n      dup8\n        /* \"#utility.yul\":5520:5542   */\n      add\n        /* \"#utility.yul\":5483:5552   */\n      tag_463\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5473:5552   */\n      swap3\n      pop\n        /* \"#utility.yul\":5428:5562   */\n      pop\n        /* \"#utility.yul\":5601:5603   */\n      0x40\n        /* \"#utility.yul\":5627:5677   */\n      tag_519\n        /* \"#utility.yul\":5669:5676   */\n      dup7\n        /* \"#utility.yul\":5660:5666   */\n      dup3\n        /* \"#utility.yul\":5649:5658   */\n      dup8\n        /* \"#utility.yul\":5645:5667   */\n      add\n        /* \"#utility.yul\":5627:5677   */\n      tag_450\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":5617:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5572:5687   */\n      pop\n        /* \"#utility.yul\":5049:5694   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5700:6174   */\n    tag_76:\n        /* \"#utility.yul\":5768:5774   */\n      0x00\n        /* \"#utility.yul\":5776:5782   */\n      dup1\n        /* \"#utility.yul\":5825:5827   */\n      0x40\n        /* \"#utility.yul\":5813:5822   */\n      dup4\n        /* \"#utility.yul\":5804:5811   */\n      dup6\n        /* \"#utility.yul\":5800:5823   */\n      sub\n        /* \"#utility.yul\":5796:5828   */\n      slt\n        /* \"#utility.yul\":5793:5912   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":5831:5910   */\n      tag_522\n      tag_481\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5793:5912   */\n    tag_521:\n        /* \"#utility.yul\":5951:5952   */\n      0x00\n        /* \"#utility.yul\":5976:6029   */\n      tag_523\n        /* \"#utility.yul\":6021:6028   */\n      dup6\n        /* \"#utility.yul\":6012:6018   */\n      dup3\n        /* \"#utility.yul\":6001:6010   */\n      dup7\n        /* \"#utility.yul\":5997:6019   */\n      add\n        /* \"#utility.yul\":5976:6029   */\n      tag_471\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5966:6029   */\n      swap3\n      pop\n        /* \"#utility.yul\":5922:6039   */\n      pop\n        /* \"#utility.yul\":6078:6080   */\n      0x20\n        /* \"#utility.yul\":6104:6157   */\n      tag_524\n        /* \"#utility.yul\":6149:6156   */\n      dup6\n        /* \"#utility.yul\":6140:6146   */\n      dup3\n        /* \"#utility.yul\":6129:6138   */\n      dup7\n        /* \"#utility.yul\":6125:6147   */\n      add\n        /* \"#utility.yul\":6104:6157   */\n      tag_471\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":6094:6157   */\n      swap2\n      pop\n        /* \"#utility.yul\":6049:6167   */\n      pop\n        /* \"#utility.yul\":5700:6174   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6793   */\n    tag_94:\n        /* \"#utility.yul\":6254:6260   */\n      0x00\n        /* \"#utility.yul\":6262:6268   */\n      dup1\n        /* \"#utility.yul\":6270:6276   */\n      0x00\n        /* \"#utility.yul\":6319:6321   */\n      0x60\n        /* \"#utility.yul\":6307:6316   */\n      dup5\n        /* \"#utility.yul\":6298:6305   */\n      dup7\n        /* \"#utility.yul\":6294:6317   */\n      sub\n        /* \"#utility.yul\":6290:6322   */\n      slt\n        /* \"#utility.yul\":6287:6406   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":6325:6404   */\n      tag_527\n      tag_481\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6287:6406   */\n    tag_526:\n        /* \"#utility.yul\":6445:6446   */\n      0x00\n        /* \"#utility.yul\":6470:6523   */\n      tag_528\n        /* \"#utility.yul\":6515:6522   */\n      dup7\n        /* \"#utility.yul\":6506:6512   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      dup8\n        /* \"#utility.yul\":6491:6513   */\n      add\n        /* \"#utility.yul\":6470:6523   */\n      tag_471\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6460:6523   */\n      swap4\n      pop\n        /* \"#utility.yul\":6416:6533   */\n      pop\n        /* \"#utility.yul\":6572:6574   */\n      0x20\n        /* \"#utility.yul\":6598:6651   */\n      tag_529\n        /* \"#utility.yul\":6643:6650   */\n      dup7\n        /* \"#utility.yul\":6634:6640   */\n      dup3\n        /* \"#utility.yul\":6623:6632   */\n      dup8\n        /* \"#utility.yul\":6619:6641   */\n      add\n        /* \"#utility.yul\":6598:6651   */\n      tag_471\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6588:6651   */\n      swap3\n      pop\n        /* \"#utility.yul\":6543:6661   */\n      pop\n        /* \"#utility.yul\":6700:6702   */\n      0x40\n        /* \"#utility.yul\":6726:6776   */\n      tag_530\n        /* \"#utility.yul\":6768:6775   */\n      dup7\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6748:6757   */\n      dup8\n        /* \"#utility.yul\":6744:6766   */\n      add\n        /* \"#utility.yul\":6726:6776   */\n      tag_450\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":6716:6776   */\n      swap2\n      pop\n        /* \"#utility.yul\":6671:6786   */\n      pop\n        /* \"#utility.yul\":6180:6793   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6799:6978   */\n    tag_531:\n        /* \"#utility.yul\":6868:6878   */\n      0x00\n        /* \"#utility.yul\":6889:6935   */\n      tag_533\n        /* \"#utility.yul\":6931:6934   */\n      dup4\n        /* \"#utility.yul\":6923:6929   */\n      dup4\n        /* \"#utility.yul\":6889:6935   */\n      tag_534\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6967:6971   */\n      0x20\n        /* \"#utility.yul\":6962:6965   */\n      dup4\n        /* \"#utility.yul\":6958:6972   */\n      add\n        /* \"#utility.yul\":6944:6972   */\n      swap1\n      pop\n        /* \"#utility.yul\":6799:6978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6984:7102   */\n    tag_535:\n        /* \"#utility.yul\":7071:7095   */\n      tag_537\n        /* \"#utility.yul\":7089:7094   */\n      dup2\n        /* \"#utility.yul\":7071:7095   */\n      tag_538\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7066:7069   */\n      dup3\n        /* \"#utility.yul\":7059:7096   */\n      mstore\n        /* \"#utility.yul\":6984:7102   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7138:7870   */\n    tag_539:\n        /* \"#utility.yul\":7257:7260   */\n      0x00\n        /* \"#utility.yul\":7286:7340   */\n      tag_541\n        /* \"#utility.yul\":7334:7339   */\n      dup3\n        /* \"#utility.yul\":7286:7340   */\n      tag_542\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7356:7442   */\n      tag_543\n        /* \"#utility.yul\":7435:7441   */\n      dup2\n        /* \"#utility.yul\":7430:7433   */\n      dup6\n        /* \"#utility.yul\":7356:7442   */\n      tag_544\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7349:7442   */\n      swap4\n      pop\n        /* \"#utility.yul\":7466:7522   */\n      tag_545\n        /* \"#utility.yul\":7516:7521   */\n      dup4\n        /* \"#utility.yul\":7466:7522   */\n      tag_546\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":7545:7552   */\n      dup1\n        /* \"#utility.yul\":7576:7577   */\n      0x00\n        /* \"#utility.yul\":7561:7845   */\n    tag_547:\n        /* \"#utility.yul\":7586:7592   */\n      dup4\n        /* \"#utility.yul\":7583:7584   */\n      dup2\n        /* \"#utility.yul\":7580:7593   */\n      lt\n        /* \"#utility.yul\":7561:7845   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":7662:7668   */\n      dup2\n        /* \"#utility.yul\":7656:7669   */\n      mload\n        /* \"#utility.yul\":7689:7752   */\n      tag_550\n        /* \"#utility.yul\":7748:7751   */\n      dup9\n        /* \"#utility.yul\":7733:7746   */\n      dup3\n        /* \"#utility.yul\":7689:7752   */\n      tag_531\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":7682:7752   */\n      swap8\n      pop\n        /* \"#utility.yul\":7775:7835   */\n      tag_551\n        /* \"#utility.yul\":7828:7834   */\n      dup4\n        /* \"#utility.yul\":7775:7835   */\n      tag_552\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":7765:7835   */\n      swap3\n      pop\n        /* \"#utility.yul\":7621:7845   */\n      pop\n        /* \"#utility.yul\":7608:7609   */\n      0x01\n        /* \"#utility.yul\":7605:7606   */\n      dup2\n        /* \"#utility.yul\":7601:7610   */\n      add\n        /* \"#utility.yul\":7596:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7845   */\n      jump(tag_547)\n    tag_549:\n        /* \"#utility.yul\":7565:7579   */\n      pop\n        /* \"#utility.yul\":7861:7864   */\n      dup6\n        /* \"#utility.yul\":7854:7864   */\n      swap4\n      pop\n        /* \"#utility.yul\":7262:7870   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7138:7870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7876:7991   */\n    tag_553:\n        /* \"#utility.yul\":7961:7984   */\n      tag_555\n        /* \"#utility.yul\":7978:7983   */\n      dup2\n        /* \"#utility.yul\":7961:7984   */\n      tag_556\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":7956:7959   */\n      dup3\n        /* \"#utility.yul\":7949:7985   */\n      mstore\n        /* \"#utility.yul\":7876:7991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8156   */\n    tag_557:\n        /* \"#utility.yul\":8098:8149   */\n      tag_559\n        /* \"#utility.yul\":8143:8148   */\n      dup2\n        /* \"#utility.yul\":8098:8149   */\n      tag_560\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":8093:8096   */\n      dup3\n        /* \"#utility.yul\":8086:8150   */\n      mstore\n        /* \"#utility.yul\":7997:8156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8162:8325   */\n    tag_561:\n        /* \"#utility.yul\":8265:8318   */\n      tag_563\n        /* \"#utility.yul\":8312:8317   */\n      dup2\n        /* \"#utility.yul\":8265:8318   */\n      tag_564\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":8260:8263   */\n      dup3\n        /* \"#utility.yul\":8253:8319   */\n      mstore\n        /* \"#utility.yul\":8162:8325   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8331:8504   */\n    tag_565:\n        /* \"#utility.yul\":8439:8497   */\n      tag_567\n        /* \"#utility.yul\":8491:8496   */\n      dup2\n        /* \"#utility.yul\":8439:8497   */\n      tag_568\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":8434:8437   */\n      dup3\n        /* \"#utility.yul\":8427:8498   */\n      mstore\n        /* \"#utility.yul\":8331:8504   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8510:8687   */\n    tag_569:\n        /* \"#utility.yul\":8620:8680   */\n      tag_571\n        /* \"#utility.yul\":8674:8679   */\n      dup2\n        /* \"#utility.yul\":8620:8680   */\n      tag_572\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":8615:8618   */\n      dup3\n        /* \"#utility.yul\":8608:8681   */\n      mstore\n        /* \"#utility.yul\":8510:8687   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:9057   */\n    tag_573:\n        /* \"#utility.yul\":8781:8784   */\n      0x00\n        /* \"#utility.yul\":8809:8848   */\n      tag_575\n        /* \"#utility.yul\":8842:8847   */\n      dup3\n        /* \"#utility.yul\":8809:8848   */\n      tag_576\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":8864:8935   */\n      tag_577\n        /* \"#utility.yul\":8928:8934   */\n      dup2\n        /* \"#utility.yul\":8923:8926   */\n      dup6\n        /* \"#utility.yul\":8864:8935   */\n      tag_578\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":8857:8935   */\n      swap4\n      pop\n        /* \"#utility.yul\":8944:8996   */\n      tag_579\n        /* \"#utility.yul\":8989:8995   */\n      dup2\n        /* \"#utility.yul\":8984:8987   */\n      dup6\n        /* \"#utility.yul\":8977:8981   */\n      0x20\n        /* \"#utility.yul\":8970:8975   */\n      dup7\n        /* \"#utility.yul\":8966:8982   */\n      add\n        /* \"#utility.yul\":8944:8996   */\n      tag_580\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":9021:9050   */\n      tag_581\n        /* \"#utility.yul\":9043:9049   */\n      dup2\n        /* \"#utility.yul\":9021:9050   */\n      tag_582\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":9016:9019   */\n      dup5\n        /* \"#utility.yul\":9012:9051   */\n      add\n        /* \"#utility.yul\":9005:9051   */\n      swap2\n      pop\n        /* \"#utility.yul\":8785:9057   */\n      pop\n        /* \"#utility.yul\":8693:9057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9063:9429   */\n    tag_583:\n        /* \"#utility.yul\":9205:9208   */\n      0x00\n        /* \"#utility.yul\":9226:9293   */\n      tag_585\n        /* \"#utility.yul\":9290:9292   */\n      0x26\n        /* \"#utility.yul\":9285:9288   */\n      dup4\n        /* \"#utility.yul\":9226:9293   */\n      tag_578\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":9219:9293   */\n      swap2\n      pop\n        /* \"#utility.yul\":9302:9395   */\n      tag_586\n        /* \"#utility.yul\":9391:9394   */\n      dup3\n        /* \"#utility.yul\":9302:9395   */\n      tag_587\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":9420:9422   */\n      0x40\n        /* \"#utility.yul\":9415:9418   */\n      dup3\n        /* \"#utility.yul\":9411:9423   */\n      add\n        /* \"#utility.yul\":9404:9423   */\n      swap1\n      pop\n        /* \"#utility.yul\":9063:9429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9435:9801   */\n    tag_588:\n        /* \"#utility.yul\":9577:9580   */\n      0x00\n        /* \"#utility.yul\":9598:9665   */\n      tag_590\n        /* \"#utility.yul\":9662:9664   */\n      0x1b\n        /* \"#utility.yul\":9657:9660   */\n      dup4\n        /* \"#utility.yul\":9598:9665   */\n      tag_578\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":9591:9665   */\n      swap2\n      pop\n        /* \"#utility.yul\":9674:9767   */\n      tag_591\n        /* \"#utility.yul\":9763:9766   */\n      dup3\n        /* \"#utility.yul\":9674:9767   */\n      tag_592\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9792:9794   */\n      0x20\n        /* \"#utility.yul\":9787:9790   */\n      dup3\n        /* \"#utility.yul\":9783:9795   */\n      add\n        /* \"#utility.yul\":9776:9795   */\n      swap1\n      pop\n        /* \"#utility.yul\":9435:9801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9807:10173   */\n    tag_593:\n        /* \"#utility.yul\":9949:9952   */\n      0x00\n        /* \"#utility.yul\":9970:10037   */\n      tag_595\n        /* \"#utility.yul\":10034:10036   */\n      0x1d\n        /* \"#utility.yul\":10029:10032   */\n      dup4\n        /* \"#utility.yul\":9970:10037   */\n      tag_578\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":9963:10037   */\n      swap2\n      pop\n        /* \"#utility.yul\":10046:10139   */\n      tag_596\n        /* \"#utility.yul\":10135:10138   */\n      dup3\n        /* \"#utility.yul\":10046:10139   */\n      tag_597\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":10164:10166   */\n      0x20\n        /* \"#utility.yul\":10159:10162   */\n      dup3\n        /* \"#utility.yul\":10155:10167   */\n      add\n        /* \"#utility.yul\":10148:10167   */\n      swap1\n      pop\n        /* \"#utility.yul\":9807:10173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10179:10545   */\n    tag_598:\n        /* \"#utility.yul\":10321:10324   */\n      0x00\n        /* \"#utility.yul\":10342:10409   */\n      tag_600\n        /* \"#utility.yul\":10406:10408   */\n      0x0e\n        /* \"#utility.yul\":10401:10404   */\n      dup4\n        /* \"#utility.yul\":10342:10409   */\n      tag_578\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":10335:10409   */\n      swap2\n      pop\n        /* \"#utility.yul\":10418:10511   */\n      tag_601\n        /* \"#utility.yul\":10507:10510   */\n      dup3\n        /* \"#utility.yul\":10418:10511   */\n      tag_602\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":10536:10538   */\n      0x20\n        /* \"#utility.yul\":10531:10534   */\n      dup3\n        /* \"#utility.yul\":10527:10539   */\n      add\n        /* \"#utility.yul\":10520:10539   */\n      swap1\n      pop\n        /* \"#utility.yul\":10179:10545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10551:10917   */\n    tag_603:\n        /* \"#utility.yul\":10693:10696   */\n      0x00\n        /* \"#utility.yul\":10714:10781   */\n      tag_605\n        /* \"#utility.yul\":10778:10780   */\n      0x21\n        /* \"#utility.yul\":10773:10776   */\n      dup4\n        /* \"#utility.yul\":10714:10781   */\n      tag_578\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":10707:10781   */\n      swap2\n      pop\n        /* \"#utility.yul\":10790:10883   */\n      tag_606\n        /* \"#utility.yul\":10879:10882   */\n      dup3\n        /* \"#utility.yul\":10790:10883   */\n      tag_607\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":10908:10910   */\n      0x40\n        /* \"#utility.yul\":10903:10906   */\n      dup3\n        /* \"#utility.yul\":10899:10911   */\n      add\n        /* \"#utility.yul\":10892:10911   */\n      swap1\n      pop\n        /* \"#utility.yul\":10551:10917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10923:11289   */\n    tag_608:\n        /* \"#utility.yul\":11065:11068   */\n      0x00\n        /* \"#utility.yul\":11086:11153   */\n      tag_610\n        /* \"#utility.yul\":11150:11152   */\n      0x20\n        /* \"#utility.yul\":11145:11148   */\n      dup4\n        /* \"#utility.yul\":11086:11153   */\n      tag_578\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11079:11153   */\n      swap2\n      pop\n        /* \"#utility.yul\":11162:11255   */\n      tag_611\n        /* \"#utility.yul\":11251:11254   */\n      dup3\n        /* \"#utility.yul\":11162:11255   */\n      tag_612\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11280:11282   */\n      0x20\n        /* \"#utility.yul\":11275:11278   */\n      dup3\n        /* \"#utility.yul\":11271:11283   */\n      add\n        /* \"#utility.yul\":11264:11283   */\n      swap1\n      pop\n        /* \"#utility.yul\":10923:11289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11295:11661   */\n    tag_613:\n        /* \"#utility.yul\":11437:11440   */\n      0x00\n        /* \"#utility.yul\":11458:11525   */\n      tag_615\n        /* \"#utility.yul\":11522:11524   */\n      0x14\n        /* \"#utility.yul\":11517:11520   */\n      dup4\n        /* \"#utility.yul\":11458:11525   */\n      tag_578\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":11451:11525   */\n      swap2\n      pop\n        /* \"#utility.yul\":11534:11627   */\n      tag_616\n        /* \"#utility.yul\":11623:11626   */\n      dup3\n        /* \"#utility.yul\":11534:11627   */\n      tag_617\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":11652:11654   */\n      0x20\n        /* \"#utility.yul\":11647:11650   */\n      dup3\n        /* \"#utility.yul\":11643:11655   */\n      add\n        /* \"#utility.yul\":11636:11655   */\n      swap1\n      pop\n        /* \"#utility.yul\":11295:11661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11667:12033   */\n    tag_618:\n        /* \"#utility.yul\":11809:11812   */\n      0x00\n        /* \"#utility.yul\":11830:11897   */\n      tag_620\n        /* \"#utility.yul\":11894:11896   */\n      0x12\n        /* \"#utility.yul\":11889:11892   */\n      dup4\n        /* \"#utility.yul\":11830:11897   */\n      tag_578\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":11823:11897   */\n      swap2\n      pop\n        /* \"#utility.yul\":11906:11999   */\n      tag_621\n        /* \"#utility.yul\":11995:11998   */\n      dup3\n        /* \"#utility.yul\":11906:11999   */\n      tag_622\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":12024:12026   */\n      0x20\n        /* \"#utility.yul\":12019:12022   */\n      dup3\n        /* \"#utility.yul\":12015:12027   */\n      add\n        /* \"#utility.yul\":12008:12027   */\n      swap1\n      pop\n        /* \"#utility.yul\":11667:12033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12039:12147   */\n    tag_534:\n        /* \"#utility.yul\":12116:12140   */\n      tag_624\n        /* \"#utility.yul\":12134:12139   */\n      dup2\n        /* \"#utility.yul\":12116:12140   */\n      tag_625\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":12111:12114   */\n      dup3\n        /* \"#utility.yul\":12104:12141   */\n      mstore\n        /* \"#utility.yul\":12039:12147   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12153:12271   */\n    tag_626:\n        /* \"#utility.yul\":12240:12264   */\n      tag_628\n        /* \"#utility.yul\":12258:12263   */\n      dup2\n        /* \"#utility.yul\":12240:12264   */\n      tag_625\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":12235:12238   */\n      dup3\n        /* \"#utility.yul\":12228:12265   */\n      mstore\n        /* \"#utility.yul\":12153:12271   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12277:12499   */\n    tag_108:\n        /* \"#utility.yul\":12370:12374   */\n      0x00\n        /* \"#utility.yul\":12408:12410   */\n      0x20\n        /* \"#utility.yul\":12397:12406   */\n      dup3\n        /* \"#utility.yul\":12393:12411   */\n      add\n        /* \"#utility.yul\":12385:12411   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12492   */\n      tag_630\n        /* \"#utility.yul\":12489:12490   */\n      0x00\n        /* \"#utility.yul\":12478:12487   */\n      dup4\n        /* \"#utility.yul\":12474:12491   */\n      add\n        /* \"#utility.yul\":12465:12471   */\n      dup5\n        /* \"#utility.yul\":12421:12492   */\n      tag_535\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":12277:12499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12505:12947   */\n    tag_267:\n        /* \"#utility.yul\":12654:12658   */\n      0x00\n        /* \"#utility.yul\":12692:12694   */\n      0x60\n        /* \"#utility.yul\":12681:12690   */\n      dup3\n        /* \"#utility.yul\":12677:12695   */\n      add\n        /* \"#utility.yul\":12669:12695   */\n      swap1\n      pop\n        /* \"#utility.yul\":12705:12776   */\n      tag_632\n        /* \"#utility.yul\":12773:12774   */\n      0x00\n        /* \"#utility.yul\":12762:12771   */\n      dup4\n        /* \"#utility.yul\":12758:12775   */\n      add\n        /* \"#utility.yul\":12749:12755   */\n      dup7\n        /* \"#utility.yul\":12705:12776   */\n      tag_535\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":12786:12858   */\n      tag_633\n        /* \"#utility.yul\":12854:12856   */\n      0x20\n        /* \"#utility.yul\":12843:12852   */\n      dup4\n        /* \"#utility.yul\":12839:12857   */\n      add\n        /* \"#utility.yul\":12830:12836   */\n      dup6\n        /* \"#utility.yul\":12786:12858   */\n      tag_535\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":12868:12940   */\n      tag_634\n        /* \"#utility.yul\":12936:12938   */\n      0x40\n        /* \"#utility.yul\":12925:12934   */\n      dup4\n        /* \"#utility.yul\":12921:12939   */\n      add\n        /* \"#utility.yul\":12912:12918   */\n      dup5\n        /* \"#utility.yul\":12868:12940   */\n      tag_626\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":12505:12947   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12953:13285   */\n    tag_164:\n        /* \"#utility.yul\":13074:13078   */\n      0x00\n        /* \"#utility.yul\":13112:13114   */\n      0x40\n        /* \"#utility.yul\":13101:13110   */\n      dup3\n        /* \"#utility.yul\":13097:13115   */\n      add\n        /* \"#utility.yul\":13089:13115   */\n      swap1\n      pop\n        /* \"#utility.yul\":13125:13196   */\n      tag_636\n        /* \"#utility.yul\":13193:13194   */\n      0x00\n        /* \"#utility.yul\":13182:13191   */\n      dup4\n        /* \"#utility.yul\":13178:13195   */\n      add\n        /* \"#utility.yul\":13169:13175   */\n      dup6\n        /* \"#utility.yul\":13125:13196   */\n      tag_535\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":13206:13278   */\n      tag_637\n        /* \"#utility.yul\":13274:13276   */\n      0x20\n        /* \"#utility.yul\":13263:13272   */\n      dup4\n        /* \"#utility.yul\":13259:13277   */\n      add\n        /* \"#utility.yul\":13250:13256   */\n      dup5\n        /* \"#utility.yul\":13206:13278   */\n      tag_626\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":12953:13285   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13291:13664   */\n    tag_133:\n        /* \"#utility.yul\":13434:13438   */\n      0x00\n        /* \"#utility.yul\":13472:13474   */\n      0x20\n        /* \"#utility.yul\":13461:13470   */\n      dup3\n        /* \"#utility.yul\":13457:13475   */\n      add\n        /* \"#utility.yul\":13449:13475   */\n      swap1\n      pop\n        /* \"#utility.yul\":13521:13530   */\n      dup2\n        /* \"#utility.yul\":13515:13519   */\n      dup2\n        /* \"#utility.yul\":13511:13531   */\n      sub\n        /* \"#utility.yul\":13507:13508   */\n      0x00\n        /* \"#utility.yul\":13496:13505   */\n      dup4\n        /* \"#utility.yul\":13492:13509   */\n      add\n        /* \"#utility.yul\":13485:13532   */\n      mstore\n        /* \"#utility.yul\":13549:13657   */\n      tag_639\n        /* \"#utility.yul\":13652:13656   */\n      dup2\n        /* \"#utility.yul\":13643:13649   */\n      dup5\n        /* \"#utility.yul\":13549:13657   */\n      tag_539\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":13541:13657   */\n      swap1\n      pop\n        /* \"#utility.yul\":13291:13664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13670:13888   */\n    tag_52:\n        /* \"#utility.yul\":13761:13765   */\n      0x00\n        /* \"#utility.yul\":13799:13801   */\n      0x20\n        /* \"#utility.yul\":13788:13797   */\n      dup3\n        /* \"#utility.yul\":13784:13802   */\n      add\n        /* \"#utility.yul\":13776:13802   */\n      swap1\n      pop\n        /* \"#utility.yul\":13812:13881   */\n      tag_641\n        /* \"#utility.yul\":13878:13879   */\n      0x00\n        /* \"#utility.yul\":13867:13876   */\n      dup4\n        /* \"#utility.yul\":13863:13880   */\n      add\n        /* \"#utility.yul\":13854:13860   */\n      dup5\n        /* \"#utility.yul\":13812:13881   */\n      tag_553\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":13670:13888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13894:14144   */\n    tag_121:\n        /* \"#utility.yul\":14001:14005   */\n      0x00\n        /* \"#utility.yul\":14039:14041   */\n      0x20\n        /* \"#utility.yul\":14028:14037   */\n      dup3\n        /* \"#utility.yul\":14024:14042   */\n      add\n        /* \"#utility.yul\":14016:14042   */\n      swap1\n      pop\n        /* \"#utility.yul\":14052:14137   */\n      tag_643\n        /* \"#utility.yul\":14134:14135   */\n      0x00\n        /* \"#utility.yul\":14123:14132   */\n      dup4\n        /* \"#utility.yul\":14119:14136   */\n      add\n        /* \"#utility.yul\":14110:14116   */\n      dup5\n        /* \"#utility.yul\":14052:14137   */\n      tag_557\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":13894:14144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14150:14735   */\n    tag_57:\n        /* \"#utility.yul\":14343:14347   */\n      0x00\n        /* \"#utility.yul\":14381:14384   */\n      0x80\n        /* \"#utility.yul\":14370:14379   */\n      dup3\n        /* \"#utility.yul\":14366:14385   */\n      add\n        /* \"#utility.yul\":14358:14385   */\n      swap1\n      pop\n        /* \"#utility.yul\":14395:14482   */\n      tag_645\n        /* \"#utility.yul\":14479:14480   */\n      0x00\n        /* \"#utility.yul\":14468:14477   */\n      dup4\n        /* \"#utility.yul\":14464:14481   */\n      add\n        /* \"#utility.yul\":14455:14461   */\n      dup8\n        /* \"#utility.yul\":14395:14482   */\n      tag_561\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":14492:14564   */\n      tag_646\n        /* \"#utility.yul\":14560:14562   */\n      0x20\n        /* \"#utility.yul\":14549:14558   */\n      dup4\n        /* \"#utility.yul\":14545:14563   */\n      add\n        /* \"#utility.yul\":14536:14542   */\n      dup7\n        /* \"#utility.yul\":14492:14564   */\n      tag_626\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":14574:14646   */\n      tag_647\n        /* \"#utility.yul\":14642:14644   */\n      0x40\n        /* \"#utility.yul\":14631:14640   */\n      dup4\n        /* \"#utility.yul\":14627:14645   */\n      add\n        /* \"#utility.yul\":14618:14624   */\n      dup6\n        /* \"#utility.yul\":14574:14646   */\n      tag_626\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":14656:14728   */\n      tag_648\n        /* \"#utility.yul\":14724:14726   */\n      0x60\n        /* \"#utility.yul\":14713:14722   */\n      dup4\n        /* \"#utility.yul\":14709:14727   */\n      add\n        /* \"#utility.yul\":14700:14706   */\n      dup5\n        /* \"#utility.yul\":14656:14728   */\n      tag_626\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":14150:14735   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14741:15005   */\n    tag_101:\n        /* \"#utility.yul\":14855:14859   */\n      0x00\n        /* \"#utility.yul\":14893:14895   */\n      0x20\n        /* \"#utility.yul\":14882:14891   */\n      dup3\n        /* \"#utility.yul\":14878:14896   */\n      add\n        /* \"#utility.yul\":14870:14896   */\n      swap1\n      pop\n        /* \"#utility.yul\":14906:14998   */\n      tag_650\n        /* \"#utility.yul\":14995:14996   */\n      0x00\n        /* \"#utility.yul\":14984:14993   */\n      dup4\n        /* \"#utility.yul\":14980:14997   */\n      add\n        /* \"#utility.yul\":14971:14977   */\n      dup5\n        /* \"#utility.yul\":14906:14998   */\n      tag_565\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":14741:15005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15011:15279   */\n    tag_140:\n        /* \"#utility.yul\":15127:15131   */\n      0x00\n        /* \"#utility.yul\":15165:15167   */\n      0x20\n        /* \"#utility.yul\":15154:15163   */\n      dup3\n        /* \"#utility.yul\":15150:15168   */\n      add\n        /* \"#utility.yul\":15142:15168   */\n      swap1\n      pop\n        /* \"#utility.yul\":15178:15272   */\n      tag_652\n        /* \"#utility.yul\":15269:15270   */\n      0x00\n        /* \"#utility.yul\":15258:15267   */\n      dup4\n        /* \"#utility.yul\":15254:15271   */\n      add\n        /* \"#utility.yul\":15245:15251   */\n      dup5\n        /* \"#utility.yul\":15178:15272   */\n      tag_569\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":15011:15279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15285:15598   */\n    tag_427:\n        /* \"#utility.yul\":15398:15402   */\n      0x00\n        /* \"#utility.yul\":15436:15438   */\n      0x20\n        /* \"#utility.yul\":15425:15434   */\n      dup3\n        /* \"#utility.yul\":15421:15439   */\n      add\n        /* \"#utility.yul\":15413:15439   */\n      swap1\n      pop\n        /* \"#utility.yul\":15485:15494   */\n      dup2\n        /* \"#utility.yul\":15479:15483   */\n      dup2\n        /* \"#utility.yul\":15475:15495   */\n      sub\n        /* \"#utility.yul\":15471:15472   */\n      0x00\n        /* \"#utility.yul\":15460:15469   */\n      dup4\n        /* \"#utility.yul\":15456:15473   */\n      add\n        /* \"#utility.yul\":15449:15496   */\n      mstore\n        /* \"#utility.yul\":15513:15591   */\n      tag_654\n        /* \"#utility.yul\":15586:15590   */\n      dup2\n        /* \"#utility.yul\":15577:15583   */\n      dup5\n        /* \"#utility.yul\":15513:15591   */\n      tag_573\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":15505:15591   */\n      swap1\n      pop\n        /* \"#utility.yul\":15285:15598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15604:16023   */\n    tag_381:\n        /* \"#utility.yul\":15770:15774   */\n      0x00\n        /* \"#utility.yul\":15808:15810   */\n      0x20\n        /* \"#utility.yul\":15797:15806   */\n      dup3\n        /* \"#utility.yul\":15793:15811   */\n      add\n        /* \"#utility.yul\":15785:15811   */\n      swap1\n      pop\n        /* \"#utility.yul\":15857:15866   */\n      dup2\n        /* \"#utility.yul\":15851:15855   */\n      dup2\n        /* \"#utility.yul\":15847:15867   */\n      sub\n        /* \"#utility.yul\":15843:15844   */\n      0x00\n        /* \"#utility.yul\":15832:15841   */\n      dup4\n        /* \"#utility.yul\":15828:15845   */\n      add\n        /* \"#utility.yul\":15821:15868   */\n      mstore\n        /* \"#utility.yul\":15885:16016   */\n      tag_656\n        /* \"#utility.yul\":16011:16015   */\n      dup2\n        /* \"#utility.yul\":15885:16016   */\n      tag_583\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":15877:16016   */\n      swap1\n      pop\n        /* \"#utility.yul\":15604:16023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16029:16448   */\n    tag_404:\n        /* \"#utility.yul\":16195:16199   */\n      0x00\n        /* \"#utility.yul\":16233:16235   */\n      0x20\n        /* \"#utility.yul\":16222:16231   */\n      dup3\n        /* \"#utility.yul\":16218:16236   */\n      add\n        /* \"#utility.yul\":16210:16236   */\n      swap1\n      pop\n        /* \"#utility.yul\":16282:16291   */\n      dup2\n        /* \"#utility.yul\":16276:16280   */\n      dup2\n        /* \"#utility.yul\":16272:16292   */\n      sub\n        /* \"#utility.yul\":16268:16269   */\n      0x00\n        /* \"#utility.yul\":16257:16266   */\n      dup4\n        /* \"#utility.yul\":16253:16270   */\n      add\n        /* \"#utility.yul\":16246:16293   */\n      mstore\n        /* \"#utility.yul\":16310:16441   */\n      tag_658\n        /* \"#utility.yul\":16436:16440   */\n      dup2\n        /* \"#utility.yul\":16310:16441   */\n      tag_588\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":16302:16441   */\n      swap1\n      pop\n        /* \"#utility.yul\":16029:16448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16454:16873   */\n    tag_253:\n        /* \"#utility.yul\":16620:16624   */\n      0x00\n        /* \"#utility.yul\":16658:16660   */\n      0x20\n        /* \"#utility.yul\":16647:16656   */\n      dup3\n        /* \"#utility.yul\":16643:16661   */\n      add\n        /* \"#utility.yul\":16635:16661   */\n      swap1\n      pop\n        /* \"#utility.yul\":16707:16716   */\n      dup2\n        /* \"#utility.yul\":16701:16705   */\n      dup2\n        /* \"#utility.yul\":16697:16717   */\n      sub\n        /* \"#utility.yul\":16693:16694   */\n      0x00\n        /* \"#utility.yul\":16682:16691   */\n      dup4\n        /* \"#utility.yul\":16678:16695   */\n      add\n        /* \"#utility.yul\":16671:16718   */\n      mstore\n        /* \"#utility.yul\":16735:16866   */\n      tag_660\n        /* \"#utility.yul\":16861:16865   */\n      dup2\n        /* \"#utility.yul\":16735:16866   */\n      tag_593\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":16727:16866   */\n      swap1\n      pop\n        /* \"#utility.yul\":16454:16873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16879:17298   */\n    tag_162:\n        /* \"#utility.yul\":17045:17049   */\n      0x00\n        /* \"#utility.yul\":17083:17085   */\n      0x20\n        /* \"#utility.yul\":17072:17081   */\n      dup3\n        /* \"#utility.yul\":17068:17086   */\n      add\n        /* \"#utility.yul\":17060:17086   */\n      swap1\n      pop\n        /* \"#utility.yul\":17132:17141   */\n      dup2\n        /* \"#utility.yul\":17126:17130   */\n      dup2\n        /* \"#utility.yul\":17122:17142   */\n      sub\n        /* \"#utility.yul\":17118:17119   */\n      0x00\n        /* \"#utility.yul\":17107:17116   */\n      dup4\n        /* \"#utility.yul\":17103:17120   */\n      add\n        /* \"#utility.yul\":17096:17143   */\n      mstore\n        /* \"#utility.yul\":17160:17291   */\n      tag_662\n        /* \"#utility.yul\":17286:17290   */\n      dup2\n        /* \"#utility.yul\":17160:17291   */\n      tag_598\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":17152:17291   */\n      swap1\n      pop\n        /* \"#utility.yul\":16879:17298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17304:17723   */\n    tag_391:\n        /* \"#utility.yul\":17470:17474   */\n      0x00\n        /* \"#utility.yul\":17508:17510   */\n      0x20\n        /* \"#utility.yul\":17497:17506   */\n      dup3\n        /* \"#utility.yul\":17493:17511   */\n      add\n        /* \"#utility.yul\":17485:17511   */\n      swap1\n      pop\n        /* \"#utility.yul\":17557:17566   */\n      dup2\n        /* \"#utility.yul\":17551:17555   */\n      dup2\n        /* \"#utility.yul\":17547:17567   */\n      sub\n        /* \"#utility.yul\":17543:17544   */\n      0x00\n        /* \"#utility.yul\":17532:17541   */\n      dup4\n        /* \"#utility.yul\":17528:17545   */\n      add\n        /* \"#utility.yul\":17521:17568   */\n      mstore\n        /* \"#utility.yul\":17585:17716   */\n      tag_664\n        /* \"#utility.yul\":17711:17715   */\n      dup2\n        /* \"#utility.yul\":17585:17716   */\n      tag_603\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":17577:17716   */\n      swap1\n      pop\n        /* \"#utility.yul\":17304:17723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17729:18148   */\n    tag_187:\n        /* \"#utility.yul\":17895:17899   */\n      0x00\n        /* \"#utility.yul\":17933:17935   */\n      0x20\n        /* \"#utility.yul\":17922:17931   */\n      dup3\n        /* \"#utility.yul\":17918:17936   */\n      add\n        /* \"#utility.yul\":17910:17936   */\n      swap1\n      pop\n        /* \"#utility.yul\":17982:17991   */\n      dup2\n        /* \"#utility.yul\":17976:17980   */\n      dup2\n        /* \"#utility.yul\":17972:17992   */\n      sub\n        /* \"#utility.yul\":17968:17969   */\n      0x00\n        /* \"#utility.yul\":17957:17966   */\n      dup4\n        /* \"#utility.yul\":17953:17970   */\n      add\n        /* \"#utility.yul\":17946:17993   */\n      mstore\n        /* \"#utility.yul\":18010:18141   */\n      tag_666\n        /* \"#utility.yul\":18136:18140   */\n      dup2\n        /* \"#utility.yul\":18010:18141   */\n      tag_608\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":18002:18141   */\n      swap1\n      pop\n        /* \"#utility.yul\":17729:18148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18154:18573   */\n    tag_353:\n        /* \"#utility.yul\":18320:18324   */\n      0x00\n        /* \"#utility.yul\":18358:18360   */\n      0x20\n        /* \"#utility.yul\":18347:18356   */\n      dup3\n        /* \"#utility.yul\":18343:18361   */\n      add\n        /* \"#utility.yul\":18335:18361   */\n      swap1\n      pop\n        /* \"#utility.yul\":18407:18416   */\n      dup2\n        /* \"#utility.yul\":18401:18405   */\n      dup2\n        /* \"#utility.yul\":18397:18417   */\n      sub\n        /* \"#utility.yul\":18393:18394   */\n      0x00\n        /* \"#utility.yul\":18382:18391   */\n      dup4\n        /* \"#utility.yul\":18378:18395   */\n      add\n        /* \"#utility.yul\":18371:18418   */\n      mstore\n        /* \"#utility.yul\":18435:18566   */\n      tag_668\n        /* \"#utility.yul\":18561:18565   */\n      dup2\n        /* \"#utility.yul\":18435:18566   */\n      tag_613\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":18427:18566   */\n      swap1\n      pop\n        /* \"#utility.yul\":18154:18573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18579:18998   */\n    tag_230:\n        /* \"#utility.yul\":18745:18749   */\n      0x00\n        /* \"#utility.yul\":18783:18785   */\n      0x20\n        /* \"#utility.yul\":18772:18781   */\n      dup3\n        /* \"#utility.yul\":18768:18786   */\n      add\n        /* \"#utility.yul\":18760:18786   */\n      swap1\n      pop\n        /* \"#utility.yul\":18832:18841   */\n      dup2\n        /* \"#utility.yul\":18826:18830   */\n      dup2\n        /* \"#utility.yul\":18822:18842   */\n      sub\n        /* \"#utility.yul\":18818:18819   */\n      0x00\n        /* \"#utility.yul\":18807:18816   */\n      dup4\n        /* \"#utility.yul\":18803:18820   */\n      add\n        /* \"#utility.yul\":18796:18843   */\n      mstore\n        /* \"#utility.yul\":18860:18991   */\n      tag_670\n        /* \"#utility.yul\":18986:18990   */\n      dup2\n        /* \"#utility.yul\":18860:18991   */\n      tag_618\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":18852:18991   */\n      swap1\n      pop\n        /* \"#utility.yul\":18579:18998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19004:19226   */\n    tag_42:\n        /* \"#utility.yul\":19097:19101   */\n      0x00\n        /* \"#utility.yul\":19135:19137   */\n      0x20\n        /* \"#utility.yul\":19124:19133   */\n      dup3\n        /* \"#utility.yul\":19120:19138   */\n      add\n        /* \"#utility.yul\":19112:19138   */\n      swap1\n      pop\n        /* \"#utility.yul\":19148:19219   */\n      tag_672\n        /* \"#utility.yul\":19216:19217   */\n      0x00\n        /* \"#utility.yul\":19205:19214   */\n      dup4\n        /* \"#utility.yul\":19201:19218   */\n      add\n        /* \"#utility.yul\":19192:19198   */\n      dup5\n        /* \"#utility.yul\":19148:19219   */\n      tag_626\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":19004:19226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19232:19564   */\n    tag_171:\n        /* \"#utility.yul\":19353:19357   */\n      0x00\n        /* \"#utility.yul\":19391:19393   */\n      0x40\n        /* \"#utility.yul\":19380:19389   */\n      dup3\n        /* \"#utility.yul\":19376:19394   */\n      add\n        /* \"#utility.yul\":19368:19394   */\n      swap1\n      pop\n        /* \"#utility.yul\":19404:19475   */\n      tag_674\n        /* \"#utility.yul\":19472:19473   */\n      0x00\n        /* \"#utility.yul\":19461:19470   */\n      dup4\n        /* \"#utility.yul\":19457:19474   */\n      add\n        /* \"#utility.yul\":19448:19454   */\n      dup6\n        /* \"#utility.yul\":19404:19475   */\n      tag_626\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":19485:19557   */\n      tag_675\n        /* \"#utility.yul\":19553:19555   */\n      0x20\n        /* \"#utility.yul\":19542:19551   */\n      dup4\n        /* \"#utility.yul\":19538:19556   */\n      add\n        /* \"#utility.yul\":19529:19535   */\n      dup5\n        /* \"#utility.yul\":19485:19557   */\n      tag_535\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":19232:19564   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19570:19902   */\n    tag_117:\n        /* \"#utility.yul\":19691:19695   */\n      0x00\n        /* \"#utility.yul\":19729:19731   */\n      0x40\n        /* \"#utility.yul\":19718:19727   */\n      dup3\n        /* \"#utility.yul\":19714:19732   */\n      add\n        /* \"#utility.yul\":19706:19732   */\n      swap1\n      pop\n        /* \"#utility.yul\":19742:19813   */\n      tag_677\n        /* \"#utility.yul\":19810:19811   */\n      0x00\n        /* \"#utility.yul\":19799:19808   */\n      dup4\n        /* \"#utility.yul\":19795:19812   */\n      add\n        /* \"#utility.yul\":19786:19792   */\n      dup6\n        /* \"#utility.yul\":19742:19813   */\n      tag_626\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":19823:19895   */\n      tag_678\n        /* \"#utility.yul\":19891:19893   */\n      0x20\n        /* \"#utility.yul\":19880:19889   */\n      dup4\n        /* \"#utility.yul\":19876:19894   */\n      add\n        /* \"#utility.yul\":19867:19873   */\n      dup5\n        /* \"#utility.yul\":19823:19895   */\n      tag_626\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":19570:19902   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19908:20037   */\n    tag_440:\n        /* \"#utility.yul\":19942:19948   */\n      0x00\n        /* \"#utility.yul\":19969:19989   */\n      tag_680\n      tag_681\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":19959:19989   */\n      swap1\n      pop\n        /* \"#utility.yul\":19998:20031   */\n      tag_682\n        /* \"#utility.yul\":20026:20030   */\n      dup3\n        /* \"#utility.yul\":20018:20024   */\n      dup3\n        /* \"#utility.yul\":19998:20031   */\n      tag_683\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":19908:20037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20043:20118   */\n    tag_681:\n        /* \"#utility.yul\":20076:20082   */\n      0x00\n        /* \"#utility.yul\":20109:20111   */\n      0x40\n        /* \"#utility.yul\":20103:20112   */\n      mload\n        /* \"#utility.yul\":20093:20112   */\n      swap1\n      pop\n        /* \"#utility.yul\":20043:20118   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20124:20431   */\n    tag_439:\n        /* \"#utility.yul\":20185:20189   */\n      0x00\n        /* \"#utility.yul\":20275:20293   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20267:20273   */\n      dup3\n        /* \"#utility.yul\":20264:20294   */\n      gt\n        /* \"#utility.yul\":20261:20317   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":20297:20315   */\n      tag_687\n      tag_688\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":20261:20317   */\n    tag_686:\n        /* \"#utility.yul\":20335:20364   */\n      tag_689\n        /* \"#utility.yul\":20357:20363   */\n      dup3\n        /* \"#utility.yul\":20335:20364   */\n      tag_582\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":20327:20364   */\n      swap1\n      pop\n        /* \"#utility.yul\":20419:20423   */\n      0x20\n        /* \"#utility.yul\":20413:20417   */\n      dup2\n        /* \"#utility.yul\":20409:20424   */\n      add\n        /* \"#utility.yul\":20401:20424   */\n      swap1\n      pop\n        /* \"#utility.yul\":20124:20431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20437:20569   */\n    tag_546:\n        /* \"#utility.yul\":20504:20508   */\n      0x00\n        /* \"#utility.yul\":20527:20530   */\n      dup2\n        /* \"#utility.yul\":20519:20530   */\n      swap1\n      pop\n        /* \"#utility.yul\":20557:20561   */\n      0x20\n        /* \"#utility.yul\":20552:20555   */\n      dup3\n        /* \"#utility.yul\":20548:20562   */\n      add\n        /* \"#utility.yul\":20540:20562   */\n      swap1\n      pop\n        /* \"#utility.yul\":20437:20569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20575:20689   */\n    tag_542:\n        /* \"#utility.yul\":20642:20648   */\n      0x00\n        /* \"#utility.yul\":20676:20681   */\n      dup2\n        /* \"#utility.yul\":20670:20682   */\n      mload\n        /* \"#utility.yul\":20660:20682   */\n      swap1\n      pop\n        /* \"#utility.yul\":20575:20689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20695:20794   */\n    tag_576:\n        /* \"#utility.yul\":20747:20753   */\n      0x00\n        /* \"#utility.yul\":20781:20786   */\n      dup2\n        /* \"#utility.yul\":20775:20787   */\n      mload\n        /* \"#utility.yul\":20765:20787   */\n      swap1\n      pop\n        /* \"#utility.yul\":20695:20794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20800:20913   */\n    tag_552:\n        /* \"#utility.yul\":20870:20874   */\n      0x00\n        /* \"#utility.yul\":20902:20906   */\n      0x20\n        /* \"#utility.yul\":20897:20900   */\n      dup3\n        /* \"#utility.yul\":20893:20907   */\n      add\n        /* \"#utility.yul\":20885:20907   */\n      swap1\n      pop\n        /* \"#utility.yul\":20800:20913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20919:21103   */\n    tag_544:\n        /* \"#utility.yul\":21018:21029   */\n      0x00\n        /* \"#utility.yul\":21052:21058   */\n      dup3\n        /* \"#utility.yul\":21047:21050   */\n      dup3\n        /* \"#utility.yul\":21040:21059   */\n      mstore\n        /* \"#utility.yul\":21092:21096   */\n      0x20\n        /* \"#utility.yul\":21087:21090   */\n      dup3\n        /* \"#utility.yul\":21083:21097   */\n      add\n        /* \"#utility.yul\":21068:21097   */\n      swap1\n      pop\n        /* \"#utility.yul\":20919:21103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21109:21278   */\n    tag_578:\n        /* \"#utility.yul\":21193:21204   */\n      0x00\n        /* \"#utility.yul\":21227:21233   */\n      dup3\n        /* \"#utility.yul\":21222:21225   */\n      dup3\n        /* \"#utility.yul\":21215:21234   */\n      mstore\n        /* \"#utility.yul\":21267:21271   */\n      0x20\n        /* \"#utility.yul\":21262:21265   */\n      dup3\n        /* \"#utility.yul\":21258:21272   */\n      add\n        /* \"#utility.yul\":21243:21272   */\n      swap1\n      pop\n        /* \"#utility.yul\":21109:21278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21284:21589   */\n    tag_401:\n        /* \"#utility.yul\":21324:21327   */\n      0x00\n        /* \"#utility.yul\":21343:21363   */\n      tag_697\n        /* \"#utility.yul\":21361:21362   */\n      dup3\n        /* \"#utility.yul\":21343:21363   */\n      tag_625\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":21338:21363   */\n      swap2\n      pop\n        /* \"#utility.yul\":21377:21397   */\n      tag_698\n        /* \"#utility.yul\":21395:21396   */\n      dup4\n        /* \"#utility.yul\":21377:21397   */\n      tag_625\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":21372:21397   */\n      swap3\n      pop\n        /* \"#utility.yul\":21531:21532   */\n      dup3\n        /* \"#utility.yul\":21463:21529   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21459:21533   */\n      sub\n        /* \"#utility.yul\":21456:21457   */\n      dup3\n        /* \"#utility.yul\":21453:21534   */\n      gt\n        /* \"#utility.yul\":21450:21557   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":21537:21555   */\n      tag_700\n      tag_701\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":21450:21557   */\n    tag_699:\n        /* \"#utility.yul\":21581:21582   */\n      dup3\n        /* \"#utility.yul\":21578:21579   */\n      dup3\n        /* \"#utility.yul\":21574:21583   */\n      add\n        /* \"#utility.yul\":21567:21583   */\n      swap1\n      pop\n        /* \"#utility.yul\":21284:21589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21595:21780   */\n    tag_388:\n        /* \"#utility.yul\":21635:21636   */\n      0x00\n        /* \"#utility.yul\":21652:21672   */\n      tag_703\n        /* \"#utility.yul\":21670:21671   */\n      dup3\n        /* \"#utility.yul\":21652:21672   */\n      tag_625\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":21647:21672   */\n      swap2\n      pop\n        /* \"#utility.yul\":21686:21706   */\n      tag_704\n        /* \"#utility.yul\":21704:21705   */\n      dup4\n        /* \"#utility.yul\":21686:21706   */\n      tag_625\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":21681:21706   */\n      swap3\n      pop\n        /* \"#utility.yul\":21725:21726   */\n      dup3\n        /* \"#utility.yul\":21715:21750   */\n      tag_705\n      jumpi\n        /* \"#utility.yul\":21730:21748   */\n      tag_706\n      tag_707\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":21715:21750   */\n    tag_705:\n        /* \"#utility.yul\":21772:21773   */\n      dup3\n        /* \"#utility.yul\":21769:21770   */\n      dup3\n        /* \"#utility.yul\":21765:21774   */\n      div\n        /* \"#utility.yul\":21760:21774   */\n      swap1\n      pop\n        /* \"#utility.yul\":21595:21780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21786:22134   */\n    tag_386:\n        /* \"#utility.yul\":21826:21833   */\n      0x00\n        /* \"#utility.yul\":21849:21869   */\n      tag_709\n        /* \"#utility.yul\":21867:21868   */\n      dup3\n        /* \"#utility.yul\":21849:21869   */\n      tag_625\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":21844:21869   */\n      swap2\n      pop\n        /* \"#utility.yul\":21883:21903   */\n      tag_710\n        /* \"#utility.yul\":21901:21902   */\n      dup4\n        /* \"#utility.yul\":21883:21903   */\n      tag_625\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":21878:21903   */\n      swap3\n      pop\n        /* \"#utility.yul\":22071:22072   */\n      dup2\n        /* \"#utility.yul\":22003:22069   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21999:22073   */\n      div\n        /* \"#utility.yul\":21996:21997   */\n      dup4\n        /* \"#utility.yul\":21993:22074   */\n      gt\n        /* \"#utility.yul\":21988:21989   */\n      dup3\n        /* \"#utility.yul\":21981:21990   */\n      iszero\n        /* \"#utility.yul\":21974:21991   */\n      iszero\n        /* \"#utility.yul\":21970:22075   */\n      and\n        /* \"#utility.yul\":21967:22098   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":22078:22096   */\n      tag_712\n      tag_701\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":21967:22098   */\n    tag_711:\n        /* \"#utility.yul\":22126:22127   */\n      dup3\n        /* \"#utility.yul\":22123:22124   */\n      dup3\n        /* \"#utility.yul\":22119:22128   */\n      mul\n        /* \"#utility.yul\":22108:22128   */\n      swap1\n      pop\n        /* \"#utility.yul\":21786:22134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22140:22331   */\n    tag_433:\n        /* \"#utility.yul\":22180:22184   */\n      0x00\n        /* \"#utility.yul\":22200:22220   */\n      tag_714\n        /* \"#utility.yul\":22218:22219   */\n      dup3\n        /* \"#utility.yul\":22200:22220   */\n      tag_625\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":22195:22220   */\n      swap2\n      pop\n        /* \"#utility.yul\":22234:22254   */\n      tag_715\n        /* \"#utility.yul\":22252:22253   */\n      dup4\n        /* \"#utility.yul\":22234:22254   */\n      tag_625\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":22229:22254   */\n      swap3\n      pop\n        /* \"#utility.yul\":22273:22274   */\n      dup3\n        /* \"#utility.yul\":22270:22271   */\n      dup3\n        /* \"#utility.yul\":22267:22275   */\n      lt\n        /* \"#utility.yul\":22264:22298   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":22278:22296   */\n      tag_717\n      tag_701\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":22264:22298   */\n    tag_716:\n        /* \"#utility.yul\":22323:22324   */\n      dup3\n        /* \"#utility.yul\":22320:22321   */\n      dup3\n        /* \"#utility.yul\":22316:22325   */\n      sub\n        /* \"#utility.yul\":22308:22325   */\n      swap1\n      pop\n        /* \"#utility.yul\":22140:22331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22337:22433   */\n    tag_538:\n        /* \"#utility.yul\":22374:22381   */\n      0x00\n        /* \"#utility.yul\":22403:22427   */\n      tag_719\n        /* \"#utility.yul\":22421:22426   */\n      dup3\n        /* \"#utility.yul\":22403:22427   */\n      tag_720\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":22392:22427   */\n      swap1\n      pop\n        /* \"#utility.yul\":22337:22433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22439:22529   */\n    tag_721:\n        /* \"#utility.yul\":22473:22480   */\n      0x00\n        /* \"#utility.yul\":22516:22521   */\n      dup2\n        /* \"#utility.yul\":22509:22522   */\n      iszero\n        /* \"#utility.yul\":22502:22523   */\n      iszero\n        /* \"#utility.yul\":22491:22523   */\n      swap1\n      pop\n        /* \"#utility.yul\":22439:22529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22535:22684   */\n    tag_556:\n        /* \"#utility.yul\":22571:22578   */\n      0x00\n        /* \"#utility.yul\":22611:22677   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22604:22609   */\n      dup3\n        /* \"#utility.yul\":22600:22678   */\n      and\n        /* \"#utility.yul\":22589:22678   */\n      swap1\n      pop\n        /* \"#utility.yul\":22535:22684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22690:22802   */\n    tag_724:\n        /* \"#utility.yul\":22743:22750   */\n      0x00\n        /* \"#utility.yul\":22772:22796   */\n      tag_726\n        /* \"#utility.yul\":22790:22795   */\n      dup3\n        /* \"#utility.yul\":22772:22796   */\n      tag_538\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":22761:22796   */\n      swap1\n      pop\n        /* \"#utility.yul\":22690:22802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22808:22925   */\n    tag_727:\n        /* \"#utility.yul\":22866:22873   */\n      0x00\n        /* \"#utility.yul\":22895:22919   */\n      tag_729\n        /* \"#utility.yul\":22913:22918   */\n      dup3\n        /* \"#utility.yul\":22895:22919   */\n      tag_538\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":22884:22919   */\n      swap1\n      pop\n        /* \"#utility.yul\":22808:22925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22931:23057   */\n    tag_720:\n        /* \"#utility.yul\":22968:22975   */\n      0x00\n        /* \"#utility.yul\":23008:23050   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23001:23006   */\n      dup3\n        /* \"#utility.yul\":22997:23051   */\n      and\n        /* \"#utility.yul\":22986:23051   */\n      swap1\n      pop\n        /* \"#utility.yul\":22931:23057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23063:23140   */\n    tag_625:\n        /* \"#utility.yul\":23100:23107   */\n      0x00\n        /* \"#utility.yul\":23129:23134   */\n      dup2\n        /* \"#utility.yul\":23118:23134   */\n      swap1\n      pop\n        /* \"#utility.yul\":23063:23140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23146:23286   */\n    tag_560:\n        /* \"#utility.yul\":23210:23219   */\n      0x00\n        /* \"#utility.yul\":23243:23280   */\n      tag_733\n        /* \"#utility.yul\":23274:23279   */\n      dup3\n        /* \"#utility.yul\":23243:23280   */\n      tag_734\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":23230:23280   */\n      swap1\n      pop\n        /* \"#utility.yul\":23146:23286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23292:23434   */\n    tag_564:\n        /* \"#utility.yul\":23358:23367   */\n      0x00\n        /* \"#utility.yul\":23391:23428   */\n      tag_736\n        /* \"#utility.yul\":23422:23427   */\n      dup3\n        /* \"#utility.yul\":23391:23428   */\n      tag_734\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":23378:23428   */\n      swap1\n      pop\n        /* \"#utility.yul\":23292:23434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23440:23587   */\n    tag_568:\n        /* \"#utility.yul\":23511:23520   */\n      0x00\n        /* \"#utility.yul\":23544:23581   */\n      tag_738\n        /* \"#utility.yul\":23575:23580   */\n      dup3\n        /* \"#utility.yul\":23544:23581   */\n      tag_734\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":23531:23581   */\n      swap1\n      pop\n        /* \"#utility.yul\":23440:23587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23593:23742   */\n    tag_572:\n        /* \"#utility.yul\":23666:23675   */\n      0x00\n        /* \"#utility.yul\":23699:23736   */\n      tag_740\n        /* \"#utility.yul\":23730:23735   */\n      dup3\n        /* \"#utility.yul\":23699:23736   */\n      tag_734\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":23686:23736   */\n      swap1\n      pop\n        /* \"#utility.yul\":23593:23742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23748:23874   */\n    tag_734:\n        /* \"#utility.yul\":23798:23807   */\n      0x00\n        /* \"#utility.yul\":23831:23868   */\n      tag_742\n        /* \"#utility.yul\":23862:23867   */\n      dup3\n        /* \"#utility.yul\":23831:23868   */\n      tag_743\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":23818:23868   */\n      swap1\n      pop\n        /* \"#utility.yul\":23748:23874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23880:23993   */\n    tag_743:\n        /* \"#utility.yul\":23930:23939   */\n      0x00\n        /* \"#utility.yul\":23963:23987   */\n      tag_745\n        /* \"#utility.yul\":23981:23986   */\n      dup3\n        /* \"#utility.yul\":23963:23987   */\n      tag_720\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":23950:23987   */\n      swap1\n      pop\n        /* \"#utility.yul\":23880:23993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23999:24153   */\n    tag_445:\n        /* \"#utility.yul\":24083:24089   */\n      dup3\n        /* \"#utility.yul\":24078:24081   */\n      dup2\n        /* \"#utility.yul\":24073:24076   */\n      dup4\n        /* \"#utility.yul\":24060:24090   */\n      calldatacopy\n        /* \"#utility.yul\":24145:24146   */\n      0x00\n        /* \"#utility.yul\":24136:24142   */\n      dup4\n        /* \"#utility.yul\":24131:24134   */\n      dup4\n        /* \"#utility.yul\":24127:24143   */\n      add\n        /* \"#utility.yul\":24120:24147   */\n      mstore\n        /* \"#utility.yul\":23999:24153   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24159:24466   */\n    tag_580:\n        /* \"#utility.yul\":24227:24228   */\n      0x00\n        /* \"#utility.yul\":24237:24350   */\n    tag_748:\n        /* \"#utility.yul\":24251:24257   */\n      dup4\n        /* \"#utility.yul\":24248:24249   */\n      dup2\n        /* \"#utility.yul\":24245:24258   */\n      lt\n        /* \"#utility.yul\":24237:24350   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":24336:24337   */\n      dup1\n        /* \"#utility.yul\":24331:24334   */\n      dup3\n        /* \"#utility.yul\":24327:24338   */\n      add\n        /* \"#utility.yul\":24321:24339   */\n      mload\n        /* \"#utility.yul\":24317:24318   */\n      dup2\n        /* \"#utility.yul\":24312:24315   */\n      dup5\n        /* \"#utility.yul\":24308:24319   */\n      add\n        /* \"#utility.yul\":24301:24340   */\n      mstore\n        /* \"#utility.yul\":24273:24275   */\n      0x20\n        /* \"#utility.yul\":24270:24271   */\n      dup2\n        /* \"#utility.yul\":24266:24276   */\n      add\n        /* \"#utility.yul\":24261:24276   */\n      swap1\n      pop\n        /* \"#utility.yul\":24237:24350   */\n      jump(tag_748)\n    tag_750:\n        /* \"#utility.yul\":24368:24374   */\n      dup4\n        /* \"#utility.yul\":24365:24366   */\n      dup2\n        /* \"#utility.yul\":24362:24375   */\n      gt\n        /* \"#utility.yul\":24359:24460   */\n      iszero\n      tag_751\n      jumpi\n        /* \"#utility.yul\":24448:24449   */\n      0x00\n        /* \"#utility.yul\":24439:24445   */\n      dup5\n        /* \"#utility.yul\":24434:24437   */\n      dup5\n        /* \"#utility.yul\":24430:24446   */\n      add\n        /* \"#utility.yul\":24423:24450   */\n      mstore\n        /* \"#utility.yul\":24359:24460   */\n    tag_751:\n        /* \"#utility.yul\":24208:24466   */\n      pop\n        /* \"#utility.yul\":24159:24466   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24472:24753   */\n    tag_683:\n        /* \"#utility.yul\":24555:24582   */\n      tag_753\n        /* \"#utility.yul\":24577:24581   */\n      dup3\n        /* \"#utility.yul\":24555:24582   */\n      tag_582\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":24547:24553   */\n      dup2\n        /* \"#utility.yul\":24543:24583   */\n      add\n        /* \"#utility.yul\":24685:24691   */\n      dup2\n        /* \"#utility.yul\":24673:24683   */\n      dup2\n        /* \"#utility.yul\":24670:24692   */\n      lt\n        /* \"#utility.yul\":24649:24667   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24637:24647   */\n      dup3\n        /* \"#utility.yul\":24634:24668   */\n      gt\n        /* \"#utility.yul\":24631:24693   */\n      or\n        /* \"#utility.yul\":24628:24716   */\n      iszero\n      tag_754\n      jumpi\n        /* \"#utility.yul\":24696:24714   */\n      tag_755\n      tag_688\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":24628:24716   */\n    tag_754:\n        /* \"#utility.yul\":24736:24746   */\n      dup1\n        /* \"#utility.yul\":24732:24734   */\n      0x40\n        /* \"#utility.yul\":24725:24747   */\n      mstore\n        /* \"#utility.yul\":24515:24753   */\n      pop\n        /* \"#utility.yul\":24472:24753   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24759:24992   */\n    tag_250:\n        /* \"#utility.yul\":24798:24801   */\n      0x00\n        /* \"#utility.yul\":24821:24845   */\n      tag_757\n        /* \"#utility.yul\":24839:24844   */\n      dup3\n        /* \"#utility.yul\":24821:24845   */\n      tag_625\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":24812:24845   */\n      swap2\n      pop\n        /* \"#utility.yul\":24867:24933   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24860:24865   */\n      dup3\n        /* \"#utility.yul\":24857:24934   */\n      eq\n        /* \"#utility.yul\":24854:24957   */\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":24937:24955   */\n      tag_759\n      tag_701\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":24854:24957   */\n    tag_758:\n        /* \"#utility.yul\":24984:24985   */\n      0x01\n        /* \"#utility.yul\":24977:24982   */\n      dup3\n        /* \"#utility.yul\":24973:24986   */\n      add\n        /* \"#utility.yul\":24966:24986   */\n      swap1\n      pop\n        /* \"#utility.yul\":24759:24992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24998:25178   */\n    tag_701:\n        /* \"#utility.yul\":25046:25123   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25043:25044   */\n      0x00\n        /* \"#utility.yul\":25036:25124   */\n      mstore\n        /* \"#utility.yul\":25143:25147   */\n      0x11\n        /* \"#utility.yul\":25140:25141   */\n      0x04\n        /* \"#utility.yul\":25133:25148   */\n      mstore\n        /* \"#utility.yul\":25167:25171   */\n      0x24\n        /* \"#utility.yul\":25164:25165   */\n      0x00\n        /* \"#utility.yul\":25157:25172   */\n      revert\n        /* \"#utility.yul\":25184:25364   */\n    tag_707:\n        /* \"#utility.yul\":25232:25309   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25229:25230   */\n      0x00\n        /* \"#utility.yul\":25222:25310   */\n      mstore\n        /* \"#utility.yul\":25329:25333   */\n      0x12\n        /* \"#utility.yul\":25326:25327   */\n      0x04\n        /* \"#utility.yul\":25319:25334   */\n      mstore\n        /* \"#utility.yul\":25353:25357   */\n      0x24\n        /* \"#utility.yul\":25350:25351   */\n      0x00\n        /* \"#utility.yul\":25343:25358   */\n      revert\n        /* \"#utility.yul\":25370:25550   */\n    tag_151:\n        /* \"#utility.yul\":25418:25495   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25415:25416   */\n      0x00\n        /* \"#utility.yul\":25408:25496   */\n      mstore\n        /* \"#utility.yul\":25515:25519   */\n      0x32\n        /* \"#utility.yul\":25512:25513   */\n      0x04\n        /* \"#utility.yul\":25505:25520   */\n      mstore\n        /* \"#utility.yul\":25539:25543   */\n      0x24\n        /* \"#utility.yul\":25536:25537   */\n      0x00\n        /* \"#utility.yul\":25529:25544   */\n      revert\n        /* \"#utility.yul\":25556:25736   */\n    tag_688:\n        /* \"#utility.yul\":25604:25681   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25601:25602   */\n      0x00\n        /* \"#utility.yul\":25594:25682   */\n      mstore\n        /* \"#utility.yul\":25701:25705   */\n      0x41\n        /* \"#utility.yul\":25698:25699   */\n      0x04\n        /* \"#utility.yul\":25691:25706   */\n      mstore\n        /* \"#utility.yul\":25725:25729   */\n      0x24\n        /* \"#utility.yul\":25722:25723   */\n      0x00\n        /* \"#utility.yul\":25715:25730   */\n      revert\n        /* \"#utility.yul\":25742:25859   */\n    tag_461:\n        /* \"#utility.yul\":25851:25852   */\n      0x00\n        /* \"#utility.yul\":25848:25849   */\n      dup1\n        /* \"#utility.yul\":25841:25853   */\n      revert\n        /* \"#utility.yul\":25865:25982   */\n    tag_443:\n        /* \"#utility.yul\":25974:25975   */\n      0x00\n        /* \"#utility.yul\":25971:25972   */\n      dup1\n        /* \"#utility.yul\":25964:25976   */\n      revert\n        /* \"#utility.yul\":25988:26105   */\n    tag_491:\n        /* \"#utility.yul\":26097:26098   */\n      0x00\n        /* \"#utility.yul\":26094:26095   */\n      dup1\n        /* \"#utility.yul\":26087:26099   */\n      revert\n        /* \"#utility.yul\":26111:26228   */\n    tag_481:\n        /* \"#utility.yul\":26220:26221   */\n      0x00\n        /* \"#utility.yul\":26217:26218   */\n      dup1\n        /* \"#utility.yul\":26210:26222   */\n      revert\n        /* \"#utility.yul\":26234:26336   */\n    tag_582:\n        /* \"#utility.yul\":26275:26281   */\n      0x00\n        /* \"#utility.yul\":26326:26328   */\n      0x1f\n        /* \"#utility.yul\":26322:26329   */\n      not\n        /* \"#utility.yul\":26317:26319   */\n      0x1f\n        /* \"#utility.yul\":26310:26315   */\n      dup4\n        /* \"#utility.yul\":26306:26320   */\n      add\n        /* \"#utility.yul\":26302:26330   */\n      and\n        /* \"#utility.yul\":26292:26330   */\n      swap1\n      pop\n        /* \"#utility.yul\":26234:26336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26342:26567   */\n    tag_587:\n        /* \"#utility.yul\":26482:26516   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":26478:26479   */\n      0x00\n        /* \"#utility.yul\":26470:26476   */\n      dup3\n        /* \"#utility.yul\":26466:26480   */\n      add\n        /* \"#utility.yul\":26459:26517   */\n      mstore\n        /* \"#utility.yul\":26551:26559   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26546:26548   */\n      0x20\n        /* \"#utility.yul\":26538:26544   */\n      dup3\n        /* \"#utility.yul\":26534:26549   */\n      add\n        /* \"#utility.yul\":26527:26560   */\n      mstore\n        /* \"#utility.yul\":26342:26567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26573:26750   */\n    tag_592:\n        /* \"#utility.yul\":26713:26742   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":26709:26710   */\n      0x00\n        /* \"#utility.yul\":26701:26707   */\n      dup3\n        /* \"#utility.yul\":26697:26711   */\n      add\n        /* \"#utility.yul\":26690:26743   */\n      mstore\n        /* \"#utility.yul\":26573:26750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26756:26935   */\n    tag_597:\n        /* \"#utility.yul\":26896:26927   */\n      0x596f7520617265206e6f74204f776e6572206f6620746f6b656e206964000000\n        /* \"#utility.yul\":26892:26893   */\n      0x00\n        /* \"#utility.yul\":26884:26890   */\n      dup3\n        /* \"#utility.yul\":26880:26894   */\n      add\n        /* \"#utility.yul\":26873:26928   */\n      mstore\n        /* \"#utility.yul\":26756:26935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26941:27105   */\n    tag_602:\n        /* \"#utility.yul\":27081:27097   */\n      0x416d6f756e74206973207a65726f000000000000000000000000000000000000\n        /* \"#utility.yul\":27077:27078   */\n      0x00\n        /* \"#utility.yul\":27069:27075   */\n      dup3\n        /* \"#utility.yul\":27065:27079   */\n      add\n        /* \"#utility.yul\":27058:27098   */\n      mstore\n        /* \"#utility.yul\":26941:27105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27111:27331   */\n    tag_607:\n        /* \"#utility.yul\":27251:27285   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":27247:27248   */\n      0x00\n        /* \"#utility.yul\":27239:27245   */\n      dup3\n        /* \"#utility.yul\":27235:27249   */\n      add\n        /* \"#utility.yul\":27228:27286   */\n      mstore\n        /* \"#utility.yul\":27320:27323   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27315:27317   */\n      0x20\n        /* \"#utility.yul\":27307:27313   */\n      dup3\n        /* \"#utility.yul\":27303:27318   */\n      add\n        /* \"#utility.yul\":27296:27324   */\n      mstore\n        /* \"#utility.yul\":27111:27331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27337:27519   */\n    tag_612:\n        /* \"#utility.yul\":27477:27511   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":27473:27474   */\n      0x00\n        /* \"#utility.yul\":27465:27471   */\n      dup3\n        /* \"#utility.yul\":27461:27475   */\n      add\n        /* \"#utility.yul\":27454:27512   */\n      mstore\n        /* \"#utility.yul\":27337:27519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27525:27695   */\n    tag_617:\n        /* \"#utility.yul\":27665:27687   */\n      0x546f6b656e206964206973206e6f7420676f6f64000000000000000000000000\n        /* \"#utility.yul\":27661:27662   */\n      0x00\n        /* \"#utility.yul\":27653:27659   */\n      dup3\n        /* \"#utility.yul\":27649:27663   */\n      add\n        /* \"#utility.yul\":27642:27688   */\n      mstore\n        /* \"#utility.yul\":27525:27695   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27701:27869   */\n    tag_622:\n        /* \"#utility.yul\":27841:27861   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":27837:27838   */\n      0x00\n        /* \"#utility.yul\":27829:27835   */\n      dup3\n        /* \"#utility.yul\":27825:27839   */\n      add\n        /* \"#utility.yul\":27818:27862   */\n      mstore\n        /* \"#utility.yul\":27701:27869   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27875:27997   */\n    tag_449:\n        /* \"#utility.yul\":27948:27972   */\n      tag_778\n        /* \"#utility.yul\":27966:27971   */\n      dup2\n        /* \"#utility.yul\":27948:27972   */\n      tag_538\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":27941:27946   */\n      dup2\n        /* \"#utility.yul\":27938:27973   */\n      eq\n        /* \"#utility.yul\":27928:27991   */\n      tag_779\n      jumpi\n        /* \"#utility.yul\":27987:27988   */\n      0x00\n        /* \"#utility.yul\":27984:27985   */\n      dup1\n        /* \"#utility.yul\":27977:27989   */\n      revert\n        /* \"#utility.yul\":27928:27991   */\n    tag_779:\n        /* \"#utility.yul\":27875:27997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28003:28119   */\n    tag_453:\n        /* \"#utility.yul\":28073:28094   */\n      tag_781\n        /* \"#utility.yul\":28088:28093   */\n      dup2\n        /* \"#utility.yul\":28073:28094   */\n      tag_721\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":28066:28071   */\n      dup2\n        /* \"#utility.yul\":28063:28095   */\n      eq\n        /* \"#utility.yul\":28053:28113   */\n      tag_782\n      jumpi\n        /* \"#utility.yul\":28109:28110   */\n      0x00\n        /* \"#utility.yul\":28106:28107   */\n      dup1\n        /* \"#utility.yul\":28099:28111   */\n      revert\n        /* \"#utility.yul\":28053:28113   */\n    tag_782:\n        /* \"#utility.yul\":28003:28119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28125:28279   */\n    tag_466:\n        /* \"#utility.yul\":28214:28254   */\n      tag_784\n        /* \"#utility.yul\":28248:28253   */\n      dup2\n        /* \"#utility.yul\":28214:28254   */\n      tag_724\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":28207:28212   */\n      dup2\n        /* \"#utility.yul\":28204:28255   */\n      eq\n        /* \"#utility.yul\":28194:28273   */\n      tag_785\n      jumpi\n        /* \"#utility.yul\":28269:28270   */\n      0x00\n        /* \"#utility.yul\":28266:28267   */\n      dup1\n        /* \"#utility.yul\":28259:28271   */\n      revert\n        /* \"#utility.yul\":28194:28273   */\n    tag_785:\n        /* \"#utility.yul\":28125:28279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28285:28449   */\n    tag_470:\n        /* \"#utility.yul\":28379:28424   */\n      tag_787\n        /* \"#utility.yul\":28418:28423   */\n      dup2\n        /* \"#utility.yul\":28379:28424   */\n      tag_727\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":28372:28377   */\n      dup2\n        /* \"#utility.yul\":28369:28425   */\n      eq\n        /* \"#utility.yul\":28359:28443   */\n      tag_788\n      jumpi\n        /* \"#utility.yul\":28439:28440   */\n      0x00\n        /* \"#utility.yul\":28436:28437   */\n      dup1\n        /* \"#utility.yul\":28429:28441   */\n      revert\n        /* \"#utility.yul\":28359:28443   */\n    tag_788:\n        /* \"#utility.yul\":28285:28449   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28455:28577   */\n    tag_474:\n        /* \"#utility.yul\":28528:28552   */\n      tag_790\n        /* \"#utility.yul\":28546:28551   */\n      dup2\n        /* \"#utility.yul\":28528:28552   */\n      tag_625\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":28521:28526   */\n      dup2\n        /* \"#utility.yul\":28518:28553   */\n      eq\n        /* \"#utility.yul\":28508:28571   */\n      tag_791\n      jumpi\n        /* \"#utility.yul\":28567:28568   */\n      0x00\n        /* \"#utility.yul\":28564:28565   */\n      dup1\n        /* \"#utility.yul\":28557:28569   */\n      revert\n        /* \"#utility.yul\":28508:28571   */\n    tag_791:\n        /* \"#utility.yul\":28455:28577   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3dea4542ced338333472fb0239f84d253cec108f8ace45e31652f01f1b2719764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 317,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 325,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_INFTMasterChef_$1071": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_INFTMasterChef_$1071": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3202:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "243:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "258:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "252:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "243:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "315:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "274:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "274:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "219:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "227:5:1",
														"type": ""
													}
												],
												"src": "156:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "419:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "429:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "444:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "429:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "510:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_INFTMasterChef_$1071",
																	"nodeType": "YulIdentifier",
																	"src": "460:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:56:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "397:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "405:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "413:5:1",
														"type": ""
													}
												],
												"src": "333:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "591:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "601:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "616:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "610:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "610:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "601:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "659:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "632:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "632:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "569:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "577:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "585:5:1",
														"type": ""
													}
												],
												"src": "528:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "859:869:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "906:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "908:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "908:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "908:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "880:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "889:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "876:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:33:1"
															},
															"nodeType": "YulIf",
															"src": "869:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "999:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1014:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1028:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1018:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1043:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1103:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1099:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1099:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1053:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1053:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1043:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1151:152:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1166:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1170:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1196:97:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1265:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1261:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1206:54:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:87:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1196:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1313:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1328:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1332:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1358:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1404:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1415:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1400:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1400:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1424:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1368:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1368:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1358:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1452:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1467:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1481:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1471:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1497:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1507:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1507:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1497:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1637:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1683:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1694:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1679:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1679:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1703:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1647:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1647:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1637:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "797:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "808:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "820:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "828:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "836:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "844:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "852:6:1",
														"type": ""
													}
												],
												"src": "677:1051:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1774:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1784:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1794:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1794:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1767:6:1",
														"type": ""
													}
												],
												"src": "1734:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1870:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1899:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1881:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1870:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1842:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1852:7:1",
														"type": ""
													}
												],
												"src": "1815:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1976:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1986:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2015:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1997:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1986:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1958:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1968:7:1",
														"type": ""
													}
												],
												"src": "1917:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2111:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2140:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2122:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2111:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_INFTMasterChef_$1071",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2083:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2093:7:1",
														"type": ""
													}
												],
												"src": "2033:119:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2203:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2213:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2228:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2213:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2185:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2195:7:1",
														"type": ""
													}
												],
												"src": "2158:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2335:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2345:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2356:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2345:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2317:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2327:7:1",
														"type": ""
													}
												],
												"src": "2290:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2482:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2373:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2585:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2602:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2595:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2496:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2719:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2728:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2731:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2721:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2721:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2685:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2710:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2692:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2692:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2682:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:43:1"
															},
															"nodeType": "YulIf",
															"src": "2672:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2655:5:1",
														"type": ""
													}
												],
												"src": "2619:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2884:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2827:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2866:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "2834:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2834:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2824:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2824:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:57:1"
															},
															"nodeType": "YulIf",
															"src": "2814:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2797:5:1",
														"type": ""
													}
												],
												"src": "2747:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2969:102:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3049:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3061:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3051:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3051:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3051:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2992:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_INFTMasterChef_$1071",
																					"nodeType": "YulIdentifier",
																					"src": "2999:40:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2999:47:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2989:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2989:58:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:66:1"
															},
															"nodeType": "YulIf",
															"src": "2979:86:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_INFTMasterChef_$1071",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2962:5:1",
														"type": ""
													}
												],
												"src": "2903:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3120:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3177:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3186:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3179:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3179:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3179:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3143:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3168:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3150:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3150:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3140:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3140:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:43:1"
															},
															"nodeType": "YulIf",
															"src": "3130:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3113:5:1",
														"type": ""
													}
												],
												"src": "3077:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_INFTMasterChef_$1071(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_INFTMasterChef_$1071(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_INFTMasterChef_$1071(value) {\n        if iszero(eq(value, cleanup_t_contract$_INFTMasterChef_$1071(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x34FF CODESIZE SUB DUP1 PUSH3 0x34FF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x13D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x3C0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21A DUP2 PUSH3 0x358 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x231 DUP2 PUSH3 0x372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x248 DUP2 PUSH3 0x38C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x3A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x284 JUMPI PUSH3 0x283 PUSH3 0x353 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x294 DUP9 DUP3 DUP10 ADD PUSH3 0x220 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x2A7 DUP9 DUP3 DUP10 ADD PUSH3 0x237 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x2BA DUP9 DUP3 DUP10 ADD PUSH3 0x209 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x2CD DUP9 DUP3 DUP10 ADD PUSH3 0x24E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x2E0 DUP9 DUP3 DUP10 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2FA DUP3 PUSH3 0x329 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30E DUP3 PUSH3 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x322 DUP3 PUSH3 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x363 DUP2 PUSH3 0x2ED JUMP JUMPDEST DUP2 EQ PUSH3 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x37D DUP2 PUSH3 0x301 JUMP JUMPDEST DUP2 EQ PUSH3 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x397 DUP2 PUSH3 0x315 JUMP JUMPDEST DUP2 EQ PUSH3 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3B1 DUP2 PUSH3 0x349 JUMP JUMPDEST DUP2 EQ PUSH3 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x312F DUP1 PUSH3 0x3D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCB3CBA55 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xE4D09896 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xF395DB2C EQ PUSH2 0x54E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xD5545992 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x43F JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x3B5 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x612EEE43 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x385 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x313 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x2080BAAB EQ PUSH2 0x2AB JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x1395D8C9 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1159 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x13B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x143D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH2 0x14C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x14F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH2 0x1602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP3 SWAP2 SWAP1 PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B2 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x184D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH2 0x1BC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x5FC DUP4 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x646 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x638 PUSH5 0xE8D4A51000 PUSH2 0x62A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x738 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75C SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF35FDDF DUP3 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP3 SWAP2 SWAP1 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x81E PUSH5 0xE8D4A51000 PUSH2 0x810 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 PUSH1 0x40 MLOAD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91B PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x980 JUMPI PUSH2 0x97F PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x993 JUMPI PUSH1 0xA SLOAD PUSH2 0x995 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x9AC DUP5 PUSH1 0x9 SLOAD PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA99 JUMPI PUSH2 0xA98 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB5 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xBCB JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 PUSH2 0xBE0 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC23 PUSH1 0x9 SLOAD PUSH2 0xC15 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC07 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC61 PUSH2 0xC52 DUP5 PUSH2 0xC44 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xCAA DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xC9C PUSH5 0xE8D4A51000 PUSH2 0xC8E DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBE PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDC PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD29 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH2 0xD8B PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0xE37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2E SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 EQ ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xE4A DUP6 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0xE92 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xE84 PUSH5 0xE8D4A51000 PUSH2 0xE76 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 CALLER DUP3 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST PUSH2 0xEDA PUSH5 0xE8D4A51000 PUSH2 0xECC DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xF3E JUMPI DUP7 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF12 JUMPI PUSH2 0xF11 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xF2B JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0xF36 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEEC JUMP JUMPDEST POP PUSH1 0x1 DUP3 EQ PUSH2 0xF82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF79 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF8B DUP8 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0xFD3 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xFC5 PUSH5 0xE8D4A51000 PUSH2 0xFB7 DUP10 PUSH1 0x3 ADD SLOAD DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 CALLER DUP5 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST PUSH2 0x1001 PUSH1 0x1 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x103B PUSH5 0xE8D4A51000 PUSH2 0x102D DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1059 JUMPI PUSH2 0x1058 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x116F JUMPI PUSH2 0x116E PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1190 JUMPI POP PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x121B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123F SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1259 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1269 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12AC PUSH1 0x9 SLOAD PUSH2 0x129E DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1290 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130B SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1339 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP PUSH2 0x139E PUSH2 0x138B DUP5 PUSH2 0x137D PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13BF PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13DD PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1445 PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1463 PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B0 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14F2 JUMPI PUSH2 0x14E1 DUP2 PUSH2 0x1159 JUMP JUMPDEST DUP1 PUSH2 0x14EB SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x14D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14FE PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x151C PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1569 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1581 JUMPI PUSH2 0x1580 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST PUSH2 0x15CD DUP3 PUSH2 0x15BF PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x159C JUMPI PUSH2 0x159B PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15E8 JUMPI PUSH2 0x15E7 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x160A PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1628 PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1675 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1688 PUSH1 0x0 PUSH2 0x205D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 PUSH1 0x5 SLOAD PUSH2 0x16FA DUP6 DUP6 PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x176F PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178D PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DA SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x18DD JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193A SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1959 JUMPI PUSH2 0x1958 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x19C6 DUP5 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 PUSH2 0x1A1D DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1A0F PUSH5 0xE8D4A51000 PUSH2 0x1A01 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1A33 JUMPI PUSH2 0x1A32 CALLER DUP3 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1AE0 PUSH1 0x1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1B1A PUSH5 0xE8D4A51000 PUSH2 0x1B0C DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B94 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1BD0 PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BEE PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3B SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAB SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CBD DUP2 PUSH2 0x205D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1CD9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1CE7 SWAP2 SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1CF6 SWAP2 SWAP1 PUSH2 0x2B92 JUMP JUMPDEST EQ PUSH2 0x1D36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2D SWAP1 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D83 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCD DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1DEC SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1E31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E28 SWAP1 PUSH2 0x2944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E98 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EE8 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4F SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA1 SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP PUSH2 0x2058 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2004 SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x201E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2032 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2056 SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2168 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215F SWAP2 SWAP1 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2177 SWAP2 SWAP1 PUSH2 0x2B92 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x21CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C3 SWAP2 SWAP1 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x21DB SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FB PUSH2 0x21F6 DUP5 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x2A91 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2217 JUMPI PUSH2 0x2216 PUSH2 0x2ED2 JUMP JUMPDEST JUMPDEST PUSH2 0x2222 DUP5 DUP3 DUP6 PUSH2 0x2D55 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2239 DUP2 PUSH2 0x3086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x224E DUP2 PUSH2 0x309D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2263 DUP2 PUSH2 0x309D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x227E JUMPI PUSH2 0x227D PUSH2 0x2ECD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x228E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22A6 DUP2 PUSH2 0x30B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22BB DUP2 PUSH2 0x30CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D0 DUP2 PUSH2 0x30E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22E5 DUP2 PUSH2 0x30E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2301 JUMPI PUSH2 0x2300 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x230F DUP5 DUP3 DUP6 ADD PUSH2 0x222A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2332 JUMPI PUSH2 0x2331 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2340 DUP8 DUP3 DUP9 ADD PUSH2 0x222A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2351 DUP8 DUP3 DUP9 ADD PUSH2 0x222A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2362 DUP8 DUP3 DUP9 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2383 JUMPI PUSH2 0x2382 PUSH2 0x2ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x238F DUP8 DUP3 DUP9 ADD PUSH2 0x2269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23BF DUP5 DUP3 DUP6 ADD PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23EC DUP5 DUP3 DUP6 ADD PUSH2 0x22AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240B JUMPI PUSH2 0x240A PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2419 DUP5 DUP3 DUP6 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2438 JUMPI PUSH2 0x2437 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2446 DUP5 DUP3 DUP6 ADD PUSH2 0x22D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2474 DUP6 DUP3 DUP7 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2485 DUP6 DUP3 DUP7 ADD PUSH2 0x222A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A7 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24B6 DUP7 DUP3 DUP8 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24C7 DUP7 DUP3 DUP8 ADD PUSH2 0x2297 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x24D8 DUP7 DUP3 DUP8 ADD PUSH2 0x223F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F9 JUMPI PUSH2 0x24F8 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2507 DUP6 DUP3 DUP7 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2518 DUP6 DUP3 DUP7 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x253B JUMPI PUSH2 0x253A PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2549 DUP7 DUP3 DUP8 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x255A DUP7 DUP3 DUP8 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x256B DUP7 DUP3 DUP8 ADD PUSH2 0x223F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2581 DUP4 DUP4 PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2596 DUP2 PUSH2 0x2C51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A7 DUP3 PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x25B1 DUP2 DUP6 PUSH2 0x2B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x25BC DUP4 PUSH2 0x2AE7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25ED JUMPI DUP2 MLOAD PUSH2 0x25D4 DUP9 DUP3 PUSH2 0x2575 JUMP JUMPDEST SWAP8 POP PUSH2 0x25DF DUP4 PUSH2 0x2B0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25C0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2603 DUP2 PUSH2 0x2C6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2612 DUP2 PUSH2 0x2CE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2621 DUP2 PUSH2 0x2CFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2630 DUP2 PUSH2 0x2D0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x263F DUP2 PUSH2 0x2D1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2650 DUP3 PUSH2 0x2B02 JUMP JUMPDEST PUSH2 0x265A DUP2 DUP6 PUSH2 0x2B2B JUMP JUMPDEST SWAP4 POP PUSH2 0x266A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x2673 DUP2 PUSH2 0x2EE1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268B PUSH1 0x26 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2696 DUP3 PUSH2 0x2EF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE PUSH1 0x1B DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D1 PUSH1 0x1D DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x26DC DUP3 PUSH2 0x2F6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F4 PUSH1 0xE DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x26FF DUP3 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2717 PUSH1 0x21 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2722 DUP3 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273A PUSH1 0x20 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2745 DUP3 PUSH2 0x300B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275D PUSH1 0x14 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2768 DUP3 PUSH2 0x3034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2780 PUSH1 0x12 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x278B DUP3 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x279F DUP2 PUSH2 0x2CDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27AE DUP2 PUSH2 0x2CDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x258D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27E4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x27F1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x27FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x281B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x2828 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2849 DUP2 DUP5 PUSH2 0x259C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2866 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2881 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2609 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x289C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0x28A9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x28B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x28C3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2627 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2636 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291C DUP2 DUP5 PUSH2 0x2645 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293D DUP2 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x295D DUP2 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x297D DUP2 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x299D DUP2 PUSH2 0x26E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BD DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29DD DUP2 PUSH2 0x272D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29FD DUP2 PUSH2 0x2750 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1D DUP2 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A54 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x2A61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x258D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x2A8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9B PUSH2 0x2AAC JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA7 DUP3 DUP3 PUSH2 0x2D97 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x2E9E JUMP JUMPDEST JUMPDEST PUSH2 0x2ADA DUP3 PUSH2 0x2EE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B47 DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2B52 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9D DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA8 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BB8 JUMPI PUSH2 0x2BB7 PUSH2 0x2E40 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD9 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C12 JUMPI PUSH2 0x2C11 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C28 DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2C33 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C46 JUMPI PUSH2 0x2C45 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5C DUP3 PUSH2 0x2CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA6 DUP3 PUSH2 0x2C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB8 DUP3 PUSH2 0x2C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF4 DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D06 DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D18 DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2A DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3C DUP3 PUSH2 0x2D43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D4E DUP3 PUSH2 0x2CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D82 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D67 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D91 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2DA0 DUP3 PUSH2 0x2EE1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2DBF JUMPI PUSH2 0x2DBE PUSH2 0x2E9E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD3 DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2E06 JUMPI PUSH2 0x2E05 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206964206973206E6F7420676F6F64000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x308F DUP2 PUSH2 0x2C51 JUMP JUMPDEST DUP2 EQ PUSH2 0x309A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30A6 DUP2 PUSH2 0x2C63 JUMP JUMPDEST DUP2 EQ PUSH2 0x30B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30BD DUP2 PUSH2 0x2C9B JUMP JUMPDEST DUP2 EQ PUSH2 0x30C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30D4 DUP2 PUSH2 0x2CAD JUMP JUMPDEST DUP2 EQ PUSH2 0x30DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30EB DUP2 PUSH2 0x2CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x30F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xDE LOG4 SLOAD 0x2C 0xED CALLER DUP4 CALLER SELFBALANCE 0x2F 0xB0 0x23 SWAP16 DUP5 0xD2 MSTORE8 0xCE 0xC1 ADDMOD 0xF8 0xAC 0xE4 0x5E BALANCE PUSH6 0x2F01F1B27197 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "28014:10565:0:-:0;;;29679:1;29645:35;;30120:1;30087:34;;30495:340;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20054:32;20073:12;:10;;;:12;;:::i;:::-;20054:18;;;:32;;:::i;:::-;30681:4;30675:3;;:10;;;;;;;;;;;;;;;;;;30712:14;30696:13;;:30;;;;;;;;;;;;;;;;;;30747:8;30737:7;;:18;;;;;;;;;;;;;;;;;;30780:12;30766:11;:26;;;;30816:11;30803:10;:24;;;;30495:340;;;;;28014:10565;;19549:98;19602:7;19629:10;19622:17;;19549:98;:::o;21445:191::-;21519:16;21538:6;;;;;;;;;;;21519:25;;21564:8;21555:6;;:17;;;;;;;;;;;;;;;;;;21619:8;21588:40;;21609:8;21588:40;;;;;;;;;;;;21508:128;21445:191;:::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:171::-;227:5;258:6;252:13;243:22;;274:47;315:5;274:47;:::i;:::-;156:171;;;;:::o;333:189::-;413:5;444:6;438:13;429:22;;460:56;510:5;460:56;:::i;:::-;333:189;;;;:::o;528:143::-;585:5;616:6;610:13;601:22;;632:33;659:5;632:33;:::i;:::-;528:143;;;;:::o;677:1051::-;820:6;828;836;844;852;901:3;889:9;880:7;876:23;872:33;869:120;;;908:79;;:::i;:::-;869:120;1028:1;1053:78;1123:7;1114:6;1103:9;1099:22;1053:78;:::i;:::-;1043:88;;999:142;1180:2;1206:87;1285:7;1276:6;1265:9;1261:22;1206:87;:::i;:::-;1196:97;;1151:152;1342:2;1368:64;1424:7;1415:6;1404:9;1400:22;1368:64;:::i;:::-;1358:74;;1313:129;1481:2;1507:64;1563:7;1554:6;1543:9;1539:22;1507:64;:::i;:::-;1497:74;;1452:129;1620:3;1647:64;1703:7;1694:6;1683:9;1679:22;1647:64;:::i;:::-;1637:74;;1591:130;677:1051;;;;;;;;:::o;1815:96::-;1852:7;1881:24;1899:5;1881:24;:::i;:::-;1870:35;;1815:96;;;:::o;1917:110::-;1968:7;1997:24;2015:5;1997:24;:::i;:::-;1986:35;;1917:110;;;:::o;2033:119::-;2093:7;2122:24;2140:5;2122:24;:::i;:::-;2111:35;;2033:119;;;:::o;2158:126::-;2195:7;2235:42;2228:5;2224:54;2213:65;;2158:126;;;:::o;2290:77::-;2327:7;2356:5;2345:16;;2290:77;;;:::o;2496:117::-;2605:1;2602;2595:12;2619:122;2692:24;2710:5;2692:24;:::i;:::-;2685:5;2682:35;2672:63;;2731:1;2728;2721:12;2672:63;2619:122;:::o;2747:150::-;2834:38;2866:5;2834:38;:::i;:::-;2827:5;2824:49;2814:77;;2887:1;2884;2877:12;2814:77;2747:150;:::o;2903:168::-;2999:47;3040:5;2999:47;:::i;:::-;2992:5;2989:58;2979:86;;3061:1;3058;3051:12;2979:86;2903:168;:::o;3077:122::-;3150:24;3168:5;3150:24;:::i;:::-;3143:5;3140:35;3130:63;;3189:1;3186;3179:12;3130:63;3077:122;:::o;28014:10565:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_1113": {
									"entryPoint": 5808,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDTPerBlock_1110": {
									"entryPoint": 7360,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDT_1106": {
									"entryPoint": 5953,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFTMasterChef_1103": {
									"entryPoint": 7074,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 7637,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 8285,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1281": {
									"entryPoint": 2293,
									"id": 1281,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 7645,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@compundDDT_2030": {
									"entryPoint": 1401,
									"id": 2030,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1726": {
									"entryPoint": 6399,
									"id": 1726,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@devaddr_1108": {
									"entryPoint": 6183,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 7489,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 8481,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1350": {
									"entryPoint": 5855,
									"id": 1350,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserTokenIds_1373": {
									"entryPoint": 6221,
									"id": 1373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@massUpdatePools_1500": {
									"entryPoint": 5315,
									"id": 1500,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrator_1116": {
									"entryPoint": 5770,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 7366,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onERC721Received_1212": {
									"entryPoint": 2171,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_845": {
									"entryPoint": 5814,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingDDT_1475": {
									"entryPoint": 2690,
									"id": 1475,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_1120": {
									"entryPoint": 2191,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1233": {
									"entryPoint": 1388,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_873": {
									"entryPoint": 5634,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeDDTTransfer_2068": {
									"entryPoint": 7739,
									"id": 2068,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDevAddress_2080": {
									"entryPoint": 5991,
									"id": 2080,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMigrator_1332": {
									"entryPoint": 3254,
									"id": 1332,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1319": {
									"entryPoint": 5366,
									"id": 1319,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_1132": {
									"entryPoint": 4435,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 7563,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 8580,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_1130": {
									"entryPoint": 2287,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 7112,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDDTPerBlock_2092": {
									"entryPoint": 5181,
									"id": 2092,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1224": {
									"entryPoint": 5047,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1601": {
									"entryPoint": 4441,
									"id": 1601,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1127": {
									"entryPoint": 5904,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1941": {
									"entryPoint": 3446,
									"id": 1941,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$1048": {
									"entryPoint": 8855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 8876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool": {
									"entryPoint": 9359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 9589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 9722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 9737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack": {
									"entryPoint": 9752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 9767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 10134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10191,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10246,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 10321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 10348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10375,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 10444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed": {
									"entryPoint": 10471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10815,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10856,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 10924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 11010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 11021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 11034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 11345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 11363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 11375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$1048": {
									"entryPoint": 11419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 11437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 11455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 11487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 11497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1048_to_t_address": {
									"entryPoint": 11515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 11533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTMasterChef_$1071_to_t_address": {
									"entryPoint": 11551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 11569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 11587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 11605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 11620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 11671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 11720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11981,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 11991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 11996,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 12001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 12018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 12097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd": {
									"entryPoint": 12138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c": {
									"entryPoint": 12179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 12220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 12299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd": {
									"entryPoint": 12340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 12381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 12422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$1048": {
									"entryPoint": 12468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 12491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 12514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:28580:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:1"
															},
															"nodeType": "YulIf",
															"src": "249:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:1",
														"type": ""
													}
												],
												"src": "7:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:1",
														"type": ""
													}
												],
												"src": "423:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"src": "568:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "777:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "792:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "786:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "777:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "808:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "808:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "745:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "753:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "761:5:1",
														"type": ""
													}
												],
												"src": "707:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "975:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "952:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "960:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "948:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "948:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "967:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "944:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "944:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "937:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:35:1"
															},
															"nodeType": "YulIf",
															"src": "934:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1065:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1092:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1079:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1069:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1108:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1176:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1164:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1183:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1191:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1117:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1108:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "902:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "910:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "918:5:1",
														"type": ""
													}
												],
												"src": "863:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1275:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1285:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1294:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1366:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$1048",
																	"nodeType": "YulIdentifier",
																	"src": "1323:42:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:49:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1253:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1261:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1269:5:1",
														"type": ""
													}
												],
												"src": "1207:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1457:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1467:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1489:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1476:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1476:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1467:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1553:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "1505:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1505:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1505:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1435:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1443:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1451:5:1",
														"type": ""
													}
												],
												"src": "1384:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1623:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1633:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1655:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1642:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1642:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1633:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1698:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1671:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1671:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1609:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1617:5:1",
														"type": ""
													}
												],
												"src": "1571:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1789:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1804:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1789:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1847:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1820:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1757:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1765:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1773:5:1",
														"type": ""
													}
												],
												"src": "1716:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1931:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1977:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1979:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1979:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1979:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1952:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1948:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:32:1"
															},
															"nodeType": "YulIf",
															"src": "1941:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2070:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2085:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2099:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2089:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2114:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2149:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2160:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2145:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2169:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2124:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2124:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2114:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1901:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1912:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1924:6:1",
														"type": ""
													}
												],
												"src": "1865:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2375:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2347:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:33:1"
															},
															"nodeType": "YulIf",
															"src": "2336:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2466:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2481:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2485:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2510:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2545:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2556:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2541:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2520:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2510:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2593:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2608:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2612:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2638:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2673:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2684:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2669:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2693:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2648:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2721:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2736:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2740:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2801:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2812:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2821:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2776:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2849:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2864:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2895:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2906:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2891:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2891:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2878:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2878:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2868:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2957:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2959:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2959:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2959:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2929:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2937:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2926:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2923:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3054:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3098:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3109:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3094:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3094:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3118:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3064:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3064:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3054:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2272:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2283:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2295:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2303:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2311:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2319:6:1",
														"type": ""
													}
												],
												"src": "2200:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3223:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3269:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3271:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3271:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3271:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3244:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3253:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3265:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3236:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:32:1"
															},
															"nodeType": "YulIf",
															"src": "3233:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3362:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3377:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3381:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3406:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3449:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3460:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3445:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3445:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3469:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3416:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3416:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3406:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3193:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3204:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3216:6:1",
														"type": ""
													}
												],
												"src": "3149:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3587:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3633:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3635:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3635:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3635:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3608:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3617:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3604:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3604:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:32:1"
															},
															"nodeType": "YulIf",
															"src": "3597:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3726:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3741:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3755:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3745:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3770:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3826:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3837:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3822:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3822:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3846:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "3780:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3780:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3770:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3557:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3568:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3580:6:1",
														"type": ""
													}
												],
												"src": "3500:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3943:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3989:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3991:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3991:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3991:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3964:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3973:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3960:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3985:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:32:1"
															},
															"nodeType": "YulIf",
															"src": "3953:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4082:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4097:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4101:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4126:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4161:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4172:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4157:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4157:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4181:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4136:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4126:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3913:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3924:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3936:6:1",
														"type": ""
													}
												],
												"src": "3877:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4289:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4335:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4337:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4337:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4337:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4310:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4319:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4306:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4302:32:1"
															},
															"nodeType": "YulIf",
															"src": "4299:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4428:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4443:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4457:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4447:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4472:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4518:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4529:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4514:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4538:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4482:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4482:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4472:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4259:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4270:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4282:6:1",
														"type": ""
													}
												],
												"src": "4212:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4652:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4700:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4673:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4682:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4669:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:32:1"
															},
															"nodeType": "YulIf",
															"src": "4662:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4791:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4806:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4810:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4835:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4870:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4881:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4866:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4866:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4890:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4845:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4835:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4918:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4933:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4947:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4937:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4963:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4998:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5009:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4994:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4994:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4973:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4973:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4963:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4625:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4637:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4645:6:1",
														"type": ""
													}
												],
												"src": "4569:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5162:532:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5208:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5210:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5210:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5210:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5183:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5192:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5175:32:1"
															},
															"nodeType": "YulIf",
															"src": "5172:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5301:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5316:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5320:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5345:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5380:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5391:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5376:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5400:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5355:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5345:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5428:134:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5443:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5457:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5447:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5473:79:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5524:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5535:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5520:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5520:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5544:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$1048",
																			"nodeType": "YulIdentifier",
																			"src": "5483:36:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5483:69:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5473:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5572:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5587:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5601:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5591:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5617:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5649:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5660:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5645:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5645:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5669:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5627:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5627:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5617:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5116:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5127:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5139:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5147:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5155:6:1",
														"type": ""
													}
												],
												"src": "5049:645:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5783:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5829:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5831:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5831:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5831:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5804:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5813:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5825:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5796:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5796:32:1"
															},
															"nodeType": "YulIf",
															"src": "5793:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5922:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5937:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5951:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5941:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5966:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6001:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6012:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5997:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5997:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6021:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5976:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5976:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5966:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6049:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6064:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6078:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6068:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6094:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6129:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6140:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6125:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6125:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6149:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6104:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6094:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5745:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5756:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5768:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5776:6:1",
														"type": ""
													}
												],
												"src": "5700:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6277:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6323:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6325:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6325:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6325:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6298:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6307:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6294:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6319:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:32:1"
															},
															"nodeType": "YulIf",
															"src": "6287:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6416:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6431:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6445:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6435:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6460:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6495:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6506:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6491:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6491:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6515:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6470:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6470:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6460:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6543:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6558:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6572:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6562:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6588:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6623:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6634:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6619:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6619:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6643:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6598:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6598:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6588:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6671:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6686:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6700:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6690:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6716:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6748:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6744:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6744:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6768:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6726:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6726:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6716:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6231:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6242:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6254:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6262:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6270:6:1",
														"type": ""
													}
												],
												"src": "6180:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6879:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6923:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6931:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6889:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6889:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6944:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6962:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "6944:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6852:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6860:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "6868:10:1",
														"type": ""
													}
												],
												"src": "6799:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7049:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7066:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7089:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7071:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7071:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7059:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7059:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7037:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7044:3:1",
														"type": ""
													}
												],
												"src": "6984:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7262:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7272:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7334:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7286:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7276:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7349:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7430:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7435:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7356:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7451:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7516:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7466:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7466:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7455:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7531:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "7545:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7535:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7621:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7635:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7662:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7656:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7656:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7639:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7682:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7733:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7748:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "7689:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7689:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7682:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7765:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7828:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7775:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7775:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7765:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7583:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7586:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7580:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7580:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7594:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7596:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7605:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7608:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7601:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7601:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7596:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7565:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7567:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7576:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "7571:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7561:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7854:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7861:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7854:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7241:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7257:3:1",
														"type": ""
													}
												],
												"src": "7138:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7939:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7956:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7978:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7961:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7961:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7949:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7927:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7934:3:1",
														"type": ""
													}
												],
												"src": "7876:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8076:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8093:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8143:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8098:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8098:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8086:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8064:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8071:3:1",
														"type": ""
													}
												],
												"src": "7997:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8243:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8260:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8312:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1048_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8265:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8265:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8253:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8253:66:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8238:3:1",
														"type": ""
													}
												],
												"src": "8162:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8417:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8434:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8491:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8439:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8439:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8427:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8427:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8405:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8412:3:1",
														"type": ""
													}
												],
												"src": "8331:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:89:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8615:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8674:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTMasterChef_$1071_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8620:53:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8620:60:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8586:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8593:3:1",
														"type": ""
													}
												],
												"src": "8510:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8785:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8795:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8842:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8809:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8809:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8857:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8923:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8928:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8864:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8857:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8970:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8977:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8966:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8984:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8989:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8944:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8944:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9005:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9016:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9043:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9021:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9021:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9012:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9012:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9005:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8766:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8773:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8781:3:1",
														"type": ""
													}
												],
												"src": "8693:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9209:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9219:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9285:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9290:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9226:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9226:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9219:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9391:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "9302:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9302:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9302:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9404:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9415:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9420:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9411:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9197:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9205:3:1",
														"type": ""
													}
												],
												"src": "9063:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9591:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9657:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9662:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9598:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9591:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9763:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "9674:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9674:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9674:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9776:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9787:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9792:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9783:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9776:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9569:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9577:3:1",
														"type": ""
													}
												],
												"src": "9435:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9953:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9963:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10029:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10034:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9970:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9963:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10135:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																	"nodeType": "YulIdentifier",
																	"src": "10046:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10046:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10046:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10148:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10159:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10164:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10155:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10155:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10148:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9941:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9949:3:1",
														"type": ""
													}
												],
												"src": "9807:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10325:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10335:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10401:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10406:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10342:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10342:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10507:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																	"nodeType": "YulIdentifier",
																	"src": "10418:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10418:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10520:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10531:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10527:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10520:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10313:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10321:3:1",
														"type": ""
													}
												],
												"src": "10179:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10697:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10707:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10773:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10778:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10714:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10714:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10707:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10879:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "10790:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10790:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10892:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10903:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10908:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10892:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10685:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10693:3:1",
														"type": ""
													}
												],
												"src": "10551:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11069:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11079:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11145:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11086:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11086:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11079:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11251:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "11162:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11162:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11162:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11264:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11275:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11264:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11057:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11065:3:1",
														"type": ""
													}
												],
												"src": "10923:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11441:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11451:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11517:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11522:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11458:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11458:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11451:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11623:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd",
																	"nodeType": "YulIdentifier",
																	"src": "11534:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11534:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11534:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11636:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11647:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11652:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11643:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11429:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11437:3:1",
														"type": ""
													}
												],
												"src": "11295:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11813:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11823:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11889:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11894:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11830:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11830:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11823:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11995:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "11906:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11906:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11906:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12008:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12019:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12024:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12015:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12008:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11801:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11809:3:1",
														"type": ""
													}
												],
												"src": "11667:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12094:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12111:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12134:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12116:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12116:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12104:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12104:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12082:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12089:3:1",
														"type": ""
													}
												],
												"src": "12039:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12218:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12235:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12258:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12240:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12240:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12228:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12228:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12206:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12213:3:1",
														"type": ""
													}
												],
												"src": "12153:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12375:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12397:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12408:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12385:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12465:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12478:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12489:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12474:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12421:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12421:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12421:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12347:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12359:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12370:4:1",
														"type": ""
													}
												],
												"src": "12277:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12659:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12692:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12749:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12762:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12773:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12758:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12705:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12705:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12830:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12843:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12854:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12839:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12786:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12786:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12786:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12912:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12925:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12936:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12921:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12921:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12868:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12868:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12868:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12615:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12627:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12635:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12654:4:1",
														"type": ""
													}
												],
												"src": "12505:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13079:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13089:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13101:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13112:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13089:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13169:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13182:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13193:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13178:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13125:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13125:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13125:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13250:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13263:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13274:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13259:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13206:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13206:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13206:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13043:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13055:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13063:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13074:4:1",
														"type": ""
													}
												],
												"src": "12953:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13439:225:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13449:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13461:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13472:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13457:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13457:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13449:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13507:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13492:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13515:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13521:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13511:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13485:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13485:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13541:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13643:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13652:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13549:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13549:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13541:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13411:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13423:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13434:4:1",
														"type": ""
													}
												],
												"src": "13291:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13766:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13776:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13788:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13799:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13784:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13784:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13776:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13854:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13867:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13878:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13863:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13812:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13812:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13812:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13738:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13750:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13761:4:1",
														"type": ""
													}
												],
												"src": "13670:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14006:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14016:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14028:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14039:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14016:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14110:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14134:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14119:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14052:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14052:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14052:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13978:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13990:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14001:4:1",
														"type": ""
													}
												],
												"src": "13894:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14348:387:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14358:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14370:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14366:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14358:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14455:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14479:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14464:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14395:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14395:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14395:87:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14536:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14549:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14560:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14545:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14545:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14492:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14492:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14492:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14618:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14631:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14642:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14627:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14574:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14574:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14574:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14700:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14713:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14724:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14709:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14709:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14656:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14656:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14656:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14296:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14308:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14316:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14324:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14332:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14343:4:1",
														"type": ""
													}
												],
												"src": "14150:585:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14860:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14870:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14882:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14878:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14878:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14870:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14971:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14984:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14995:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14980:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14980:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14906:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14906:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14906:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14832:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14844:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14855:4:1",
														"type": ""
													}
												],
												"src": "14741:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15132:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15142:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15154:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15165:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15150:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15150:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15142:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15245:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15269:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15254:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15178:66:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15178:94:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15178:94:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15116:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15127:4:1",
														"type": ""
													}
												],
												"src": "15011:268:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15403:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15413:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15421:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15413:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15460:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15471:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15456:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15479:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15485:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15475:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15449:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15449:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15449:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15505:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15577:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15586:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15513:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15513:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15505:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15387:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15398:4:1",
														"type": ""
													}
												],
												"src": "15285:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15775:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15785:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15793:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15785:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15832:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15843:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15828:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15828:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15851:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15857:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15847:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15821:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15821:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15877:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16011:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15885:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15885:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15877:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15755:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15770:4:1",
														"type": ""
													}
												],
												"src": "15604:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16200:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16210:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16233:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16218:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16210:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16257:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16268:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16253:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16253:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16276:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16282:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16272:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16246:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16246:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16302:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16436:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16310:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16310:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16302:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16180:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16195:4:1",
														"type": ""
													}
												],
												"src": "16029:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16625:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16635:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16643:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16643:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16635:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16682:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16693:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16678:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16678:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16701:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16707:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16697:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16671:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16671:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16727:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16861:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16735:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16735:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16727:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16605:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16620:4:1",
														"type": ""
													}
												],
												"src": "16454:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17050:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17060:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17072:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17083:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17068:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17068:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17060:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17107:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17118:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17103:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17126:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17132:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17122:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17096:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17096:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17152:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17286:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17160:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17160:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17152:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17030:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17045:4:1",
														"type": ""
													}
												],
												"src": "16879:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17475:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17485:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17532:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17543:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17528:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17551:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17557:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17547:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17521:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17521:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17577:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17711:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17585:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17585:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17577:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17455:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17470:4:1",
														"type": ""
													}
												],
												"src": "17304:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17900:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17910:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17922:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17933:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17918:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17918:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17910:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17968:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17953:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17976:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17982:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17972:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17946:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17946:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18002:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18136:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18010:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18010:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18002:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17880:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17895:4:1",
														"type": ""
													}
												],
												"src": "17729:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18325:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18335:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18347:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18358:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18343:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18335:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18382:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18393:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18378:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18378:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18401:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18407:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18397:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18371:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18371:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18427:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18561:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18435:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18435:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18427:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18305:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18320:4:1",
														"type": ""
													}
												],
												"src": "18154:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18750:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18760:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18772:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18783:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18768:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18760:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18807:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18818:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18803:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18803:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18826:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18832:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18822:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18796:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18796:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18852:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18986:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18860:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18860:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18852:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18730:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18745:4:1",
														"type": ""
													}
												],
												"src": "18579:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19102:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19112:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19124:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19135:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19120:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19120:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19112:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19192:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19201:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19148:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19148:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19148:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19074:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19086:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19097:4:1",
														"type": ""
													}
												],
												"src": "19004:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19358:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19368:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19380:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19391:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19376:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19376:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19368:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19448:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19461:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19472:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19457:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19404:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19404:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19404:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19529:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19553:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19538:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19485:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19485:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19485:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19322:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19334:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19342:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19353:4:1",
														"type": ""
													}
												],
												"src": "19232:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19696:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19706:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19718:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19729:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19714:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19714:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19706:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19786:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19799:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19810:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19795:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19795:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19742:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19742:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19742:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19867:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19880:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19891:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19876:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19823:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19823:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19823:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19660:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19672:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19680:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19691:4:1",
														"type": ""
													}
												],
												"src": "19570:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19949:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19959:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "19969:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19969:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "19959:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "20018:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "20026:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "19998:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19998:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19998:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "19933:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19942:6:1",
														"type": ""
													}
												],
												"src": "19908:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20083:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20093:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20109:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20103:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20103:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "20093:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20076:6:1",
														"type": ""
													}
												],
												"src": "20043:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20190:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20295:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "20297:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20297:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20297:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20267:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20275:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20264:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20264:30:1"
															},
															"nodeType": "YulIf",
															"src": "20261:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20327:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20357:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "20335:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20335:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "20327:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20401:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "20413:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20419:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20409:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "20401:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20174:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "20185:4:1",
														"type": ""
													}
												],
												"src": "20124:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20509:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20519:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "20527:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "20519:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20540:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "20552:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20557:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20548:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "20540:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "20496:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20504:4:1",
														"type": ""
													}
												],
												"src": "20437:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20649:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20660:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20676:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20670:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20670:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20660:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20632:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20642:6:1",
														"type": ""
													}
												],
												"src": "20575:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20754:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20765:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20781:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20775:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20775:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20765:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20737:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20747:6:1",
														"type": ""
													}
												],
												"src": "20695:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20875:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20885:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "20897:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20902:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20893:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20893:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "20885:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "20862:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "20870:4:1",
														"type": ""
													}
												],
												"src": "20800:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21030:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21047:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21052:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21040:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21040:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21068:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21087:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21092:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21083:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21083:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21068:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21002:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21007:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21018:11:1",
														"type": ""
													}
												],
												"src": "20919:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21205:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21222:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21227:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21215:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21215:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21243:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21262:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21267:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21258:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21243:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21177:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21182:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21193:11:1",
														"type": ""
													}
												],
												"src": "21109:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21328:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21338:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21361:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21343:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21343:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21338:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21372:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21395:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21377:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21377:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21372:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21535:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21537:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21537:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21537:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21456:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21463:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21531:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21459:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21453:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21453:81:1"
															},
															"nodeType": "YulIf",
															"src": "21450:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21567:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21578:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21581:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21574:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21574:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "21567:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21315:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21318:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "21324:3:1",
														"type": ""
													}
												],
												"src": "21284:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21637:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21647:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21670:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21652:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21652:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21647:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21681:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21704:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21686:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21686:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21681:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21728:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "21730:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21730:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21730:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21725:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21718:9:1"
															},
															"nodeType": "YulIf",
															"src": "21715:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21760:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21769:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21772:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "21765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21765:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "21760:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21626:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21629:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "21635:1:1",
														"type": ""
													}
												],
												"src": "21595:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21834:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21844:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21867:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21849:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21849:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21844:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21878:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21901:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21883:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21883:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21878:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22076:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22078:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22078:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22078:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "21988:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "21981:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21981:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "21974:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21974:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21996:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "22003:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "22071:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "21999:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21999:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "21993:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21993:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21970:105:1"
															},
															"nodeType": "YulIf",
															"src": "21967:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22108:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22123:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22126:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "22119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22119:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "22108:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21817:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21820:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "21826:7:1",
														"type": ""
													}
												],
												"src": "21786:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22185:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22195:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22218:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22200:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22200:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22195:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22229:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22252:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22234:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22234:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22229:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22276:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22278:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22278:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22278:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22270:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22273:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22267:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22267:8:1"
															},
															"nodeType": "YulIf",
															"src": "22264:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22308:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22320:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22323:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22316:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22308:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22171:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22174:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22180:4:1",
														"type": ""
													}
												],
												"src": "22140:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22382:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22392:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22421:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "22403:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22403:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22392:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22364:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22374:7:1",
														"type": ""
													}
												],
												"src": "22337:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22481:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22491:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22516:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "22509:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22509:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22502:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22491:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22473:7:1",
														"type": ""
													}
												],
												"src": "22439:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22579:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22589:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22604:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22611:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22600:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22589:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22561:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22571:7:1",
														"type": ""
													}
												],
												"src": "22535:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22751:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22761:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22790:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "22772:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22772:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22761:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22733:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22743:7:1",
														"type": ""
													}
												],
												"src": "22690:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22874:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22884:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22913:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "22895:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22895:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22884:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22856:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22866:7:1",
														"type": ""
													}
												],
												"src": "22808:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22976:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22986:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23001:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23008:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22997:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22986:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22958:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22968:7:1",
														"type": ""
													}
												],
												"src": "22931:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23108:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23118:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23129:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23118:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23100:7:1",
														"type": ""
													}
												],
												"src": "23063:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23220:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23230:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23274:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "23243:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23243:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23230:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23210:9:1",
														"type": ""
													}
												],
												"src": "23146:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23368:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23378:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23422:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "23391:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23391:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23378:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1048_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23348:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23358:9:1",
														"type": ""
													}
												],
												"src": "23292:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23521:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23531:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23575:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "23544:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23544:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23531:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23501:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23511:9:1",
														"type": ""
													}
												],
												"src": "23440:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23676:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23686:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23730:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "23699:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23699:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23686:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTMasterChef_$1071_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23656:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23666:9:1",
														"type": ""
													}
												],
												"src": "23593:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23808:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23818:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23862:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "23831:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23831:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23818:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23788:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23798:9:1",
														"type": ""
													}
												],
												"src": "23748:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23940:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23950:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23981:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "23963:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23963:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23950:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23920:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23930:9:1",
														"type": ""
													}
												],
												"src": "23880:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24050:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "24073:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "24078:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24083:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "24060:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24060:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24060:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "24131:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24136:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24127:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24145:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24120:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24120:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "24032:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "24037:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24042:6:1",
														"type": ""
													}
												],
												"src": "23999:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24208:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24218:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24227:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "24222:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24287:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24312:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "24317:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24308:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24308:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "24331:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "24336:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "24327:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "24327:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "24321:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24321:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24301:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24301:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24301:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24248:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24251:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24245:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24245:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24259:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24261:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "24270:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24273:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24266:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24266:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "24261:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24241:3:1",
																"statements": []
															},
															"src": "24237:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24384:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24434:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "24439:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24430:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24430:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24448:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24423:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24423:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24365:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24368:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24362:13:1"
															},
															"nodeType": "YulIf",
															"src": "24359:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "24190:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "24195:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24200:6:1",
														"type": ""
													}
												],
												"src": "24159:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24515:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24525:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "24547:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "24577:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "24555:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24555:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24543:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24543:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "24529:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24694:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24696:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24696:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24696:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "24637:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24649:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "24634:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24634:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "24673:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24685:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "24670:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24670:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "24631:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24631:62:1"
															},
															"nodeType": "YulIf",
															"src": "24628:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24732:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "24736:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24725:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24725:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24501:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "24509:4:1",
														"type": ""
													}
												],
												"src": "24472:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24802:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24812:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24839:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24821:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24821:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24812:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24935:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24937:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24937:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24937:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24860:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24867:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "24857:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24857:77:1"
															},
															"nodeType": "YulIf",
															"src": "24854:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24966:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24977:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24984:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24973:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24966:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24788:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24798:3:1",
														"type": ""
													}
												],
												"src": "24759:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25026:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25043:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25046:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25036:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25036:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25140:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25143:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25133:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25133:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25164:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25167:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25157:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25157:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25157:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "24998:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25212:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25229:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25232:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25222:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25222:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25326:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25329:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25319:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25319:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25350:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25353:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25343:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25343:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25343:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "25184:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25398:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25415:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25418:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25408:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25408:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25512:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25515:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25505:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25505:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25539:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25529:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25529:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "25370:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25584:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25601:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25604:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25594:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25594:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25698:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25701:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25691:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25691:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25722:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25725:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25715:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25715:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25715:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "25556:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25831:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25848:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25851:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25841:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25841:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "25742:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25954:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25971:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25974:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25964:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25964:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "25865:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26077:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26094:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26097:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26087:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26087:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "25988:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26200:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26217:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26220:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26210:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26210:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "26111:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26282:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26292:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26310:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26317:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26306:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26326:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "26322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26322:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26302:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "26292:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26265:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "26275:6:1",
														"type": ""
													}
												],
												"src": "26234:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26448:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26470:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26478:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26466:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26482:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26459:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26459:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26538:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26546:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26534:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26551:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26527:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26527:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26440:6:1",
														"type": ""
													}
												],
												"src": "26342:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26679:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26701:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26709:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26697:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26713:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26690:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26690:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26671:6:1",
														"type": ""
													}
												],
												"src": "26573:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26862:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26884:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26892:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26880:14:1"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74204f776e6572206f6620746f6b656e206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26896:31:1",
																		"type": "",
																		"value": "You are not Owner of token id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26873:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26873:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26854:6:1",
														"type": ""
													}
												],
												"src": "26756:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27047:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27069:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27077:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27065:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206973207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27081:16:1",
																		"type": "",
																		"value": "Amount is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27058:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27058:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27039:6:1",
														"type": ""
													}
												],
												"src": "26941:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27217:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27239:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27247:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27235:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27251:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27228:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27228:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27307:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27315:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27303:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27320:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27296:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27296:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27209:6:1",
														"type": ""
													}
												],
												"src": "27111:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27443:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27465:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27473:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27461:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27461:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27477:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27454:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27454:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27435:6:1",
														"type": ""
													}
												],
												"src": "27337:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27631:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27653:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27661:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27649:14:1"
																	},
																	{
																		"hexValue": "546f6b656e206964206973206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27665:22:1",
																		"type": "",
																		"value": "Token id is not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27642:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27642:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27623:6:1",
														"type": ""
													}
												],
												"src": "27525:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27807:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27829:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27825:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27841:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27818:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27818:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27818:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27799:6:1",
														"type": ""
													}
												],
												"src": "27701:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27918:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27975:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27984:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27987:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "27977:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27977:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27977:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27941:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "27966:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "27948:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27948:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "27938:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27938:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "27931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27931:43:1"
															},
															"nodeType": "YulIf",
															"src": "27928:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27911:5:1",
														"type": ""
													}
												],
												"src": "27875:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28043:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28097:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28106:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28109:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28099:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28099:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28099:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28066:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28088:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "28073:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28073:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "28063:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28063:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28056:40:1"
															},
															"nodeType": "YulIf",
															"src": "28053:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28036:5:1",
														"type": ""
													}
												],
												"src": "28003:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28184:95:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28257:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28266:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28269:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28259:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28259:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28259:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28207:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28248:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$1048",
																					"nodeType": "YulIdentifier",
																					"src": "28214:33:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28214:40:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "28204:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28204:51:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28197:59:1"
															},
															"nodeType": "YulIf",
															"src": "28194:79:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28177:5:1",
														"type": ""
													}
												],
												"src": "28125:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28349:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28427:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28436:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28439:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28429:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28429:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28429:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28372:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28418:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "28379:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28379:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "28369:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28369:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28362:64:1"
															},
															"nodeType": "YulIf",
															"src": "28359:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28342:5:1",
														"type": ""
													}
												],
												"src": "28285:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28498:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28555:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28564:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28567:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28557:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28557:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28557:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28521:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28546:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "28528:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28528:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "28518:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28518:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28511:43:1"
															},
															"nodeType": "YulIf",
															"src": "28508:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28491:5:1",
														"type": ""
													}
												],
												"src": "28455:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC721_$1048(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$1048(value)\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC721_$1048(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1048_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTMasterChef_$1071_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_contract$_IERC721_$1048(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$1048_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_INFTMasterChef_$1071_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not Owner of token id\")\n\n    }\n\n    function store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is zero\")\n\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token id is not good\")\n\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$1048(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$1048(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c806364482f7911610104578063cb3cba55116100a2578063e2bbb15811610071578063e2bbb158146104f8578063e4d0989614610514578063f2fde38b14610532578063f395db2c1461054e576101cf565b8063cb3cba5514610470578063d0d41fe11461048e578063d49e77cd146104aa578063d5545992146104c8576101cf565b80638aa28550116100de5780638aa28550146103d35780638da5cb5b146103f15780638dbb1e3a1461040f57806393f1a40b1461043f576101cf565b806364482f791461038f578063715018a6146103ab5780637cd07e47146103b5576101cf565b806323cf31181161017157806351eb05a61161014b57806351eb05a6146103315780635ffe61461461034d578063612eee4314610369578063630b5ba114610385576101cf565b806323cf3118146102db578063441a3e70146102f757806348cd4cb114610313576101cf565b80631526fe27116101ad5780631526fe271461023e57806317caf6f1146102715780631eaaa0451461028f5780632080baab146102ab576101cf565b8063081e3eda146101d45780631395d8c9146101f2578063150b7a021461020e575b600080fd5b6101dc61056c565b6040516101e99190612a24565b60405180910390f35b61020c600480360381019061020791906123f5565b610579565b005b61022860048036038101906102239190612318565b61087b565b6040516102359190612851565b60405180910390f35b610258600480360381019061025391906123f5565b61088f565b6040516102689493929190612887565b60405180910390f35b6102796108ef565b6040516102869190612a24565b60405180910390f35b6102a960048036038101906102a4919061248f565b6108f5565b005b6102c560048036038101906102c0919061244f565b610a82565b6040516102d29190612a24565b60405180910390f35b6102f560048036038101906102f091906123c8565b610cb6565b005b610311600480360381019061030c91906124e2565b610d76565b005b61031b611153565b6040516103289190612a24565b60405180910390f35b61034b600480360381019061034691906123f5565b611159565b005b610367600480360381019061036291906123f5565b6113b7565b005b610383600480360381019061037e91906123f5565b61143d565b005b61038d6114c3565b005b6103a960048036038101906103a49190612522565b6114f6565b005b6103b3611602565b005b6103bd61168a565b6040516103ca91906128cc565b60405180910390f35b6103db6116b0565b6040516103e89190612a24565b60405180910390f35b6103f96116b6565b60405161040691906127b4565b60405180910390f35b610429600480360381019061042491906124e2565b6116df565b6040516104369190612a24565b60405180910390f35b6104596004803603810190610454919061244f565b611710565b604051610467929190612a68565b60405180910390f35b610478611741565b604051610485919061286c565b60405180910390f35b6104a860048036038101906104a391906122eb565b611767565b005b6104b2611827565b6040516104bf91906127b4565b60405180910390f35b6104e260048036038101906104dd919061244f565b61184d565b6040516104ef919061282f565b60405180910390f35b610512600480360381019061050d91906124e2565b6118ff565b005b61051c611ba2565b60405161052991906128e7565b60405180910390f35b61054c600480360381019061054791906122eb565b611bc8565b005b610556611cc0565b6040516105639190612a24565b60405180910390f35b6000600780549050905090565b60006007828154811061058f5761058e612e6f565b5b9060005260206000209060040201905060006008600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506105fc83611159565b6000610646826002015461063864e8d4a5100061062a87600301548760010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b611d8b90919063ffffffff16565b90506000811161068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290612984565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161070a929190612806565b602060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c919061239b565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cf35fddf82336040518363ffffffff1660e01b81526004016107ba929190612a3f565b600060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b5050505061081e64e8d4a5100061081085600301548560010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b8260020181905550833373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688360405161086d9190612a24565b60405180910390a350505050565b600063150b7a0260e01b9050949350505050565b6007818154811061089f57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60095481565b6108fd611dd5565b73ffffffffffffffffffffffffffffffffffffffff1661091b6116b6565b73ffffffffffffffffffffffffffffffffffffffff1614610971576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610968906129c4565b60405180910390fd5b80156109805761097f6114c3565b5b6000600a54431161099357600a54610995565b435b90506109ac84600954611ddd90919063ffffffff16565b600981905550600760405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b60008060078481548110610a9957610a98612e6f565b5b9060005260206000209060040201905060006008600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b6591906127b4565b60206040518083038186803b158015610b7d57600080fd5b505afa158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb59190612422565b9050836002015443118015610bcb575060008114155b15610c66576000610be08560020154436116df565b90506000610c23600954610c158860010154610c0760045487611cc690919063ffffffff16565b611cc690919063ffffffff16565b611d4190919063ffffffff16565b9050610c61610c5284610c4464e8d4a5100085611cc690919063ffffffff16565b611d4190919063ffffffff16565b85611ddd90919063ffffffff16565b935050505b610caa8360020154610c9c64e8d4a51000610c8e868860010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b611d8b90919063ffffffff16565b94505050505092915050565b610cbe611dd5565b73ffffffffffffffffffffffffffffffffffffffff16610cdc6116b6565b73ffffffffffffffffffffffffffffffffffffffff1614610d32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d29906129c4565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060078381548110610d8c57610d8b612e6f565b5b9060005260206000209060040201905060006008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001015411610e37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2e90612a04565b60405180910390fd5b600080841415610ee757610e4a85611159565b610e928260020154610e8464e8d4a51000610e7687600301548760010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b611d8b90919063ffffffff16565b90506000811115610ea857610ea73382611e3b565b5b610eda64e8d4a51000610ecc85600301548560010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b82600201819055506110fd565b600080805b8460000180549050811015610f3e5786856000018281548110610f1257610f11612e6f565b5b90600052602060002001541415610f2b57600192508091505b8080610f3690612dc8565b915050610eec565b5060018214610f82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7990612964565b60405180910390fd5b610f8b87611159565b610fd38460020154610fc564e8d4a51000610fb789600301548960010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b611d8b90919063ffffffff16565b92506000831115610fe957610fe83384611e3b565b5b61100160018560010154611d8b90919063ffffffff16565b846001018190555061103b64e8d4a5100061102d87600301548760010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b846002018190555083600001818154811061105957611058612e6f565b5b90600052602060002001600090558460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033896040518463ffffffff1660e01b81526004016110c8939291906127cf565b600060405180830381600087803b1580156110e257600080fd5b505af11580156110f6573d6000803e3d6000fd5b5050505050505b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516111449190612a24565b60405180910390a35050505050565b600a5481565b60006007828154811061116f5761116e612e6f565b5b906000526020600020906004020190508060020154431161119057506113b4565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111ef91906127b4565b60206040518083038186803b15801561120757600080fd5b505afa15801561121b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123f9190612422565b9050600081116112595743826002018190555050506113b4565b60006112698360020154436116df565b905060006112ac60095461129e866001015461129060045487611cc690919063ffffffff16565b611cc690919063ffffffff16565b611d4190919063ffffffff16565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b815260040161130b929190612806565b602060405180830381600087803b15801561132557600080fd5b505af1158015611339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135d919061239b565b5061139e61138b8461137d64e8d4a5100085611cc690919063ffffffff16565b611d4190919063ffffffff16565b8560030154611ddd90919063ffffffff16565b8460030181905550438460020181905550505050505b50565b6113bf611dd5565b73ffffffffffffffffffffffffffffffffffffffff166113dd6116b6565b73ffffffffffffffffffffffffffffffffffffffff1614611433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142a906129c4565b60405180910390fd5b8060058190555050565b611445611dd5565b73ffffffffffffffffffffffffffffffffffffffff166114636116b6565b73ffffffffffffffffffffffffffffffffffffffff16146114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b0906129c4565b60405180910390fd5b8060048190555050565b6000600780549050905060005b818110156114f2576114e181611159565b806114eb90612dc8565b90506114d0565b5050565b6114fe611dd5565b73ffffffffffffffffffffffffffffffffffffffff1661151c6116b6565b73ffffffffffffffffffffffffffffffffffffffff1614611572576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611569906129c4565b60405180910390fd5b8015611581576115806114c3565b5b6115cd826115bf6007868154811061159c5761159b612e6f565b5b906000526020600020906004020160010154600954611d8b90919063ffffffff16565b611ddd90919063ffffffff16565b60098190555081600784815481106115e8576115e7612e6f565b5b906000526020600020906004020160010181905550505050565b61160a611dd5565b73ffffffffffffffffffffffffffffffffffffffff166116286116b6565b73ffffffffffffffffffffffffffffffffffffffff161461167e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611675906129c4565b60405180910390fd5b611688600061205d565b565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006117086005546116fa8585611d8b90919063ffffffff16565b611cc690919063ffffffff16565b905092915050565b6008602052816000526040600020602052806000526040600020600091509150508060010154908060020154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61176f611dd5565b73ffffffffffffffffffffffffffffffffffffffff1661178d6116b6565b73ffffffffffffffffffffffffffffffffffffffff16146117e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117da906129c4565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006008600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000018054806020026020016040519081016040528092919081815260200182805480156118f157602002820191906000526020600020905b8154815260200190600101908083116118dd575b505050505091505092915050565b6000811415611943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193a906129e4565b60405180910390fd5b60006007838154811061195957611958612e6f565b5b9060005260206000209060040201905060006008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506119c684611159565b600081600101541115611a35576000611a1d8260020154611a0f64e8d4a51000611a0187600301548760010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b611d8b90919063ffffffff16565b90506000811115611a3357611a323382611e3b565b5b505b8160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330866040518463ffffffff1660e01b8152600401611a96939291906127cf565b600060405180830381600087803b158015611ab057600080fd5b505af1158015611ac4573d6000803e3d6000fd5b50505050611ae060018260010154611ddd90919063ffffffff16565b8160010181905550611b1a64e8d4a51000611b0c84600301548460010154611cc690919063ffffffff16565b611d4190919063ffffffff16565b816002018190555080600001839080600181540180825580915050600190039060005260206000200160009091909190915055833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051611b949190612a24565b60405180910390a350505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611bd0611dd5565b73ffffffffffffffffffffffffffffffffffffffff16611bee6116b6565b73ffffffffffffffffffffffffffffffffffffffff1614611c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3b906129c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cab90612924565b60405180910390fd5b611cbd8161205d565b50565b60045481565b600080831415611cd95760009050611d3b565b60008284611ce79190612bc3565b9050828482611cf69190612b92565b14611d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2d906129a4565b60405180910390fd5b809150505b92915050565b6000611d8383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612121565b905092915050565b6000611dcd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612184565b905092915050565b600033905090565b6000808284611dec9190612b3c565b905083811015611e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2890612944565b60405180910390fd5b8091505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611e9891906127b4565b60206040518083038186803b158015611eb057600080fd5b505afa158015611ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee89190612422565b905080821115611fa757600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401611f4f929190612806565b602060405180830381600087803b158015611f6957600080fd5b505af1158015611f7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa1919061239b565b50612058565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401612004929190612806565b602060405180830381600087803b15801561201e57600080fd5b505af1158015612032573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612056919061239b565b505b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008083118290612168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215f9190612902565b60405180910390fd5b50600083856121779190612b92565b9050809150509392505050565b60008383111582906121cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c39190612902565b60405180910390fd5b50600083856121db9190612c1d565b9050809150509392505050565b60006121fb6121f684612ab6565b612a91565b90508281526020810184848401111561221757612216612ed2565b5b612222848285612d55565b509392505050565b60008135905061223981613086565b92915050565b60008135905061224e8161309d565b92915050565b6000815190506122638161309d565b92915050565b600082601f83011261227e5761227d612ecd565b5b813561228e8482602086016121e8565b91505092915050565b6000813590506122a6816130b4565b92915050565b6000813590506122bb816130cb565b92915050565b6000813590506122d0816130e2565b92915050565b6000815190506122e5816130e2565b92915050565b60006020828403121561230157612300612edc565b5b600061230f8482850161222a565b91505092915050565b6000806000806080858703121561233257612331612edc565b5b60006123408782880161222a565b94505060206123518782880161222a565b9350506040612362878288016122c1565b925050606085013567ffffffffffffffff81111561238357612382612ed7565b5b61238f87828801612269565b91505092959194509250565b6000602082840312156123b1576123b0612edc565b5b60006123bf84828501612254565b91505092915050565b6000602082840312156123de576123dd612edc565b5b60006123ec848285016122ac565b91505092915050565b60006020828403121561240b5761240a612edc565b5b6000612419848285016122c1565b91505092915050565b60006020828403121561243857612437612edc565b5b6000612446848285016122d6565b91505092915050565b6000806040838503121561246657612465612edc565b5b6000612474858286016122c1565b92505060206124858582860161222a565b9150509250929050565b6000806000606084860312156124a8576124a7612edc565b5b60006124b6868287016122c1565b93505060206124c786828701612297565b92505060406124d88682870161223f565b9150509250925092565b600080604083850312156124f9576124f8612edc565b5b6000612507858286016122c1565b9250506020612518858286016122c1565b9150509250929050565b60008060006060848603121561253b5761253a612edc565b5b6000612549868287016122c1565b935050602061255a868287016122c1565b925050604061256b8682870161223f565b9150509250925092565b60006125818383612796565b60208301905092915050565b61259681612c51565b82525050565b60006125a782612af7565b6125b18185612b1a565b93506125bc83612ae7565b8060005b838110156125ed5781516125d48882612575565b97506125df83612b0d565b9250506001810190506125c0565b5085935050505092915050565b61260381612c6f565b82525050565b61261281612ce9565b82525050565b61262181612cfb565b82525050565b61263081612d0d565b82525050565b61263f81612d1f565b82525050565b600061265082612b02565b61265a8185612b2b565b935061266a818560208601612d64565b61267381612ee1565b840191505092915050565b600061268b602683612b2b565b915061269682612ef2565b604082019050919050565b60006126ae601b83612b2b565b91506126b982612f41565b602082019050919050565b60006126d1601d83612b2b565b91506126dc82612f6a565b602082019050919050565b60006126f4600e83612b2b565b91506126ff82612f93565b602082019050919050565b6000612717602183612b2b565b915061272282612fbc565b604082019050919050565b600061273a602083612b2b565b91506127458261300b565b602082019050919050565b600061275d601483612b2b565b915061276882613034565b602082019050919050565b6000612780601283612b2b565b915061278b8261305d565b602082019050919050565b61279f81612cdf565b82525050565b6127ae81612cdf565b82525050565b60006020820190506127c9600083018461258d565b92915050565b60006060820190506127e4600083018661258d565b6127f1602083018561258d565b6127fe60408301846127a5565b949350505050565b600060408201905061281b600083018561258d565b61282860208301846127a5565b9392505050565b60006020820190508181036000830152612849818461259c565b905092915050565b600060208201905061286660008301846125fa565b92915050565b60006020820190506128816000830184612609565b92915050565b600060808201905061289c6000830187612618565b6128a960208301866127a5565b6128b660408301856127a5565b6128c360608301846127a5565b95945050505050565b60006020820190506128e16000830184612627565b92915050565b60006020820190506128fc6000830184612636565b92915050565b6000602082019050818103600083015261291c8184612645565b905092915050565b6000602082019050818103600083015261293d8161267e565b9050919050565b6000602082019050818103600083015261295d816126a1565b9050919050565b6000602082019050818103600083015261297d816126c4565b9050919050565b6000602082019050818103600083015261299d816126e7565b9050919050565b600060208201905081810360008301526129bd8161270a565b9050919050565b600060208201905081810360008301526129dd8161272d565b9050919050565b600060208201905081810360008301526129fd81612750565b9050919050565b60006020820190508181036000830152612a1d81612773565b9050919050565b6000602082019050612a3960008301846127a5565b92915050565b6000604082019050612a5460008301856127a5565b612a61602083018461258d565b9392505050565b6000604082019050612a7d60008301856127a5565b612a8a60208301846127a5565b9392505050565b6000612a9b612aac565b9050612aa78282612d97565b919050565b6000604051905090565b600067ffffffffffffffff821115612ad157612ad0612e9e565b5b612ada82612ee1565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612b4782612cdf565b9150612b5283612cdf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b8757612b86612e11565b5b828201905092915050565b6000612b9d82612cdf565b9150612ba883612cdf565b925082612bb857612bb7612e40565b5b828204905092915050565b6000612bce82612cdf565b9150612bd983612cdf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612c1257612c11612e11565b5b828202905092915050565b6000612c2882612cdf565b9150612c3383612cdf565b925082821015612c4657612c45612e11565b5b828203905092915050565b6000612c5c82612cbf565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000612ca682612c51565b9050919050565b6000612cb882612c51565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612cf482612d31565b9050919050565b6000612d0682612d31565b9050919050565b6000612d1882612d31565b9050919050565b6000612d2a82612d31565b9050919050565b6000612d3c82612d43565b9050919050565b6000612d4e82612cbf565b9050919050565b82818337600083830152505050565b60005b83811015612d82578082015181840152602081019050612d67565b83811115612d91576000848401525b50505050565b612da082612ee1565b810181811067ffffffffffffffff82111715612dbf57612dbe612e9e565b5b80604052505050565b6000612dd382612cdf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612e0657612e05612e11565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f596f7520617265206e6f74204f776e6572206f6620746f6b656e206964000000600082015250565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e206964206973206e6f7420676f6f64000000000000000000000000600082015250565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b61308f81612c51565b811461309a57600080fd5b50565b6130a681612c63565b81146130b157600080fd5b50565b6130bd81612c9b565b81146130c857600080fd5b50565b6130d481612cad565b81146130df57600080fd5b50565b6130eb81612cdf565b81146130f657600080fd5b5056fea2646970667358221220b3dea4542ced338333472fb0239f84d253cec108f8ace45e31652f01f1b2719764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCB3CBA55 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xE4D09896 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xF395DB2C EQ PUSH2 0x54E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xD5545992 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x43F JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x3B5 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x612EEE43 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x385 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x313 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x2080BAAB EQ PUSH2 0x2AB JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x1395D8C9 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1159 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x13B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x143D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH2 0x14C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x14F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH2 0x1602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP3 SWAP2 SWAP1 PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B2 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x184D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH2 0x1BC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x5FC DUP4 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x646 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x638 PUSH5 0xE8D4A51000 PUSH2 0x62A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x738 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75C SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF35FDDF DUP3 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP3 SWAP2 SWAP1 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x81E PUSH5 0xE8D4A51000 PUSH2 0x810 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 PUSH1 0x40 MLOAD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91B PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x980 JUMPI PUSH2 0x97F PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x993 JUMPI PUSH1 0xA SLOAD PUSH2 0x995 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x9AC DUP5 PUSH1 0x9 SLOAD PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA99 JUMPI PUSH2 0xA98 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB5 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xBCB JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 PUSH2 0xBE0 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC23 PUSH1 0x9 SLOAD PUSH2 0xC15 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC07 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC61 PUSH2 0xC52 DUP5 PUSH2 0xC44 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xCAA DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xC9C PUSH5 0xE8D4A51000 PUSH2 0xC8E DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBE PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDC PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD29 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH2 0xD8B PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0xE37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2E SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 EQ ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xE4A DUP6 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0xE92 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xE84 PUSH5 0xE8D4A51000 PUSH2 0xE76 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 CALLER DUP3 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST PUSH2 0xEDA PUSH5 0xE8D4A51000 PUSH2 0xECC DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xF3E JUMPI DUP7 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF12 JUMPI PUSH2 0xF11 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xF2B JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0xF36 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEEC JUMP JUMPDEST POP PUSH1 0x1 DUP3 EQ PUSH2 0xF82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF79 SWAP1 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF8B DUP8 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0xFD3 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xFC5 PUSH5 0xE8D4A51000 PUSH2 0xFB7 DUP10 PUSH1 0x3 ADD SLOAD DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 CALLER DUP5 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST PUSH2 0x1001 PUSH1 0x1 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x103B PUSH5 0xE8D4A51000 PUSH2 0x102D DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1059 JUMPI PUSH2 0x1058 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x116F JUMPI PUSH2 0x116E PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1190 JUMPI POP PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x121B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123F SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1259 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1269 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12AC PUSH1 0x9 SLOAD PUSH2 0x129E DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1290 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130B SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1339 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP PUSH2 0x139E PUSH2 0x138B DUP5 PUSH2 0x137D PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13BF PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13DD PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1445 PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1463 PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B0 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14F2 JUMPI PUSH2 0x14E1 DUP2 PUSH2 0x1159 JUMP JUMPDEST DUP1 PUSH2 0x14EB SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x14D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14FE PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x151C PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1569 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1581 JUMPI PUSH2 0x1580 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST PUSH2 0x15CD DUP3 PUSH2 0x15BF PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x159C JUMPI PUSH2 0x159B PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15E8 JUMPI PUSH2 0x15E7 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x160A PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1628 PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1675 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1688 PUSH1 0x0 PUSH2 0x205D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 PUSH1 0x5 SLOAD PUSH2 0x16FA DUP6 DUP6 PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x176F PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178D PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DA SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x18DD JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193A SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1959 JUMPI PUSH2 0x1958 PUSH2 0x2E6F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x19C6 DUP5 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 PUSH2 0x1A1D DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1A0F PUSH5 0xE8D4A51000 PUSH2 0x1A01 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1A33 JUMPI PUSH2 0x1A32 CALLER DUP3 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1AE0 PUSH1 0x1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1DDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1B1A PUSH5 0xE8D4A51000 PUSH2 0x1B0C DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B94 SWAP2 SWAP1 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1BD0 PUSH2 0x1DD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BEE PUSH2 0x16B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3B SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAB SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CBD DUP2 PUSH2 0x205D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1CD9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1CE7 SWAP2 SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1CF6 SWAP2 SWAP1 PUSH2 0x2B92 JUMP JUMPDEST EQ PUSH2 0x1D36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2D SWAP1 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D83 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCD DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1DEC SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1E31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E28 SWAP1 PUSH2 0x2944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E98 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EE8 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4F SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA1 SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP PUSH2 0x2058 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2004 SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x201E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2032 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2056 SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2168 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215F SWAP2 SWAP1 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2177 SWAP2 SWAP1 PUSH2 0x2B92 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x21CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C3 SWAP2 SWAP1 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x21DB SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FB PUSH2 0x21F6 DUP5 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x2A91 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2217 JUMPI PUSH2 0x2216 PUSH2 0x2ED2 JUMP JUMPDEST JUMPDEST PUSH2 0x2222 DUP5 DUP3 DUP6 PUSH2 0x2D55 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2239 DUP2 PUSH2 0x3086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x224E DUP2 PUSH2 0x309D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2263 DUP2 PUSH2 0x309D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x227E JUMPI PUSH2 0x227D PUSH2 0x2ECD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x228E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22A6 DUP2 PUSH2 0x30B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22BB DUP2 PUSH2 0x30CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D0 DUP2 PUSH2 0x30E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22E5 DUP2 PUSH2 0x30E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2301 JUMPI PUSH2 0x2300 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x230F DUP5 DUP3 DUP6 ADD PUSH2 0x222A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2332 JUMPI PUSH2 0x2331 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2340 DUP8 DUP3 DUP9 ADD PUSH2 0x222A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2351 DUP8 DUP3 DUP9 ADD PUSH2 0x222A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2362 DUP8 DUP3 DUP9 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2383 JUMPI PUSH2 0x2382 PUSH2 0x2ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x238F DUP8 DUP3 DUP9 ADD PUSH2 0x2269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23BF DUP5 DUP3 DUP6 ADD PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23EC DUP5 DUP3 DUP6 ADD PUSH2 0x22AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240B JUMPI PUSH2 0x240A PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2419 DUP5 DUP3 DUP6 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2438 JUMPI PUSH2 0x2437 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2446 DUP5 DUP3 DUP6 ADD PUSH2 0x22D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2474 DUP6 DUP3 DUP7 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2485 DUP6 DUP3 DUP7 ADD PUSH2 0x222A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A7 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24B6 DUP7 DUP3 DUP8 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24C7 DUP7 DUP3 DUP8 ADD PUSH2 0x2297 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x24D8 DUP7 DUP3 DUP8 ADD PUSH2 0x223F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F9 JUMPI PUSH2 0x24F8 PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2507 DUP6 DUP3 DUP7 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2518 DUP6 DUP3 DUP7 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x253B JUMPI PUSH2 0x253A PUSH2 0x2EDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2549 DUP7 DUP3 DUP8 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x255A DUP7 DUP3 DUP8 ADD PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x256B DUP7 DUP3 DUP8 ADD PUSH2 0x223F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2581 DUP4 DUP4 PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2596 DUP2 PUSH2 0x2C51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A7 DUP3 PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x25B1 DUP2 DUP6 PUSH2 0x2B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x25BC DUP4 PUSH2 0x2AE7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25ED JUMPI DUP2 MLOAD PUSH2 0x25D4 DUP9 DUP3 PUSH2 0x2575 JUMP JUMPDEST SWAP8 POP PUSH2 0x25DF DUP4 PUSH2 0x2B0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25C0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2603 DUP2 PUSH2 0x2C6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2612 DUP2 PUSH2 0x2CE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2621 DUP2 PUSH2 0x2CFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2630 DUP2 PUSH2 0x2D0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x263F DUP2 PUSH2 0x2D1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2650 DUP3 PUSH2 0x2B02 JUMP JUMPDEST PUSH2 0x265A DUP2 DUP6 PUSH2 0x2B2B JUMP JUMPDEST SWAP4 POP PUSH2 0x266A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x2673 DUP2 PUSH2 0x2EE1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268B PUSH1 0x26 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2696 DUP3 PUSH2 0x2EF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE PUSH1 0x1B DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D1 PUSH1 0x1D DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x26DC DUP3 PUSH2 0x2F6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F4 PUSH1 0xE DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x26FF DUP3 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2717 PUSH1 0x21 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2722 DUP3 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273A PUSH1 0x20 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2745 DUP3 PUSH2 0x300B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275D PUSH1 0x14 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x2768 DUP3 PUSH2 0x3034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2780 PUSH1 0x12 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x278B DUP3 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x279F DUP2 PUSH2 0x2CDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27AE DUP2 PUSH2 0x2CDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x258D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27E4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x27F1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x27FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x281B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x2828 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2849 DUP2 DUP5 PUSH2 0x259C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2866 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2881 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2609 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x289C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0x28A9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x28B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x28C3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2627 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2636 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291C DUP2 DUP5 PUSH2 0x2645 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293D DUP2 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x295D DUP2 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x297D DUP2 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x299D DUP2 PUSH2 0x26E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BD DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29DD DUP2 PUSH2 0x272D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29FD DUP2 PUSH2 0x2750 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1D DUP2 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A54 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x2A61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x258D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x2A8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9B PUSH2 0x2AAC JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA7 DUP3 DUP3 PUSH2 0x2D97 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x2E9E JUMP JUMPDEST JUMPDEST PUSH2 0x2ADA DUP3 PUSH2 0x2EE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B47 DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2B52 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9D DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA8 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BB8 JUMPI PUSH2 0x2BB7 PUSH2 0x2E40 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD9 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C12 JUMPI PUSH2 0x2C11 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C28 DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH2 0x2C33 DUP4 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C46 JUMPI PUSH2 0x2C45 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5C DUP3 PUSH2 0x2CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA6 DUP3 PUSH2 0x2C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB8 DUP3 PUSH2 0x2C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF4 DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D06 DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D18 DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2A DUP3 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3C DUP3 PUSH2 0x2D43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D4E DUP3 PUSH2 0x2CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D82 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D67 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D91 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2DA0 DUP3 PUSH2 0x2EE1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2DBF JUMPI PUSH2 0x2DBE PUSH2 0x2E9E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD3 DUP3 PUSH2 0x2CDF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2E06 JUMPI PUSH2 0x2E05 PUSH2 0x2E11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206964206973206E6F7420676F6F64000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x308F DUP2 PUSH2 0x2C51 JUMP JUMPDEST DUP2 EQ PUSH2 0x309A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30A6 DUP2 PUSH2 0x2C63 JUMP JUMPDEST DUP2 EQ PUSH2 0x30B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30BD DUP2 PUSH2 0x2C9B JUMP JUMPDEST DUP2 EQ PUSH2 0x30C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30D4 DUP2 PUSH2 0x2CAD JUMP JUMPDEST DUP2 EQ PUSH2 0x30DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30EB DUP2 PUSH2 0x2CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x30F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xDE LOG4 SLOAD 0x2C 0xED CALLER DUP4 CALLER SELFBALANCE 0x2F 0xB0 0x23 SWAP16 DUP5 0xD2 MSTORE8 0xCE 0xC1 ADDMOD 0xF8 0xAC 0xE4 0x5E BALANCE PUSH6 0x2F01F1B27197 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "28014:10565:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31232:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37400:577;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30929:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29846:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;30087:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31496:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33115:753;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32534:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35854:1538;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30177:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34207:729;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31101:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;38471:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33951:180;;;:::i;:::-;;32153:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20826:103;;;:::i;:::-;;29783:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29645:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20175:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32712:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29928:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;29454:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38368:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29499:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32864:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35005:796;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29387:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21084:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29566:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31232:95;31277:7;31304:8;:15;;;;31297:22;;31232:95;:::o;37400:577::-;37452:21;37476:8;37485:4;37476:14;;;;;;;;:::i;:::-;;;;;;;;;;;;37452:38;;37501:21;37525:8;:14;37534:4;37525:14;;;;;;;;;;;:26;37540:10;37525:26;;;;;;;;;;;;;;;37501:50;;37562:16;37573:4;37562:10;:16::i;:::-;37589:15;37607:67;37658:4;:15;;;37607:46;37648:4;37607:36;37623:4;:19;;;37607:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;37589:85;;37703:1;37693:7;:11;37685:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;37734:3;;;;;;;;;;;:11;;;37754:13;;;;;;;;;;;37770:7;37734:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;37789:13;;;;;;;;;;;:33;;;37823:7;37832:10;37789:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37872:46;37913:4;37872:36;37888:4;:19;;;37872:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;37854:4;:15;;:64;;;;37955:4;37943:10;37934:35;;;37961:7;37934:35;;;;;;:::i;:::-;;;;;;;;37441:536;;;37400:577;:::o;30929:164::-;31029:6;31055:30;;;31048:37;;30929:164;;;;;;:::o;29846:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30087:34::-;;;;:::o;31496:562::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;31601:11:::1;31597:61;;;31629:17;:15;:17::i;:::-;31597:61;31668:23;31709:10;;31694:12;:25;:53;;31737:10;;31694:53;;;31722:12;31694:53;31668:79;;31776:32;31796:11;31776:15;;:19;;:32;;;;:::i;:::-;31758:15;:50;;;;31819:8;31847:192;;;;;;;;31885:9;31847:192;;;;;;31925:11;31847:192;;;;31972:15;31847:192;;;;32022:1;31847:192;;::::0;31819:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31586:472;31496:562:::0;;;:::o;33115:753::-;33187:7;33206:21;33230:8;33239:4;33230:14;;;;;;;;:::i;:::-;;;;;;;;;;;;33206:38;;33255:21;33279:8;:14;33288:4;33279:14;;;;;;;;;;;:21;33294:5;33279:21;;;;;;;;;;;;;;;33255:45;;33311:22;33336:4;:19;;;33311:44;;33366:17;33386:4;:13;;;;;;;;;;;;:23;;;33418:4;33386:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33366:58;;33454:4;:20;;;33439:12;:35;:53;;;;;33491:1;33478:9;:14;;33439:53;33435:346;;;33509:18;33530:49;33544:4;:20;;;33566:12;33530:13;:49::i;:::-;33509:70;;33594:17;33614:69;33667:15;;33614:48;33646:4;:15;;;33614:27;33629:11;;33614:10;:14;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33594:89;;33715:54;33734:34;33758:9;33734:19;33748:4;33734:9;:13;;:19;;;;:::i;:::-;:23;;:34;;;;:::i;:::-;33715:14;:18;;:54;;;;:::i;:::-;33698:71;;33494:287;;33435:346;33798:62;33844:4;:15;;;33798:41;33834:4;33798:31;33814:14;33798:4;:11;;;:15;;:31;;;;:::i;:::-;:35;;:41;;;;:::i;:::-;:45;;:62;;;;:::i;:::-;33791:69;;;;;;33115:753;;;;:::o;32534:102::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32619:9:::1;32608:8;;:20;;;;;;;;;;;;;;;;;;32534:102:::0;:::o;35854:1538::-;35922:21;35946:8;35955:4;35946:14;;;;;;;;:::i;:::-;;;;;;;;;;;;35922:38;;35971:21;35995:8;:14;36004:4;35995:14;;;;;;;;;;;:26;36010:10;35995:26;;;;;;;;;;;;;;;35971:50;;36056:1;36042:4;:11;;;:15;36034:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;36093:15;36134:1;36122:8;:13;36119:1214;;;36151:16;36162:4;36151:10;:16::i;:::-;36192:67;36243:4;:15;;;36192:46;36233:4;36192:36;36208:4;:19;;;36192:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;36182:77;;36287:1;36277:7;:11;36274:86;;;36308:36;36324:10;36336:7;36308:15;:36::i;:::-;36274:86;36392:46;36433:4;36392:36;36408:4;:19;;;36392:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;36374:4;:15;;:64;;;;36119:1214;;;36470:18;36507:20;36546:9;36542:205;36559:4;:13;;:20;;;;36557:1;:22;36542:205;;;36627:8;36607:4;:13;;36621:1;36607:16;;;;;;;;:::i;:::-;;;;;;;;;;:28;36604:128;;;36672:1;36659:14;;36711:1;36696:16;;36604:128;36581:3;;;;;:::i;:::-;;;;36542:205;;;;36783:1;36769:10;:15;36761:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;36847:16;36858:4;36847:10;:16::i;:::-;36888:67;36939:4;:15;;;36888:46;36929:4;36888:36;36904:4;:19;;;36888:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;36878:77;;36983:1;36973:7;:11;36970:86;;;37004:36;37020:10;37032:7;37004:15;:36::i;:::-;36970:86;37084:18;37100:1;37084:4;:11;;;:15;;:18;;;;:::i;:::-;37070:4;:11;;:32;;;;37135:46;37176:4;37135:36;37151:4;:19;;;37135:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;37117:4;:15;;:64;;;;37203:4;:13;;37217:12;37203:27;;;;;;;;:::i;:::-;;;;;;;;;37196:34;;;37245:4;:13;;;;;;;;;;;;:30;;;37284:4;37299:10;37312:8;37245:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36455:878;;36119:1214;37369:4;37357:10;37348:36;;;37375:8;37348:36;;;;;;:::i;:::-;;;;;;;;35911:1481;;;35854:1538;;:::o;30177:25::-;;;;:::o;34207:729::-;34259:21;34283:8;34292:4;34283:14;;;;;;;;:::i;:::-;;;;;;;;;;;;34259:38;;34328:4;:20;;;34312:12;:36;34308:75;;34365:7;;;34308:75;34393:17;34413:4;:13;;;;;;;;;;;;:23;;;34445:4;34413:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34393:58;;34479:1;34466:9;:14;34462:103;;34520:12;34497:4;:20;;:35;;;;34547:7;;;;34462:103;34575:18;34596:49;34610:4;:20;;;34632:12;34596:13;:49::i;:::-;34575:70;;34656:17;34676:69;34729:15;;34676:48;34708:4;:15;;;34676:27;34691:11;;34676:10;:14;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;34656:89;;34756:3;;;;;;;;;;;:8;;;34773:4;34780:9;34756:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;34823:59;34847:34;34871:9;34847:19;34861:4;34847:9;:13;;:19;;;;:::i;:::-;:23;;:34;;;;:::i;:::-;34823:4;:19;;;:23;;:59;;;;:::i;:::-;34801:4;:19;;:81;;;;34916:12;34893:4;:20;;:35;;;;34248:688;;;;34207:729;;:::o;31101:123::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;31200:16:::1;31181;:35;;;;31101:123:::0;:::o;38471:105::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;38559:9:::1;38545:11;:23;;;;38471:105:::0;:::o;33951:180::-;33996:14;34013:8;:15;;;;33996:32;;34044:11;34039:85;34067:6;34061:3;:12;34039:85;;;34097:15;34108:3;34097:10;:15::i;:::-;34075:5;;;;:::i;:::-;;;34039:85;;;;33985:146;33951:180::o;32153:305::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32252:11:::1;32248:61;;;32280:17;:15;:17::i;:::-;32248:61;32337:63;32388:11;32337:46;32357:8;32366:4;32357:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;32337:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;32319:15;:81;;;;32439:11;32411:8;32420:4;32411:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;32153:305:::0;;;:::o;20826:103::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20891:30:::1;20918:1;20891:18;:30::i;:::-;20826:103::o:0;29783:29::-;;;;;;;;;;;;;:::o;29645:35::-;;;;:::o;20175:87::-;20221:7;20248:6;;;;;;;;;;;20241:13;;20175:87;:::o;32712:144::-;32784:7;32812:36;32831:16;;32812:14;32820:5;32812:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;32805:43;;32712:144;;;;:::o;29928:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;29454:17::-;;;;;;;;;;;;;:::o;38368:95::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;38447:8:::1;38437:7;;:18;;;;;;;;;;;;;;;;;;38368:95:::0;:::o;29499:22::-;;;;;;;;;;;;;:::o;32864:188::-;32939:16;32968:21;32992:8;:14;33001:4;32992:14;;;;;;;;;;;:21;33007:5;32992:21;;;;;;;;;;;;;;;32968:45;;33031:4;:13;;33024:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32864:188;;;;:::o;35005:796::-;35092:1;35080:8;:13;;35072:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;35129:21;35153:8;35162:4;35153:14;;;;;;;;:::i;:::-;;;;;;;;;;;;35129:38;;35178:21;35202:8;:14;35211:4;35202:14;;;;;;;;;;;:26;35217:10;35202:26;;;;;;;;;;;;;;;35178:50;;35239:16;35250:4;35239:10;:16::i;:::-;35284:1;35270:4;:11;;;:15;35266:233;;;35302:15;35320:67;35371:4;:15;;;35320:46;35361:4;35320:36;35336:4;:19;;;35320:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;35302:85;;35415:1;35405:7;:11;35402:86;;;35436:36;35452:10;35464:7;35436:15;:36::i;:::-;35402:86;35287:212;35266:233;35509:4;:13;;;;;;;;;;;;:30;;;35548:10;35569:4;35576:8;35509:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35610:18;35626:1;35610:4;:11;;;:15;;:18;;;;:::i;:::-;35596:4;:11;;:32;;;;35657:46;35698:4;35657:36;35673:4;:19;;;35657:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;35639:4;:15;;:64;;;;35714:4;:13;;35733:8;35714:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35778:4;35766:10;35758:35;;;35784:8;35758:35;;;;;;:::i;:::-;;;;;;;;35061:740;;35005:796;;:::o;29387:35::-;;;;;;;;;;;;;:::o;21084:201::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21193:1:::1;21173:22;;:8;:22;;;;21165:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;21249:28;21268:8;21249:18;:28::i;:::-;21084:201:::0;:::o;29566:26::-;;;;:::o;1827:471::-;1885:7;2135:1;2130;:6;2126:47;;;2160:1;2153:8;;;;2126:47;2185:9;2201:1;2197;:5;;;;:::i;:::-;2185:17;;2230:1;2225;2221;:5;;;;:::i;:::-;:10;2213:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2289:1;2282:8;;;1827:471;;;;;:::o;2766:132::-;2824:7;2851:39;2855:1;2858;2851:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2844:46;;2766:132;;;;:::o;911:136::-;969:7;996:43;1000:1;1003;996:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;989:50;;911:136;;;;:::o;19549:98::-;19602:7;19629:10;19622:17;;19549:98;:::o;455:181::-;513:7;533:9;549:1;545;:5;;;;:::i;:::-;533:17;;574:1;569;:6;;561:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;627:1;620:8;;;455:181;;;;:::o;38089:271::-;38164:14;38181:3;;;;;;;;;;;:13;;;38203:4;38181:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38164:45;;38234:6;38224:7;:16;38220:133;;;38257:3;;;;;;;;;;;:12;;;38270:3;38275:6;38257:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;38220:133;;;38315:3;;;;;;;;;;;:12;;;38328:3;38333:7;38315:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;38220:133;38153:207;38089:271;;:::o;21445:191::-;21519:16;21538:6;;;;;;;;;;;21519:25;;21564:8;21555:6;;:17;;;;;;;;;;;;;;;;;;21619:8;21588:40;;21609:8;21588:40;;;;;;;;;;;;21508:128;21445:191;:::o;3428:345::-;3514:7;3613:1;3609;:5;3616:12;3601:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3640:9;3656:1;3652;:5;;;;:::i;:::-;3640:17;;3764:1;3757:8;;;3428:345;;;;;:::o;1384:192::-;1470:7;1503:1;1498;:6;;1506:12;1490:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1530:9;1546:1;1542;:5;;;;:::i;:::-;1530:17;;1567:1;1560:8;;;1384:192;;;;;:::o;7:410:1:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;761:5;792:6;786:13;777:22;;808:30;832:5;808:30;:::i;:::-;707:137;;;;:::o;863:338::-;918:5;967:3;960:4;952:6;948:17;944:27;934:122;;975:79;;:::i;:::-;934:122;1092:6;1079:20;1117:78;1191:3;1183:6;1176:4;1168:6;1164:17;1117:78;:::i;:::-;1108:87;;924:277;863:338;;;;:::o;1207:171::-;1269:5;1307:6;1294:20;1285:29;;1323:49;1366:5;1323:49;:::i;:::-;1207:171;;;;:::o;1384:181::-;1451:5;1489:6;1476:20;1467:29;;1505:54;1553:5;1505:54;:::i;:::-;1384:181;;;;:::o;1571:139::-;1617:5;1655:6;1642:20;1633:29;;1671:33;1698:5;1671:33;:::i;:::-;1571:139;;;;:::o;1716:143::-;1773:5;1804:6;1798:13;1789:22;;1820:33;1847:5;1820:33;:::i;:::-;1716:143;;;;:::o;1865:329::-;1924:6;1973:2;1961:9;1952:7;1948:23;1944:32;1941:119;;;1979:79;;:::i;:::-;1941:119;2099:1;2124:53;2169:7;2160:6;2149:9;2145:22;2124:53;:::i;:::-;2114:63;;2070:117;1865:329;;;;:::o;2200:943::-;2295:6;2303;2311;2319;2368:3;2356:9;2347:7;2343:23;2339:33;2336:120;;;2375:79;;:::i;:::-;2336:120;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2622:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;:::i;:::-;2638:63;;2593:118;2750:2;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2721:118;2906:2;2895:9;2891:18;2878:32;2937:18;2929:6;2926:30;2923:117;;;2959:79;;:::i;:::-;2923:117;3064:62;3118:7;3109:6;3098:9;3094:22;3064:62;:::i;:::-;3054:72;;2849:287;2200:943;;;;;;;:::o;3149:345::-;3216:6;3265:2;3253:9;3244:7;3240:23;3236:32;3233:119;;;3271:79;;:::i;:::-;3233:119;3391:1;3416:61;3469:7;3460:6;3449:9;3445:22;3416:61;:::i;:::-;3406:71;;3362:125;3149:345;;;;:::o;3500:371::-;3580:6;3629:2;3617:9;3608:7;3604:23;3600:32;3597:119;;;3635:79;;:::i;:::-;3597:119;3755:1;3780:74;3846:7;3837:6;3826:9;3822:22;3780:74;:::i;:::-;3770:84;;3726:138;3500:371;;;;:::o;3877:329::-;3936:6;3985:2;3973:9;3964:7;3960:23;3956:32;3953:119;;;3991:79;;:::i;:::-;3953:119;4111:1;4136:53;4181:7;4172:6;4161:9;4157:22;4136:53;:::i;:::-;4126:63;;4082:117;3877:329;;;;:::o;4212:351::-;4282:6;4331:2;4319:9;4310:7;4306:23;4302:32;4299:119;;;4337:79;;:::i;:::-;4299:119;4457:1;4482:64;4538:7;4529:6;4518:9;4514:22;4482:64;:::i;:::-;4472:74;;4428:128;4212:351;;;;:::o;4569:474::-;4637:6;4645;4694:2;4682:9;4673:7;4669:23;4665:32;4662:119;;;4700:79;;:::i;:::-;4662:119;4820:1;4845:53;4890:7;4881:6;4870:9;4866:22;4845:53;:::i;:::-;4835:63;;4791:117;4947:2;4973:53;5018:7;5009:6;4998:9;4994:22;4973:53;:::i;:::-;4963:63;;4918:118;4569:474;;;;;:::o;5049:645::-;5139:6;5147;5155;5204:2;5192:9;5183:7;5179:23;5175:32;5172:119;;;5210:79;;:::i;:::-;5172:119;5330:1;5355:53;5400:7;5391:6;5380:9;5376:22;5355:53;:::i;:::-;5345:63;;5301:117;5457:2;5483:69;5544:7;5535:6;5524:9;5520:22;5483:69;:::i;:::-;5473:79;;5428:134;5601:2;5627:50;5669:7;5660:6;5649:9;5645:22;5627:50;:::i;:::-;5617:60;;5572:115;5049:645;;;;;:::o;5700:474::-;5768:6;5776;5825:2;5813:9;5804:7;5800:23;5796:32;5793:119;;;5831:79;;:::i;:::-;5793:119;5951:1;5976:53;6021:7;6012:6;6001:9;5997:22;5976:53;:::i;:::-;5966:63;;5922:117;6078:2;6104:53;6149:7;6140:6;6129:9;6125:22;6104:53;:::i;:::-;6094:63;;6049:118;5700:474;;;;;:::o;6180:613::-;6254:6;6262;6270;6319:2;6307:9;6298:7;6294:23;6290:32;6287:119;;;6325:79;;:::i;:::-;6287:119;6445:1;6470:53;6515:7;6506:6;6495:9;6491:22;6470:53;:::i;:::-;6460:63;;6416:117;6572:2;6598:53;6643:7;6634:6;6623:9;6619:22;6598:53;:::i;:::-;6588:63;;6543:118;6700:2;6726:50;6768:7;6759:6;6748:9;6744:22;6726:50;:::i;:::-;6716:60;;6671:115;6180:613;;;;;:::o;6799:179::-;6868:10;6889:46;6931:3;6923:6;6889:46;:::i;:::-;6967:4;6962:3;6958:14;6944:28;;6799:179;;;;:::o;6984:118::-;7071:24;7089:5;7071:24;:::i;:::-;7066:3;7059:37;6984:118;;:::o;7138:732::-;7257:3;7286:54;7334:5;7286:54;:::i;:::-;7356:86;7435:6;7430:3;7356:86;:::i;:::-;7349:93;;7466:56;7516:5;7466:56;:::i;:::-;7545:7;7576:1;7561:284;7586:6;7583:1;7580:13;7561:284;;;7662:6;7656:13;7689:63;7748:3;7733:13;7689:63;:::i;:::-;7682:70;;7775:60;7828:6;7775:60;:::i;:::-;7765:70;;7621:224;7608:1;7605;7601:9;7596:14;;7561:284;;;7565:14;7861:3;7854:10;;7262:608;;;7138:732;;;;:::o;7876:115::-;7961:23;7978:5;7961:23;:::i;:::-;7956:3;7949:36;7876:115;;:::o;7997:159::-;8098:51;8143:5;8098:51;:::i;:::-;8093:3;8086:64;7997:159;;:::o;8162:163::-;8265:53;8312:5;8265:53;:::i;:::-;8260:3;8253:66;8162:163;;:::o;8331:173::-;8439:58;8491:5;8439:58;:::i;:::-;8434:3;8427:71;8331:173;;:::o;8510:177::-;8620:60;8674:5;8620:60;:::i;:::-;8615:3;8608:73;8510:177;;:::o;8693:364::-;8781:3;8809:39;8842:5;8809:39;:::i;:::-;8864:71;8928:6;8923:3;8864:71;:::i;:::-;8857:78;;8944:52;8989:6;8984:3;8977:4;8970:5;8966:16;8944:52;:::i;:::-;9021:29;9043:6;9021:29;:::i;:::-;9016:3;9012:39;9005:46;;8785:272;8693:364;;;;:::o;9063:366::-;9205:3;9226:67;9290:2;9285:3;9226:67;:::i;:::-;9219:74;;9302:93;9391:3;9302:93;:::i;:::-;9420:2;9415:3;9411:12;9404:19;;9063:366;;;:::o;9435:::-;9577:3;9598:67;9662:2;9657:3;9598:67;:::i;:::-;9591:74;;9674:93;9763:3;9674:93;:::i;:::-;9792:2;9787:3;9783:12;9776:19;;9435:366;;;:::o;9807:::-;9949:3;9970:67;10034:2;10029:3;9970:67;:::i;:::-;9963:74;;10046:93;10135:3;10046:93;:::i;:::-;10164:2;10159:3;10155:12;10148:19;;9807:366;;;:::o;10179:::-;10321:3;10342:67;10406:2;10401:3;10342:67;:::i;:::-;10335:74;;10418:93;10507:3;10418:93;:::i;:::-;10536:2;10531:3;10527:12;10520:19;;10179:366;;;:::o;10551:::-;10693:3;10714:67;10778:2;10773:3;10714:67;:::i;:::-;10707:74;;10790:93;10879:3;10790:93;:::i;:::-;10908:2;10903:3;10899:12;10892:19;;10551:366;;;:::o;10923:::-;11065:3;11086:67;11150:2;11145:3;11086:67;:::i;:::-;11079:74;;11162:93;11251:3;11162:93;:::i;:::-;11280:2;11275:3;11271:12;11264:19;;10923:366;;;:::o;11295:::-;11437:3;11458:67;11522:2;11517:3;11458:67;:::i;:::-;11451:74;;11534:93;11623:3;11534:93;:::i;:::-;11652:2;11647:3;11643:12;11636:19;;11295:366;;;:::o;11667:::-;11809:3;11830:67;11894:2;11889:3;11830:67;:::i;:::-;11823:74;;11906:93;11995:3;11906:93;:::i;:::-;12024:2;12019:3;12015:12;12008:19;;11667:366;;;:::o;12039:108::-;12116:24;12134:5;12116:24;:::i;:::-;12111:3;12104:37;12039:108;;:::o;12153:118::-;12240:24;12258:5;12240:24;:::i;:::-;12235:3;12228:37;12153:118;;:::o;12277:222::-;12370:4;12408:2;12397:9;12393:18;12385:26;;12421:71;12489:1;12478:9;12474:17;12465:6;12421:71;:::i;:::-;12277:222;;;;:::o;12505:442::-;12654:4;12692:2;12681:9;12677:18;12669:26;;12705:71;12773:1;12762:9;12758:17;12749:6;12705:71;:::i;:::-;12786:72;12854:2;12843:9;12839:18;12830:6;12786:72;:::i;:::-;12868;12936:2;12925:9;12921:18;12912:6;12868:72;:::i;:::-;12505:442;;;;;;:::o;12953:332::-;13074:4;13112:2;13101:9;13097:18;13089:26;;13125:71;13193:1;13182:9;13178:17;13169:6;13125:71;:::i;:::-;13206:72;13274:2;13263:9;13259:18;13250:6;13206:72;:::i;:::-;12953:332;;;;;:::o;13291:373::-;13434:4;13472:2;13461:9;13457:18;13449:26;;13521:9;13515:4;13511:20;13507:1;13496:9;13492:17;13485:47;13549:108;13652:4;13643:6;13549:108;:::i;:::-;13541:116;;13291:373;;;;:::o;13670:218::-;13761:4;13799:2;13788:9;13784:18;13776:26;;13812:69;13878:1;13867:9;13863:17;13854:6;13812:69;:::i;:::-;13670:218;;;;:::o;13894:250::-;14001:4;14039:2;14028:9;14024:18;14016:26;;14052:85;14134:1;14123:9;14119:17;14110:6;14052:85;:::i;:::-;13894:250;;;;:::o;14150:585::-;14343:4;14381:3;14370:9;14366:19;14358:27;;14395:87;14479:1;14468:9;14464:17;14455:6;14395:87;:::i;:::-;14492:72;14560:2;14549:9;14545:18;14536:6;14492:72;:::i;:::-;14574;14642:2;14631:9;14627:18;14618:6;14574:72;:::i;:::-;14656;14724:2;14713:9;14709:18;14700:6;14656:72;:::i;:::-;14150:585;;;;;;;:::o;14741:264::-;14855:4;14893:2;14882:9;14878:18;14870:26;;14906:92;14995:1;14984:9;14980:17;14971:6;14906:92;:::i;:::-;14741:264;;;;:::o;15011:268::-;15127:4;15165:2;15154:9;15150:18;15142:26;;15178:94;15269:1;15258:9;15254:17;15245:6;15178:94;:::i;:::-;15011:268;;;;:::o;15285:313::-;15398:4;15436:2;15425:9;15421:18;15413:26;;15485:9;15479:4;15475:20;15471:1;15460:9;15456:17;15449:47;15513:78;15586:4;15577:6;15513:78;:::i;:::-;15505:86;;15285:313;;;;:::o;15604:419::-;15770:4;15808:2;15797:9;15793:18;15785:26;;15857:9;15851:4;15847:20;15843:1;15832:9;15828:17;15821:47;15885:131;16011:4;15885:131;:::i;:::-;15877:139;;15604:419;;;:::o;16029:::-;16195:4;16233:2;16222:9;16218:18;16210:26;;16282:9;16276:4;16272:20;16268:1;16257:9;16253:17;16246:47;16310:131;16436:4;16310:131;:::i;:::-;16302:139;;16029:419;;;:::o;16454:::-;16620:4;16658:2;16647:9;16643:18;16635:26;;16707:9;16701:4;16697:20;16693:1;16682:9;16678:17;16671:47;16735:131;16861:4;16735:131;:::i;:::-;16727:139;;16454:419;;;:::o;16879:::-;17045:4;17083:2;17072:9;17068:18;17060:26;;17132:9;17126:4;17122:20;17118:1;17107:9;17103:17;17096:47;17160:131;17286:4;17160:131;:::i;:::-;17152:139;;16879:419;;;:::o;17304:::-;17470:4;17508:2;17497:9;17493:18;17485:26;;17557:9;17551:4;17547:20;17543:1;17532:9;17528:17;17521:47;17585:131;17711:4;17585:131;:::i;:::-;17577:139;;17304:419;;;:::o;17729:::-;17895:4;17933:2;17922:9;17918:18;17910:26;;17982:9;17976:4;17972:20;17968:1;17957:9;17953:17;17946:47;18010:131;18136:4;18010:131;:::i;:::-;18002:139;;17729:419;;;:::o;18154:::-;18320:4;18358:2;18347:9;18343:18;18335:26;;18407:9;18401:4;18397:20;18393:1;18382:9;18378:17;18371:47;18435:131;18561:4;18435:131;:::i;:::-;18427:139;;18154:419;;;:::o;18579:::-;18745:4;18783:2;18772:9;18768:18;18760:26;;18832:9;18826:4;18822:20;18818:1;18807:9;18803:17;18796:47;18860:131;18986:4;18860:131;:::i;:::-;18852:139;;18579:419;;;:::o;19004:222::-;19097:4;19135:2;19124:9;19120:18;19112:26;;19148:71;19216:1;19205:9;19201:17;19192:6;19148:71;:::i;:::-;19004:222;;;;:::o;19232:332::-;19353:4;19391:2;19380:9;19376:18;19368:26;;19404:71;19472:1;19461:9;19457:17;19448:6;19404:71;:::i;:::-;19485:72;19553:2;19542:9;19538:18;19529:6;19485:72;:::i;:::-;19232:332;;;;;:::o;19570:::-;19691:4;19729:2;19718:9;19714:18;19706:26;;19742:71;19810:1;19799:9;19795:17;19786:6;19742:71;:::i;:::-;19823:72;19891:2;19880:9;19876:18;19867:6;19823:72;:::i;:::-;19570:332;;;;;:::o;19908:129::-;19942:6;19969:20;;:::i;:::-;19959:30;;19998:33;20026:4;20018:6;19998:33;:::i;:::-;19908:129;;;:::o;20043:75::-;20076:6;20109:2;20103:9;20093:19;;20043:75;:::o;20124:307::-;20185:4;20275:18;20267:6;20264:30;20261:56;;;20297:18;;:::i;:::-;20261:56;20335:29;20357:6;20335:29;:::i;:::-;20327:37;;20419:4;20413;20409:15;20401:23;;20124:307;;;:::o;20437:132::-;20504:4;20527:3;20519:11;;20557:4;20552:3;20548:14;20540:22;;20437:132;;;:::o;20575:114::-;20642:6;20676:5;20670:12;20660:22;;20575:114;;;:::o;20695:99::-;20747:6;20781:5;20775:12;20765:22;;20695:99;;;:::o;20800:113::-;20870:4;20902;20897:3;20893:14;20885:22;;20800:113;;;:::o;20919:184::-;21018:11;21052:6;21047:3;21040:19;21092:4;21087:3;21083:14;21068:29;;20919:184;;;;:::o;21109:169::-;21193:11;21227:6;21222:3;21215:19;21267:4;21262:3;21258:14;21243:29;;21109:169;;;;:::o;21284:305::-;21324:3;21343:20;21361:1;21343:20;:::i;:::-;21338:25;;21377:20;21395:1;21377:20;:::i;:::-;21372:25;;21531:1;21463:66;21459:74;21456:1;21453:81;21450:107;;;21537:18;;:::i;:::-;21450:107;21581:1;21578;21574:9;21567:16;;21284:305;;;;:::o;21595:185::-;21635:1;21652:20;21670:1;21652:20;:::i;:::-;21647:25;;21686:20;21704:1;21686:20;:::i;:::-;21681:25;;21725:1;21715:35;;21730:18;;:::i;:::-;21715:35;21772:1;21769;21765:9;21760:14;;21595:185;;;;:::o;21786:348::-;21826:7;21849:20;21867:1;21849:20;:::i;:::-;21844:25;;21883:20;21901:1;21883:20;:::i;:::-;21878:25;;22071:1;22003:66;21999:74;21996:1;21993:81;21988:1;21981:9;21974:17;21970:105;21967:131;;;22078:18;;:::i;:::-;21967:131;22126:1;22123;22119:9;22108:20;;21786:348;;;;:::o;22140:191::-;22180:4;22200:20;22218:1;22200:20;:::i;:::-;22195:25;;22234:20;22252:1;22234:20;:::i;:::-;22229:25;;22273:1;22270;22267:8;22264:34;;;22278:18;;:::i;:::-;22264:34;22323:1;22320;22316:9;22308:17;;22140:191;;;;:::o;22337:96::-;22374:7;22403:24;22421:5;22403:24;:::i;:::-;22392:35;;22337:96;;;:::o;22439:90::-;22473:7;22516:5;22509:13;22502:21;22491:32;;22439:90;;;:::o;22535:149::-;22571:7;22611:66;22604:5;22600:78;22589:89;;22535:149;;;:::o;22690:112::-;22743:7;22772:24;22790:5;22772:24;:::i;:::-;22761:35;;22690:112;;;:::o;22808:117::-;22866:7;22895:24;22913:5;22895:24;:::i;:::-;22884:35;;22808:117;;;:::o;22931:126::-;22968:7;23008:42;23001:5;22997:54;22986:65;;22931:126;;;:::o;23063:77::-;23100:7;23129:5;23118:16;;23063:77;;;:::o;23146:140::-;23210:9;23243:37;23274:5;23243:37;:::i;:::-;23230:50;;23146:140;;;:::o;23292:142::-;23358:9;23391:37;23422:5;23391:37;:::i;:::-;23378:50;;23292:142;;;:::o;23440:147::-;23511:9;23544:37;23575:5;23544:37;:::i;:::-;23531:50;;23440:147;;;:::o;23593:149::-;23666:9;23699:37;23730:5;23699:37;:::i;:::-;23686:50;;23593:149;;;:::o;23748:126::-;23798:9;23831:37;23862:5;23831:37;:::i;:::-;23818:50;;23748:126;;;:::o;23880:113::-;23930:9;23963:24;23981:5;23963:24;:::i;:::-;23950:37;;23880:113;;;:::o;23999:154::-;24083:6;24078:3;24073;24060:30;24145:1;24136:6;24131:3;24127:16;24120:27;23999:154;;;:::o;24159:307::-;24227:1;24237:113;24251:6;24248:1;24245:13;24237:113;;;24336:1;24331:3;24327:11;24321:18;24317:1;24312:3;24308:11;24301:39;24273:2;24270:1;24266:10;24261:15;;24237:113;;;24368:6;24365:1;24362:13;24359:101;;;24448:1;24439:6;24434:3;24430:16;24423:27;24359:101;24208:258;24159:307;;;:::o;24472:281::-;24555:27;24577:4;24555:27;:::i;:::-;24547:6;24543:40;24685:6;24673:10;24670:22;24649:18;24637:10;24634:34;24631:62;24628:88;;;24696:18;;:::i;:::-;24628:88;24736:10;24732:2;24725:22;24515:238;24472:281;;:::o;24759:233::-;24798:3;24821:24;24839:5;24821:24;:::i;:::-;24812:33;;24867:66;24860:5;24857:77;24854:103;;;24937:18;;:::i;:::-;24854:103;24984:1;24977:5;24973:13;24966:20;;24759:233;;;:::o;24998:180::-;25046:77;25043:1;25036:88;25143:4;25140:1;25133:15;25167:4;25164:1;25157:15;25184:180;25232:77;25229:1;25222:88;25329:4;25326:1;25319:15;25353:4;25350:1;25343:15;25370:180;25418:77;25415:1;25408:88;25515:4;25512:1;25505:15;25539:4;25536:1;25529:15;25556:180;25604:77;25601:1;25594:88;25701:4;25698:1;25691:15;25725:4;25722:1;25715:15;25742:117;25851:1;25848;25841:12;25865:117;25974:1;25971;25964:12;25988:117;26097:1;26094;26087:12;26111:117;26220:1;26217;26210:12;26234:102;26275:6;26326:2;26322:7;26317:2;26310:5;26306:14;26302:28;26292:38;;26234:102;;;:::o;26342:225::-;26482:34;26478:1;26470:6;26466:14;26459:58;26551:8;26546:2;26538:6;26534:15;26527:33;26342:225;:::o;26573:177::-;26713:29;26709:1;26701:6;26697:14;26690:53;26573:177;:::o;26756:179::-;26896:31;26892:1;26884:6;26880:14;26873:55;26756:179;:::o;26941:164::-;27081:16;27077:1;27069:6;27065:14;27058:40;26941:164;:::o;27111:220::-;27251:34;27247:1;27239:6;27235:14;27228:58;27320:3;27315:2;27307:6;27303:15;27296:28;27111:220;:::o;27337:182::-;27477:34;27473:1;27465:6;27461:14;27454:58;27337:182;:::o;27525:170::-;27665:22;27661:1;27653:6;27649:14;27642:46;27525:170;:::o;27701:168::-;27841:20;27837:1;27829:6;27825:14;27818:44;27701:168;:::o;27875:122::-;27948:24;27966:5;27948:24;:::i;:::-;27941:5;27938:35;27928:63;;27987:1;27984;27977:12;27928:63;27875:122;:::o;28003:116::-;28073:21;28088:5;28073:21;:::i;:::-;28066:5;28063:32;28053:60;;28109:1;28106;28099:12;28053:60;28003:116;:::o;28125:154::-;28214:40;28248:5;28214:40;:::i;:::-;28207:5;28204:51;28194:79;;28269:1;28266;28259:12;28194:79;28125:154;:::o;28285:164::-;28379:45;28418:5;28379:45;:::i;:::-;28372:5;28369:56;28359:84;;28439:1;28436;28429:12;28359:84;28285:164;:::o;28455:122::-;28528:24;28546:5;28528:24;:::i;:::-;28521:5;28518:35;28508:63;;28567:1;28564;28557:12;28508:63;28455:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2518200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2474",
								"DDT()": "2645",
								"DDTPerBlock()": "2539",
								"NFTMasterChef()": "2666",
								"add(uint256,address,bool)": "infinite",
								"compundDDT(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"devaddr()": "2603",
								"getMultiplier(uint256,uint256)": "infinite",
								"getUserTokenIds(uint256,address)": "infinite",
								"massUpdatePools()": "infinite",
								"migrator()": "2690",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2589",
								"pendingDDT(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"renounceOwnership()": "30442",
								"set(uint256,uint256,bool)": "infinite",
								"setDevAddress(address)": "27029",
								"setMigrator(address)": "27051",
								"startBlock()": "2519",
								"totalAllocPoint()": "2497",
								"transferOwnership(address)": "30811",
								"updateDDTPerBlock(uint256)": "24849",
								"updateMultiplier(uint256)": "24827",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"safeDDTTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28014,
									"end": 38579,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 29680,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29645,
									"end": 29680,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 29645,
									"end": 29680,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30120,
									"end": 30121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30087,
									"end": 30121,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 30087,
									"end": 30121,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30685,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30675,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30675,
									"end": 30685,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30712,
									"end": 30726,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30709,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30696,
									"end": 30709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30726,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30747,
									"end": 30755,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30744,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30737,
									"end": 30744,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30737,
									"end": 30755,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30780,
									"end": 30792,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30766,
									"end": 30777,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30766,
									"end": 30792,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30766,
									"end": 30792,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30766,
									"end": 30792,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30766,
									"end": 30792,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30816,
									"end": 30827,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30803,
									"end": 30813,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 30803,
									"end": 30827,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30803,
									"end": 30827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30803,
									"end": 30827,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30803,
									"end": 30827,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30495,
									"end": 30835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19602,
									"end": 19609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19629,
									"end": 19639,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19622,
									"end": 19639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19622,
									"end": 19639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21535,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21564,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21561,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21555,
									"end": 21561,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21619,
									"end": 21627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21609,
									"end": 21617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21508,
									"end": 21636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 156,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 264,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 252,
									"end": 265,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 243,
									"end": 265,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 243,
									"end": 265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 274,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 315,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 274,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 274,
									"end": 321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 327,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 522,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 333,
									"end": 522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 413,
									"end": 418,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 444,
									"end": 450,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 438,
									"end": 451,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 429,
									"end": 451,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 429,
									"end": 451,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 460,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 510,
									"end": 515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 460,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 460,
									"end": 516,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 516,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 460,
									"end": 516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 333,
									"end": 522,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 333,
									"end": 522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 522,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 528,
									"end": 671,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 528,
									"end": 671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 585,
									"end": 590,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 623,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 601,
									"end": 623,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 601,
									"end": 623,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 632,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 632,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 632,
									"end": 665,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 632,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 632,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 671,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 528,
									"end": 671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 528,
									"end": 671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 528,
									"end": 671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 528,
									"end": 671,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 820,
									"end": 826,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 834,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 836,
									"end": 842,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 850,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 852,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 901,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 889,
									"end": 898,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 880,
									"end": 887,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 876,
									"end": 899,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 872,
									"end": 905,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 869,
									"end": 989,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 869,
									"end": 989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 869,
									"end": 989,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 908,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 908,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 908,
									"end": 987,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 908,
									"end": 987,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 908,
									"end": 987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 869,
									"end": 989,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 869,
									"end": 989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1029,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1120,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1103,
									"end": 1112,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1121,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1053,
									"end": 1131,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1053,
									"end": 1131,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1053,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1131,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1131,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1141,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1206,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1285,
									"end": 1292,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1282,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1265,
									"end": 1274,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1283,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1206,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1206,
									"end": 1293,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1206,
									"end": 1293,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1206,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1293,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1368,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1424,
									"end": 1431,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1404,
									"end": 1413,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1400,
									"end": 1422,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1368,
									"end": 1432,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1368,
									"end": 1432,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1368,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1432,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1432,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1442,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1483,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1507,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1563,
									"end": 1570,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1543,
									"end": 1552,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1539,
									"end": 1561,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1507,
									"end": 1571,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1507,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1507,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1571,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1620,
									"end": 1623,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1703,
									"end": 1710,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1700,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 677,
									"end": 1728,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1815,
									"end": 1911,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1815,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1852,
									"end": 1859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1881,
									"end": 1905,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1899,
									"end": 1904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1881,
									"end": 1905,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1881,
									"end": 1905,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1881,
									"end": 1905,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1881,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1905,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1911,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1911,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1911,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1917,
									"end": 2027,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1917,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1975,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2015,
									"end": 2020,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1986,
									"end": 2021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1986,
									"end": 2021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 2027,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 2027,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 2027,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 2027,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2033,
									"end": 2152,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2033,
									"end": 2152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2100,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2146,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2140,
									"end": 2145,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2122,
									"end": 2146,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2122,
									"end": 2146,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2122,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2122,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2152,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2152,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2152,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2158,
									"end": 2284,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2158,
									"end": 2284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2195,
									"end": 2202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2235,
									"end": 2277,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2228,
									"end": 2233,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2224,
									"end": 2278,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2278,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2278,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2284,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2284,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2284,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2284,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2290,
									"end": 2367,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2290,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2327,
									"end": 2334,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2356,
									"end": 2361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2345,
									"end": 2361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2345,
									"end": 2361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2290,
									"end": 2367,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2290,
									"end": 2367,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2290,
									"end": 2367,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2290,
									"end": 2367,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2496,
									"end": 2613,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2496,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2605,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2602,
									"end": 2603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2595,
									"end": 2607,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2619,
									"end": 2741,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2619,
									"end": 2741,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2716,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2710,
									"end": 2715,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2716,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2692,
									"end": 2716,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2692,
									"end": 2716,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2692,
									"end": 2716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2682,
									"end": 2717,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2672,
									"end": 2735,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2732,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2728,
									"end": 2729,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2733,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2735,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2672,
									"end": 2735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2619,
									"end": 2741,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2619,
									"end": 2741,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2747,
									"end": 2897,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2747,
									"end": 2897,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2872,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2866,
									"end": 2871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2872,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2834,
									"end": 2872,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2834,
									"end": 2872,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2834,
									"end": 2872,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2827,
									"end": 2832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2824,
									"end": 2873,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2888,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2884,
									"end": 2885,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2877,
									"end": 2889,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2747,
									"end": 2897,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2747,
									"end": 2897,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2903,
									"end": 3071,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2903,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2999,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2999,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2999,
									"end": 3046,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2999,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2999,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2992,
									"end": 2997,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2989,
									"end": 3047,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 3065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2979,
									"end": 3065,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3061,
									"end": 3062,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3058,
									"end": 3059,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3051,
									"end": 3063,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 3065,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2979,
									"end": 3065,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2903,
									"end": 3071,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2903,
									"end": 3071,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3150,
									"end": 3174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3168,
									"end": 3173,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3150,
									"end": 3174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3150,
									"end": 3174,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3150,
									"end": 3174,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3150,
									"end": 3174,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3143,
									"end": 3148,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3140,
									"end": 3175,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3130,
									"end": 3193,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3190,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3186,
									"end": 3187,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3191,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3193,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3130,
									"end": 3193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28014,
									"end": 38579,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3dea4542ced338333472fb0239f84d253cec108f8ace45e31652f01f1b2719764736f6c63430008070033",
									".code": [
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "E4D09896"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "F395DB2C"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "D0D41FE1"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "D49E77CD"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "D5545992"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "612EEE43"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "2080BAAB"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "1395D8C9"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 38579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31277,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31304,
											"end": 31312,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31304,
											"end": 31319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31304,
											"end": 31319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31304,
											"end": 31319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31304,
											"end": 31319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31327,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37452,
											"end": 37473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37476,
											"end": 37484,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37485,
											"end": 37489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37452,
											"end": 37490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37452,
											"end": 37490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37501,
											"end": 37522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37525,
											"end": 37533,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37534,
											"end": 37538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37525,
											"end": 37539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37540,
											"end": 37550,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37525,
											"end": 37551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37501,
											"end": 37551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37501,
											"end": 37551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37562,
											"end": 37578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 37573,
											"end": 37577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37562,
											"end": 37572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37562,
											"end": 37578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37562,
											"end": 37578,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 37562,
											"end": 37578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 37658,
											"end": 37662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37658,
											"end": 37673,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37658,
											"end": 37673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37658,
											"end": 37673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 37648,
											"end": 37652,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 37623,
											"end": 37627,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37623,
											"end": 37642,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37623,
											"end": 37642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37623,
											"end": 37642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37611,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37607,
											"end": 37618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37607,
											"end": 37622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 37607,
											"end": 37643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37607,
											"end": 37647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 37607,
											"end": 37653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 37607,
											"end": 37657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 37607,
											"end": 37674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37703,
											"end": 37704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37693,
											"end": 37700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37704,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37685,
											"end": 37723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37734,
											"end": 37737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37734,
											"end": 37745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37745,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37754,
											"end": 37767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37777,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37734,
											"end": 37778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37789,
											"end": 37822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37822,
											"name": "PUSH",
											"source": 0,
											"value": "CF35FDDF"
										},
										{
											"begin": 37823,
											"end": 37830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37832,
											"end": 37842,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 37913,
											"end": 37917,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 37888,
											"end": 37892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37888,
											"end": 37907,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37888,
											"end": 37907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37888,
											"end": 37907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37876,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37872,
											"end": 37883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37872,
											"end": 37887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 37872,
											"end": 37908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37872,
											"end": 37912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 37872,
											"end": 37918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37854,
											"end": 37858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37854,
											"end": 37869,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37854,
											"end": 37869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37854,
											"end": 37918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37854,
											"end": 37918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37854,
											"end": 37918,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37854,
											"end": 37918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37955,
											"end": 37959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37943,
											"end": 37953,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 37961,
											"end": 37968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37934,
											"end": 37969,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37400,
											"end": 37977,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31055,
											"end": 31085,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 31055,
											"end": 31085,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31055,
											"end": 31085,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31048,
											"end": 31085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31048,
											"end": 31085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30929,
											"end": 31093,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29846,
											"end": 29872,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30087,
											"end": 30121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31601,
											"end": 31612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31597,
											"end": 31658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31597,
											"end": 31658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 31597,
											"end": 31658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31629,
											"end": 31646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 31629,
											"end": 31644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31629,
											"end": 31646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31629,
											"end": 31646,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 31629,
											"end": 31646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31597,
											"end": 31658,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 31597,
											"end": 31658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31709,
											"end": 31719,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31709,
											"end": 31719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31706,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31719,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31747,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31737,
											"end": 31747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31722,
											"end": 31734,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 31694,
											"end": 31747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 31796,
											"end": 31807,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31776,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31776,
											"end": 31791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31776,
											"end": 31795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 31776,
											"end": 31795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 31776,
											"end": 31808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31758,
											"end": 31773,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31758,
											"end": 31808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31758,
											"end": 31808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31758,
											"end": 31808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31758,
											"end": 31808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31827,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31885,
											"end": 31894,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31925,
											"end": 31936,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32022,
											"end": 32023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 32039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 32050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31586,
											"end": 32058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 32058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33187,
											"end": 33194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33206,
											"end": 33227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33238,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33239,
											"end": 33243,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33230,
											"end": 33244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33206,
											"end": 33244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33206,
											"end": 33244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33255,
											"end": 33276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33279,
											"end": 33287,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33288,
											"end": 33292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33279,
											"end": 33293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33294,
											"end": 33299,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33279,
											"end": 33300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33255,
											"end": 33300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33255,
											"end": 33300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33311,
											"end": 33333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33336,
											"end": 33340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33355,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33336,
											"end": 33355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33311,
											"end": 33355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33311,
											"end": 33355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33366,
											"end": 33383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33386,
											"end": 33390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33386,
											"end": 33399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33386,
											"end": 33409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33409,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33418,
											"end": 33422,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33386,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33366,
											"end": 33424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33366,
											"end": 33424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33454,
											"end": 33458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33454,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33454,
											"end": 33474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33454,
											"end": 33474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33439,
											"end": 33451,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33439,
											"end": 33474,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33439,
											"end": 33492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33439,
											"end": 33492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33439,
											"end": 33492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 33439,
											"end": 33492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33439,
											"end": 33492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33491,
											"end": 33492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33478,
											"end": 33487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33478,
											"end": 33492,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33478,
											"end": 33492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33439,
											"end": 33492,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 33439,
											"end": 33492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33435,
											"end": 33781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33435,
											"end": 33781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 33435,
											"end": 33781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33509,
											"end": 33527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33530,
											"end": 33579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33544,
											"end": 33548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33544,
											"end": 33564,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33544,
											"end": 33564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33544,
											"end": 33564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33566,
											"end": 33578,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33530,
											"end": 33543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 33530,
											"end": 33579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33530,
											"end": 33579,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33530,
											"end": 33579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33509,
											"end": 33579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33509,
											"end": 33579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33594,
											"end": 33611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 33667,
											"end": 33682,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33667,
											"end": 33682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 33646,
											"end": 33650,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33646,
											"end": 33661,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33646,
											"end": 33661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33646,
											"end": 33661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 33629,
											"end": 33640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33629,
											"end": 33640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33624,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33614,
											"end": 33628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 33614,
											"end": 33641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33614,
											"end": 33645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 33614,
											"end": 33662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33614,
											"end": 33666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 33614,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33594,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33594,
											"end": 33683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 33758,
											"end": 33767,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 33748,
											"end": 33752,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33734,
											"end": 33743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33734,
											"end": 33747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 33734,
											"end": 33753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33734,
											"end": 33757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 33734,
											"end": 33768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33729,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 33715,
											"end": 33733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 33715,
											"end": 33769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33698,
											"end": 33769,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33698,
											"end": 33769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33494,
											"end": 33781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33494,
											"end": 33781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33435,
											"end": 33781,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 33435,
											"end": 33781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 33844,
											"end": 33848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33844,
											"end": 33859,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33844,
											"end": 33859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33844,
											"end": 33859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 33834,
											"end": 33838,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 33814,
											"end": 33828,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33802,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33809,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33798,
											"end": 33809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33798,
											"end": 33813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 33798,
											"end": 33829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33798,
											"end": 33833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 33798,
											"end": 33839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 33798,
											"end": 33843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 33798,
											"end": 33860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33860,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33115,
											"end": 33868,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32616,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32608,
											"end": 32616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32534,
											"end": 32636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35922,
											"end": 35943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35946,
											"end": 35954,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35955,
											"end": 35959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35946,
											"end": 35960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35922,
											"end": 35960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35922,
											"end": 35960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35971,
											"end": 35992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35995,
											"end": 36003,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36004,
											"end": 36008,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35995,
											"end": 36009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36010,
											"end": 36020,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35995,
											"end": 36021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35971,
											"end": 36021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35971,
											"end": 36021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36056,
											"end": 36057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36042,
											"end": 36046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36042,
											"end": 36053,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36042,
											"end": 36053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36042,
											"end": 36053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36042,
											"end": 36057,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36034,
											"end": 36080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36093,
											"end": 36108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36134,
											"end": 36135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36122,
											"end": 36130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36122,
											"end": 36135,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36151,
											"end": 36167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 36162,
											"end": 36166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36151,
											"end": 36161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36151,
											"end": 36167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36151,
											"end": 36167,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 36151,
											"end": 36167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36243,
											"end": 36247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36258,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36243,
											"end": 36258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36243,
											"end": 36258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36233,
											"end": 36237,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 36208,
											"end": 36212,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36227,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36208,
											"end": 36227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36196,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36203,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36192,
											"end": 36203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36192,
											"end": 36207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 36192,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36192,
											"end": 36232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36192,
											"end": 36238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36192,
											"end": 36242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36192,
											"end": 36259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36182,
											"end": 36259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36182,
											"end": 36259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36287,
											"end": 36288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36277,
											"end": 36284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36277,
											"end": 36288,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36274,
											"end": 36360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36274,
											"end": 36360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 36274,
											"end": 36360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36308,
											"end": 36344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 36324,
											"end": 36334,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36336,
											"end": 36343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36308,
											"end": 36323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36308,
											"end": 36344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36308,
											"end": 36344,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 36308,
											"end": 36344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36274,
											"end": 36360,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 36274,
											"end": 36360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 36433,
											"end": 36437,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 36408,
											"end": 36412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36427,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36408,
											"end": 36427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36396,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36392,
											"end": 36403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36392,
											"end": 36407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 36392,
											"end": 36428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36392,
											"end": 36432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 36392,
											"end": 36438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36389,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36374,
											"end": 36389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36470,
											"end": 36488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36507,
											"end": 36527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36546,
											"end": 36555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36559,
											"end": 36563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36559,
											"end": 36572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36559,
											"end": 36572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36557,
											"end": 36558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36557,
											"end": 36579,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36635,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36611,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36607,
											"end": 36620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36604,
											"end": 36732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36604,
											"end": 36732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 36604,
											"end": 36732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36673,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36659,
											"end": 36673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36659,
											"end": 36673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36711,
											"end": 36712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36696,
											"end": 36712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36696,
											"end": 36712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36604,
											"end": 36732,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 36604,
											"end": 36732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36542,
											"end": 36747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36783,
											"end": 36784,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36769,
											"end": 36779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36769,
											"end": 36784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 36761,
											"end": 36818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36847,
											"end": 36863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 36858,
											"end": 36862,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36847,
											"end": 36857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36847,
											"end": 36863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36847,
											"end": 36863,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 36847,
											"end": 36863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 36939,
											"end": 36943,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 36954,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36939,
											"end": 36954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 36954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 36929,
											"end": 36933,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 36904,
											"end": 36908,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36904,
											"end": 36923,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36904,
											"end": 36923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36904,
											"end": 36923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36892,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36888,
											"end": 36899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36888,
											"end": 36903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 36888,
											"end": 36924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36888,
											"end": 36928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 36888,
											"end": 36934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36888,
											"end": 36938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 36888,
											"end": 36955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36983,
											"end": 36984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36973,
											"end": 36980,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36973,
											"end": 36984,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36970,
											"end": 37056,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36970,
											"end": 37056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36970,
											"end": 37056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37004,
											"end": 37040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 37020,
											"end": 37030,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37032,
											"end": 37039,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37004,
											"end": 37019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 37004,
											"end": 37040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37004,
											"end": 37040,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 37004,
											"end": 37040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36970,
											"end": 37056,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36970,
											"end": 37056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 37100,
											"end": 37101,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37084,
											"end": 37088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37084,
											"end": 37095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 37084,
											"end": 37099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 37084,
											"end": 37102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37070,
											"end": 37074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37070,
											"end": 37081,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37070,
											"end": 37081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37070,
											"end": 37102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37070,
											"end": 37102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37070,
											"end": 37102,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37070,
											"end": 37102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 37176,
											"end": 37180,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37151,
											"end": 37155,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37170,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37151,
											"end": 37170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37139,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37135,
											"end": 37146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37135,
											"end": 37150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37135,
											"end": 37171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37135,
											"end": 37175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 37135,
											"end": 37181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37117,
											"end": 37121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37117,
											"end": 37132,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37117,
											"end": 37132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37117,
											"end": 37181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37117,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37117,
											"end": 37181,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37117,
											"end": 37181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37203,
											"end": 37216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37217,
											"end": 37229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37203,
											"end": 37230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37196,
											"end": 37230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37196,
											"end": 37230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37196,
											"end": 37230,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37249,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37245,
											"end": 37258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37245,
											"end": 37275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37275,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 37284,
											"end": 37288,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37299,
											"end": 37309,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37312,
											"end": 37320,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37245,
											"end": 37321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 37333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 37333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 36119,
											"end": 37333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37369,
											"end": 37373,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37357,
											"end": 37367,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 37375,
											"end": 37383,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37348,
											"end": 37384,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35911,
											"end": 37392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35911,
											"end": 37392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35911,
											"end": 37392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35854,
											"end": 37392,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30177,
											"end": 30202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34283,
											"end": 34291,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34292,
											"end": 34296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34328,
											"end": 34332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34328,
											"end": 34348,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34328,
											"end": 34348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34328,
											"end": 34348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34312,
											"end": 34324,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34312,
											"end": 34348,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34308,
											"end": 34383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 34308,
											"end": 34383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34365,
											"end": 34372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34365,
											"end": 34372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34365,
											"end": 34372,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34308,
											"end": 34383,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 34308,
											"end": 34383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34393,
											"end": 34410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34413,
											"end": 34417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34413,
											"end": 34426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34413,
											"end": 34436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34436,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34445,
											"end": 34449,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 34413,
											"end": 34451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34393,
											"end": 34451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34393,
											"end": 34451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34479,
											"end": 34480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34466,
											"end": 34475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34480,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34462,
											"end": 34565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 34462,
											"end": 34565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34520,
											"end": 34532,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34497,
											"end": 34501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34497,
											"end": 34517,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34497,
											"end": 34517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34497,
											"end": 34532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34497,
											"end": 34532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34497,
											"end": 34532,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34497,
											"end": 34532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34547,
											"end": 34554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34547,
											"end": 34554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34547,
											"end": 34554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34547,
											"end": 34554,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34462,
											"end": 34565,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 34462,
											"end": 34565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34575,
											"end": 34593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34596,
											"end": 34645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 34610,
											"end": 34614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34610,
											"end": 34630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34610,
											"end": 34630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34610,
											"end": 34630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34632,
											"end": 34644,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34596,
											"end": 34609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34596,
											"end": 34645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34596,
											"end": 34645,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 34596,
											"end": 34645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34575,
											"end": 34645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34575,
											"end": 34645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34729,
											"end": 34744,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34729,
											"end": 34744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 34708,
											"end": 34712,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34708,
											"end": 34723,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34708,
											"end": 34723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34708,
											"end": 34723,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34691,
											"end": 34702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34691,
											"end": 34702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34686,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 34676,
											"end": 34690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34676,
											"end": 34703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 34676,
											"end": 34707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 34676,
											"end": 34724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 34676,
											"end": 34728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34676,
											"end": 34745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34756,
											"end": 34759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34756,
											"end": 34764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34764,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 34773,
											"end": 34777,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34780,
											"end": 34789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 34871,
											"end": 34880,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 34861,
											"end": 34865,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34847,
											"end": 34856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 34847,
											"end": 34860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 34847,
											"end": 34866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 34847,
											"end": 34870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 34847,
											"end": 34881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34827,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34842,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34823,
											"end": 34842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 34823,
											"end": 34846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 34823,
											"end": 34882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34820,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34801,
											"end": 34820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34882,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34916,
											"end": 34928,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34893,
											"end": 34897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34893,
											"end": 34913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34893,
											"end": 34913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34893,
											"end": 34928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34893,
											"end": 34928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34893,
											"end": 34928,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34893,
											"end": 34928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34248,
											"end": 34936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34248,
											"end": 34936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34248,
											"end": 34936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34248,
											"end": 34936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34207,
											"end": 34936,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31200,
											"end": 31216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31181,
											"end": 31197,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31181,
											"end": 31216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31181,
											"end": 31216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31181,
											"end": 31216,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31181,
											"end": 31216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31101,
											"end": 31224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38559,
											"end": 38568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38545,
											"end": 38556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38545,
											"end": 38568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38545,
											"end": 38568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38545,
											"end": 38568,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38545,
											"end": 38568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38471,
											"end": 38576,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33996,
											"end": 34010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34013,
											"end": 34021,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34013,
											"end": 34028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34013,
											"end": 34028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34013,
											"end": 34028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34013,
											"end": 34028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33996,
											"end": 34028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33996,
											"end": 34028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34044,
											"end": 34055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34067,
											"end": 34073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34097,
											"end": 34112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 34108,
											"end": 34111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34097,
											"end": 34107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 34097,
											"end": 34112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34097,
											"end": 34112,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 34097,
											"end": 34112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34075,
											"end": 34080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33985,
											"end": 34131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 32248,
											"end": 32309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 32280,
											"end": 32295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32280,
											"end": 32297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32280,
											"end": 32297,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 32280,
											"end": 32297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32309,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 32248,
											"end": 32309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 32388,
											"end": 32399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 32357,
											"end": 32365,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32366,
											"end": 32370,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32382,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32357,
											"end": 32382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32352,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32337,
											"end": 32352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32337,
											"end": 32356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 32337,
											"end": 32383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32337,
											"end": 32387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 32337,
											"end": 32400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32319,
											"end": 32334,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32319,
											"end": 32400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32319,
											"end": 32400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32319,
											"end": 32400,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32319,
											"end": 32400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32439,
											"end": 32450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32419,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32420,
											"end": 32424,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32436,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32411,
											"end": 32436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 20918,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29783,
											"end": 29812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20221,
											"end": 20228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32784,
											"end": 32791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 32831,
											"end": 32847,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32831,
											"end": 32847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 32820,
											"end": 32825,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32815,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32812,
											"end": 32819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 32812,
											"end": 32826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32812,
											"end": 32830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 32812,
											"end": 32848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32856,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29928,
											"end": 29992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29471,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38447,
											"end": 38455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38444,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38437,
											"end": 38444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38437,
											"end": 38455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38368,
											"end": 38463,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29521,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32939,
											"end": 32955,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32968,
											"end": 32989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 33000,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33001,
											"end": 33005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 33006,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33007,
											"end": 33012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 33013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33031,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32864,
											"end": 33052,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35092,
											"end": 35093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35080,
											"end": 35088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35080,
											"end": 35093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35080,
											"end": 35093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 35072,
											"end": 35118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35129,
											"end": 35150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35153,
											"end": 35161,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35162,
											"end": 35166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35153,
											"end": 35167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35129,
											"end": 35167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35129,
											"end": 35167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35178,
											"end": 35199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35202,
											"end": 35210,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35211,
											"end": 35215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35202,
											"end": 35216,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35217,
											"end": 35227,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35202,
											"end": 35228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35178,
											"end": 35228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35178,
											"end": 35228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 35255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 35250,
											"end": 35254,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 35249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 35239,
											"end": 35255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35239,
											"end": 35255,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 35239,
											"end": 35255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35270,
											"end": 35274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35270,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35270,
											"end": 35281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35270,
											"end": 35281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35270,
											"end": 35285,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35266,
											"end": 35499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35266,
											"end": 35499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 35266,
											"end": 35499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 35371,
											"end": 35375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35371,
											"end": 35386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35371,
											"end": 35386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35371,
											"end": 35386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 35361,
											"end": 35365,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 35336,
											"end": 35340,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35336,
											"end": 35355,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35336,
											"end": 35355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35336,
											"end": 35355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35324,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35331,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35320,
											"end": 35331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35320,
											"end": 35335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 35320,
											"end": 35356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 35320,
											"end": 35360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 35320,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 35320,
											"end": 35370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 35320,
											"end": 35387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35405,
											"end": 35412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35416,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35402,
											"end": 35488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35402,
											"end": 35488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 35402,
											"end": 35488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35436,
											"end": 35472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35452,
											"end": 35462,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35464,
											"end": 35471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35436,
											"end": 35451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 35436,
											"end": 35472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35436,
											"end": 35472,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35436,
											"end": 35472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35402,
											"end": 35488,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 35402,
											"end": 35488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35287,
											"end": 35499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35266,
											"end": 35499,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 35266,
											"end": 35499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35509,
											"end": 35522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35509,
											"end": 35539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35539,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 35548,
											"end": 35558,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35569,
											"end": 35573,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35584,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 35626,
											"end": 35627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35610,
											"end": 35614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35621,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35610,
											"end": 35621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35610,
											"end": 35625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 35610,
											"end": 35628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35596,
											"end": 35600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35596,
											"end": 35607,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35596,
											"end": 35607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35596,
											"end": 35628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35596,
											"end": 35628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35596,
											"end": 35628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35596,
											"end": 35628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 35698,
											"end": 35702,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 35673,
											"end": 35677,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35673,
											"end": 35692,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35673,
											"end": 35692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35673,
											"end": 35692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35661,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35657,
											"end": 35668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35657,
											"end": 35672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 35657,
											"end": 35693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 35657,
											"end": 35697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 35657,
											"end": 35703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35654,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35639,
											"end": 35654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35639,
											"end": 35703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35714,
											"end": 35727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35733,
											"end": 35741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35742,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35778,
											"end": 35782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35766,
											"end": 35776,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 35784,
											"end": 35792,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35793,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35005,
											"end": 35801,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29422,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 21165,
											"end": 21238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 21268,
											"end": 21276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 21249,
											"end": 21277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21249,
											"end": 21277,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 21249,
											"end": 21277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29592,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2231,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 2855,
											"end": 2856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 996,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19602,
											"end": 19609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19629,
											"end": 19639,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 455,
											"end": 636,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 455,
											"end": 636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 569,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 569,
											"end": 575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 569,
											"end": 575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38089,
											"end": 38360,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 38089,
											"end": 38360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38164,
											"end": 38178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38181,
											"end": 38184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38181,
											"end": 38194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38194,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 38203,
											"end": 38207,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 38181,
											"end": 38209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38164,
											"end": 38209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38164,
											"end": 38209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38234,
											"end": 38240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38224,
											"end": 38231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38224,
											"end": 38240,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38257,
											"end": 38260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38257,
											"end": 38269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 38270,
											"end": 38273,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38275,
											"end": 38281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38315,
											"end": 38318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38315,
											"end": 38327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38327,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 38328,
											"end": 38331,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38333,
											"end": 38340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38315,
											"end": 38341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 38220,
											"end": 38353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38153,
											"end": 38360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38089,
											"end": 38360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38089,
											"end": 38360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38089,
											"end": 38360,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21555,
											"end": 21561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21619,
											"end": 21627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 786,
											"end": 799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 777,
											"end": 799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 808,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 808,
											"end": 838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 808,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1201,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 863,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 918,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 960,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 948,
											"end": 965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 944,
											"end": 971,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 934,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 934,
											"end": 1056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 975,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 975,
											"end": 1054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 1054,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 975,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 934,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 934,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1099,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 1191,
											"end": 1194,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1174,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1117,
											"end": 1195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1117,
											"end": 1195,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 1117,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 863,
											"end": 1201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 863,
											"end": 1201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 863,
											"end": 1201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 863,
											"end": 1201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 863,
											"end": 1201,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1207,
											"end": 1378,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 1207,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1314,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 1366,
											"end": 1371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1384,
											"end": 1565,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 1384,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1496,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1571,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 1571,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1662,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 1671,
											"end": 1704,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1704,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 1671,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1710,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1716,
											"end": 1859,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 1716,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 1820,
											"end": 1853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1820,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 1820,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1859,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1865,
											"end": 2194,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1865,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1959,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1976,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 1941,
											"end": 2060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 1979,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 1979,
											"end": 2058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2058,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 1979,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 1941,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2158,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2124,
											"end": 2177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 2124,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 2194,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 2194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 2194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 2194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 2194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2910,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2955,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2956,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 3040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 2923,
											"end": 3040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 2959,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 2959,
											"end": 3038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 3038,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 2959,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 2923,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3107,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 3064,
											"end": 3126,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3126,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 3064,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 3136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 3143,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3149,
											"end": 3494,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3149,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3352,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 3233,
											"end": 3352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 3271,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 3233,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 3469,
											"end": 3476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3494,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3500,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3500,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3615,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3632,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 3597,
											"end": 3716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 3635,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 3635,
											"end": 3714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3635,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 3635,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3716,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 3597,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 3846,
											"end": 3853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3835,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 3780,
											"end": 3854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3780,
											"end": 3854,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 3780,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3877,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3877,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3988,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 3953,
											"end": 4072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4072,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 3953,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 4181,
											"end": 4188,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4170,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4136,
											"end": 4189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4136,
											"end": 4189,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 4136,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4212,
											"end": 4563,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4212,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4317,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4334,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 4482,
											"end": 4546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4546,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 4482,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4563,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4680,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4697,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4994,
											"end": 5016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 5043,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5190,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5202,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5207,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5291,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 5172,
											"end": 5291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5210,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 5210,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 5210,
											"end": 5289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5210,
											"end": 5289,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 5210,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5291,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 5172,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5355,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 5400,
											"end": 5407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5389,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 5355,
											"end": 5408,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5408,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 5355,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5408,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 5544,
											"end": 5551,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 5483,
											"end": 5552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5483,
											"end": 5552,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 5483,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5627,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 5669,
											"end": 5676,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5658,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5645,
											"end": 5667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 5627,
											"end": 5677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5627,
											"end": 5677,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 5627,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5827,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 5822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5828,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5912,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 5793,
											"end": 5912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 5831,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 5831,
											"end": 5910,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5831,
											"end": 5910,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 5831,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5912,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 5793,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5951,
											"end": 5952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 6021,
											"end": 6028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6010,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 5976,
											"end": 6029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5976,
											"end": 6029,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 5976,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 6029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 6029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5922,
											"end": 6039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 6149,
											"end": 6156,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6138,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6270,
											"end": 6276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6321,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6305,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6322,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6406,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 6287,
											"end": 6406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 6325,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 6325,
											"end": 6404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6325,
											"end": 6404,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 6325,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6406,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 6287,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 6515,
											"end": 6522,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 6512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 6470,
											"end": 6523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6470,
											"end": 6523,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 6470,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6460,
											"end": 6523,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6460,
											"end": 6523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6416,
											"end": 6533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6598,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 6643,
											"end": 6650,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6634,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6632,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 6598,
											"end": 6651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6598,
											"end": 6651,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 6598,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 6661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 6768,
											"end": 6775,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6726,
											"end": 6776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6726,
											"end": 6776,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 6726,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6793,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6799,
											"end": 6978,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 6799,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6868,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6929,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6889,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 6889,
											"end": 6935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6889,
											"end": 6935,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 6889,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 6971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6958,
											"end": 6972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6799,
											"end": 6978,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6799,
											"end": 6978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6799,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6799,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6799,
											"end": 6978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7102,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 6984,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 7071,
											"end": 7095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7071,
											"end": 7095,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 7071,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7066,
											"end": 7069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7102,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7138,
											"end": 7870,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 7138,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 7334,
											"end": 7339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 7286,
											"end": 7340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7286,
											"end": 7340,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 7286,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 7435,
											"end": 7441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 7356,
											"end": 7442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7356,
											"end": 7442,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 7356,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7442,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 7466,
											"end": 7522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7466,
											"end": 7522,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 7466,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7593,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7669,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 7748,
											"end": 7751,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 7689,
											"end": 7752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7689,
											"end": 7752,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 7689,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7752,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 7828,
											"end": 7834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7605,
											"end": 7606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7596,
											"end": 7610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7596,
											"end": 7610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 7561,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 7864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7854,
											"end": 7864,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7854,
											"end": 7864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7876,
											"end": 7991,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 7876,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 7978,
											"end": 7983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7991,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7997,
											"end": 8156,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 7997,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 8143,
											"end": 8148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 8098,
											"end": 8149,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8098,
											"end": 8149,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 8098,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8093,
											"end": 8096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8162,
											"end": 8325,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 8162,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8265,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 8312,
											"end": 8317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8265,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 8265,
											"end": 8318,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8265,
											"end": 8318,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 8265,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8331,
											"end": 8504,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 8331,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 8491,
											"end": 8496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 8439,
											"end": 8497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8439,
											"end": 8497,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 8439,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8510,
											"end": 8687,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 8510,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 8674,
											"end": 8679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 8620,
											"end": 8680,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8680,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 8620,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8510,
											"end": 8687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8510,
											"end": 8687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8510,
											"end": 8687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 9057,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 8693,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8809,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 8842,
											"end": 8847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 8809,
											"end": 8848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8809,
											"end": 8848,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 8809,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 8928,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8926,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 8864,
											"end": 8935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8864,
											"end": 8935,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 8864,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8935,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 8989,
											"end": 8995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8970,
											"end": 8975,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 8944,
											"end": 8996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8944,
											"end": 8996,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 8944,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 9043,
											"end": 9049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 9021,
											"end": 9050,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9021,
											"end": 9050,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 9021,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 9057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9057,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9057,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9063,
											"end": 9429,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 9063,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9205,
											"end": 9208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9226,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 9290,
											"end": 9292,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9285,
											"end": 9288,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9226,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 9226,
											"end": 9293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9226,
											"end": 9293,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 9226,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9219,
											"end": 9293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9219,
											"end": 9293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 9391,
											"end": 9394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 9302,
											"end": 9395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9302,
											"end": 9395,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 9302,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9420,
											"end": 9422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9415,
											"end": 9418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9404,
											"end": 9423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9404,
											"end": 9423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9429,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9435,
											"end": 9801,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 9435,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9598,
											"end": 9665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 9662,
											"end": 9664,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 9657,
											"end": 9660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 9598,
											"end": 9665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9598,
											"end": 9665,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 9598,
											"end": 9665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9591,
											"end": 9665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9591,
											"end": 9665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 9763,
											"end": 9766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 9674,
											"end": 9767,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9674,
											"end": 9767,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 9674,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 9794,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9787,
											"end": 9790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9783,
											"end": 9795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9807,
											"end": 10173,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 9807,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 9952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 10034,
											"end": 10036,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 10029,
											"end": 10032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 9970,
											"end": 10037,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 10037,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 9970,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 10037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 10135,
											"end": 10138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 10046,
											"end": 10139,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10046,
											"end": 10139,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 10046,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10159,
											"end": 10162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10148,
											"end": 10167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10148,
											"end": 10167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 10173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 10173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 10173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 10173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10179,
											"end": 10545,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 10179,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10321,
											"end": 10324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10342,
											"end": 10409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 10406,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 10401,
											"end": 10404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 10342,
											"end": 10409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10342,
											"end": 10409,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 10342,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 10507,
											"end": 10510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 10418,
											"end": 10511,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10418,
											"end": 10511,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 10418,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10531,
											"end": 10534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10527,
											"end": 10539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10520,
											"end": 10539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10520,
											"end": 10539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10179,
											"end": 10545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10179,
											"end": 10545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10179,
											"end": 10545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10179,
											"end": 10545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10551,
											"end": 10917,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 10551,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 10778,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10773,
											"end": 10776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 10714,
											"end": 10781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10714,
											"end": 10781,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 10714,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 10879,
											"end": 10882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 10790,
											"end": 10883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10790,
											"end": 10883,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 10790,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10908,
											"end": 10910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10903,
											"end": 10906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10892,
											"end": 10911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10892,
											"end": 10911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10923,
											"end": 11289,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 10923,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11086,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 11150,
											"end": 11152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11145,
											"end": 11148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11086,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 11086,
											"end": 11153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11086,
											"end": 11153,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 11086,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11079,
											"end": 11153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11079,
											"end": 11153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 11251,
											"end": 11254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 11162,
											"end": 11255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11162,
											"end": 11255,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 11162,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11280,
											"end": 11282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11275,
											"end": 11278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10923,
											"end": 11289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10923,
											"end": 11289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10923,
											"end": 11289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10923,
											"end": 11289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11295,
											"end": 11661,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 11295,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 11522,
											"end": 11524,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 11517,
											"end": 11520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11458,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 11458,
											"end": 11525,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11458,
											"end": 11525,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 11458,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 11623,
											"end": 11626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 11534,
											"end": 11627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11534,
											"end": 11627,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 11534,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11654,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11647,
											"end": 11650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 11655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11636,
											"end": 11655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11636,
											"end": 11655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11295,
											"end": 11661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11295,
											"end": 11661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11295,
											"end": 11661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11295,
											"end": 11661,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11667,
											"end": 12033,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 11667,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11830,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 11894,
											"end": 11896,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11889,
											"end": 11892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11830,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 11830,
											"end": 11897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11830,
											"end": 11897,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 11830,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11906,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 11995,
											"end": 11998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11906,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 11906,
											"end": 11999,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11906,
											"end": 11999,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 11906,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12024,
											"end": 12026,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 12033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 12033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 12033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 12033,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12039,
											"end": 12147,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 12039,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 12134,
											"end": 12139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12111,
											"end": 12114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12153,
											"end": 12271,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 12153,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12240,
											"end": 12264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 12258,
											"end": 12263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12240,
											"end": 12264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 12240,
											"end": 12264,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12240,
											"end": 12264,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 12240,
											"end": 12264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12271,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12277,
											"end": 12499,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 12277,
											"end": 12499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12370,
											"end": 12374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12397,
											"end": 12406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 12489,
											"end": 12490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12478,
											"end": 12487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12474,
											"end": 12491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 12421,
											"end": 12492,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12421,
											"end": 12492,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 12421,
											"end": 12492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12499,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12499,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 12658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12692,
											"end": 12694,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12681,
											"end": 12690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12669,
											"end": 12695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12669,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12705,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 12773,
											"end": 12774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12762,
											"end": 12771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 12775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12749,
											"end": 12755,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12705,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 12705,
											"end": 12776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12705,
											"end": 12776,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 12705,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 12854,
											"end": 12856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12843,
											"end": 12852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12830,
											"end": 12836,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 12786,
											"end": 12858,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12786,
											"end": 12858,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 12786,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12868,
											"end": 12940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12925,
											"end": 12934,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 12918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12868,
											"end": 12940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 12868,
											"end": 12940,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12868,
											"end": 12940,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 12868,
											"end": 12940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12947,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13074,
											"end": 13078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13112,
											"end": 13114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13097,
											"end": 13115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13125,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 13193,
											"end": 13194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13182,
											"end": 13191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13178,
											"end": 13195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13169,
											"end": 13175,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13125,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 13125,
											"end": 13196,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13125,
											"end": 13196,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 13125,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13206,
											"end": 13278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 13274,
											"end": 13276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13263,
											"end": 13272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13259,
											"end": 13277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13206,
											"end": 13278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 13206,
											"end": 13278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13206,
											"end": 13278,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 13206,
											"end": 13278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 13285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13291,
											"end": 13664,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 13291,
											"end": 13664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13434,
											"end": 13438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13472,
											"end": 13474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13461,
											"end": 13470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13449,
											"end": 13475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13449,
											"end": 13475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13521,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13515,
											"end": 13519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13511,
											"end": 13531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13507,
											"end": 13508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13496,
											"end": 13505,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13492,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13485,
											"end": 13532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13549,
											"end": 13657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 13652,
											"end": 13656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13643,
											"end": 13649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13549,
											"end": 13657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 13549,
											"end": 13657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13549,
											"end": 13657,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 13549,
											"end": 13657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13541,
											"end": 13657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13541,
											"end": 13657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13664,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13670,
											"end": 13888,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 13670,
											"end": 13888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13799,
											"end": 13801,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13776,
											"end": 13802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13776,
											"end": 13802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13812,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 13878,
											"end": 13879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13867,
											"end": 13876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 13880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13854,
											"end": 13860,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13812,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 13812,
											"end": 13881,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13812,
											"end": 13881,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 13812,
											"end": 13881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13670,
											"end": 13888,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13670,
											"end": 13888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13670,
											"end": 13888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13670,
											"end": 13888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13670,
											"end": 13888,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13894,
											"end": 14144,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 13894,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14039,
											"end": 14041,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14028,
											"end": 14037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 14134,
											"end": 14135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14123,
											"end": 14132,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14119,
											"end": 14136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14110,
											"end": 14116,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 14052,
											"end": 14137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14052,
											"end": 14137,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 14052,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 14144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 14144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 14144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 14144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 14144,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14343,
											"end": 14347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14384,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14370,
											"end": 14379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14366,
											"end": 14385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14358,
											"end": 14385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14358,
											"end": 14385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14395,
											"end": 14482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 14479,
											"end": 14480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14468,
											"end": 14477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14461,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14395,
											"end": 14482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 14395,
											"end": 14482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14395,
											"end": 14482,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 14395,
											"end": 14482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 14560,
											"end": 14562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 14563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14536,
											"end": 14542,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 14492,
											"end": 14564,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14492,
											"end": 14564,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 14492,
											"end": 14564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14574,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 14642,
											"end": 14644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14631,
											"end": 14640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14618,
											"end": 14624,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14574,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 14574,
											"end": 14646,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14574,
											"end": 14646,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 14574,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14656,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 14724,
											"end": 14726,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14713,
											"end": 14722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14709,
											"end": 14727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14700,
											"end": 14706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14656,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 14656,
											"end": 14728,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14656,
											"end": 14728,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 14656,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14735,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14741,
											"end": 15005,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 14741,
											"end": 15005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14855,
											"end": 14859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14882,
											"end": 14891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14906,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 14995,
											"end": 14996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14984,
											"end": 14993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 14997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14977,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14906,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 14906,
											"end": 14998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14906,
											"end": 14998,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 14906,
											"end": 14998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 15005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 15005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 15005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 15005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 15005,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15011,
											"end": 15279,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 15011,
											"end": 15279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15127,
											"end": 15131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15165,
											"end": 15167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15142,
											"end": 15168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15142,
											"end": 15168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15178,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 15269,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15258,
											"end": 15267,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15254,
											"end": 15271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15178,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 15178,
											"end": 15272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15178,
											"end": 15272,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 15178,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15011,
											"end": 15279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15011,
											"end": 15279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15011,
											"end": 15279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15011,
											"end": 15279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15011,
											"end": 15279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15285,
											"end": 15598,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 15285,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15398,
											"end": 15402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15425,
											"end": 15434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15421,
											"end": 15439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15413,
											"end": 15439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15413,
											"end": 15439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15485,
											"end": 15494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15471,
											"end": 15472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15460,
											"end": 15469,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15456,
											"end": 15473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15449,
											"end": 15496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 15586,
											"end": 15590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15577,
											"end": 15583,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 15513,
											"end": 15591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15513,
											"end": 15591,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 15513,
											"end": 15591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15505,
											"end": 15591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15505,
											"end": 15591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15598,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15604,
											"end": 16023,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 15604,
											"end": 16023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15770,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15808,
											"end": 15810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15785,
											"end": 15811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15785,
											"end": 15811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15851,
											"end": 15855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15847,
											"end": 15867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15843,
											"end": 15844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15832,
											"end": 15841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 15845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15821,
											"end": 15868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 16016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 16011,
											"end": 16015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 16016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 15885,
											"end": 16016,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15885,
											"end": 16016,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 15885,
											"end": 16016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 16016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 16016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15604,
											"end": 16023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15604,
											"end": 16023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15604,
											"end": 16023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15604,
											"end": 16023,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16029,
											"end": 16448,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 16029,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16195,
											"end": 16199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16233,
											"end": 16235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16222,
											"end": 16231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16218,
											"end": 16236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16210,
											"end": 16236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16210,
											"end": 16236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16282,
											"end": 16291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16276,
											"end": 16280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16268,
											"end": 16269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16257,
											"end": 16266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16253,
											"end": 16270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16246,
											"end": 16293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 16436,
											"end": 16440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 16310,
											"end": 16441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16310,
											"end": 16441,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 16310,
											"end": 16441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16029,
											"end": 16448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16029,
											"end": 16448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16029,
											"end": 16448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16029,
											"end": 16448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 16624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16658,
											"end": 16660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16643,
											"end": 16661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16635,
											"end": 16661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16635,
											"end": 16661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16707,
											"end": 16716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16701,
											"end": 16705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16697,
											"end": 16717,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16693,
											"end": 16694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16671,
											"end": 16718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 16861,
											"end": 16865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16727,
											"end": 16866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16727,
											"end": 16866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16879,
											"end": 17298,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 16879,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17045,
											"end": 17049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17083,
											"end": 17085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17060,
											"end": 17086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17060,
											"end": 17086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17132,
											"end": 17141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17126,
											"end": 17130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17122,
											"end": 17142,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17118,
											"end": 17119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17107,
											"end": 17116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17103,
											"end": 17120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17096,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17160,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 17286,
											"end": 17290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17160,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 17160,
											"end": 17291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17160,
											"end": 17291,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 17160,
											"end": 17291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17152,
											"end": 17291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17152,
											"end": 17291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 17298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 17298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 17298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 17298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17508,
											"end": 17510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17497,
											"end": 17506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17493,
											"end": 17511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17485,
											"end": 17511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17485,
											"end": 17511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17557,
											"end": 17566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17551,
											"end": 17555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17547,
											"end": 17567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17532,
											"end": 17541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17528,
											"end": 17545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17521,
											"end": 17568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 17711,
											"end": 17715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17933,
											"end": 17935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17922,
											"end": 17931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17910,
											"end": 17936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17910,
											"end": 17936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17982,
											"end": 17991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17976,
											"end": 17980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17972,
											"end": 17992,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17968,
											"end": 17969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17957,
											"end": 17966,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17953,
											"end": 17970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17946,
											"end": 17993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 18136,
											"end": 18140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18002,
											"end": 18141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18002,
											"end": 18141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18154,
											"end": 18573,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 18154,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18320,
											"end": 18324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18358,
											"end": 18360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18347,
											"end": 18356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18343,
											"end": 18361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18335,
											"end": 18361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18335,
											"end": 18361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18407,
											"end": 18416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18401,
											"end": 18405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18397,
											"end": 18417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18393,
											"end": 18394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18382,
											"end": 18391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18371,
											"end": 18418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18435,
											"end": 18566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 18561,
											"end": 18565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18435,
											"end": 18566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 18435,
											"end": 18566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18435,
											"end": 18566,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 18435,
											"end": 18566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18427,
											"end": 18566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18427,
											"end": 18566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18154,
											"end": 18573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18154,
											"end": 18573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18154,
											"end": 18573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18154,
											"end": 18573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18579,
											"end": 18998,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 18579,
											"end": 18998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18745,
											"end": 18749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18783,
											"end": 18785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18772,
											"end": 18781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18768,
											"end": 18786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 18841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18826,
											"end": 18830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18818,
											"end": 18819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18807,
											"end": 18816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18803,
											"end": 18820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18796,
											"end": 18843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18860,
											"end": 18991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 18986,
											"end": 18990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18860,
											"end": 18991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 18860,
											"end": 18991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18860,
											"end": 18991,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 18860,
											"end": 18991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18852,
											"end": 18991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18852,
											"end": 18991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 18998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 18998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 18998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 18998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19004,
											"end": 19226,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 19004,
											"end": 19226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19097,
											"end": 19101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19135,
											"end": 19137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19124,
											"end": 19133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19120,
											"end": 19138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19112,
											"end": 19138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19112,
											"end": 19138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19148,
											"end": 19219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 19216,
											"end": 19217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19205,
											"end": 19214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19201,
											"end": 19218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19192,
											"end": 19198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19148,
											"end": 19219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 19148,
											"end": 19219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19148,
											"end": 19219,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 19148,
											"end": 19219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19226,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19353,
											"end": 19357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19391,
											"end": 19393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19380,
											"end": 19389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19376,
											"end": 19394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19368,
											"end": 19394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19368,
											"end": 19394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19404,
											"end": 19475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 19472,
											"end": 19473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19461,
											"end": 19470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19457,
											"end": 19474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19448,
											"end": 19454,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19404,
											"end": 19475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 19404,
											"end": 19475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19404,
											"end": 19475,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 19404,
											"end": 19475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19485,
											"end": 19557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 19553,
											"end": 19555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19542,
											"end": 19551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19538,
											"end": 19556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19529,
											"end": 19535,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19485,
											"end": 19557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 19485,
											"end": 19557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19485,
											"end": 19557,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 19485,
											"end": 19557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19691,
											"end": 19695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19729,
											"end": 19731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19718,
											"end": 19727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19714,
											"end": 19732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19706,
											"end": 19732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19706,
											"end": 19732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 19810,
											"end": 19811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19799,
											"end": 19808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19795,
											"end": 19812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19786,
											"end": 19792,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 19742,
											"end": 19813,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19742,
											"end": 19813,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 19742,
											"end": 19813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19823,
											"end": 19895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 19891,
											"end": 19893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19880,
											"end": 19889,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19867,
											"end": 19873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19823,
											"end": 19895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 19823,
											"end": 19895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19823,
											"end": 19895,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 19823,
											"end": 19895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19570,
											"end": 19902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19908,
											"end": 20037,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 19908,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19942,
											"end": 19948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19969,
											"end": 19989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 19969,
											"end": 19989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 19969,
											"end": 19989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19969,
											"end": 19989,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 19969,
											"end": 19989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19959,
											"end": 19989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19959,
											"end": 19989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 20026,
											"end": 20030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20018,
											"end": 20024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 19998,
											"end": 20031,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19998,
											"end": 20031,
											"name": "tag",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 19998,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19908,
											"end": 20037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19908,
											"end": 20037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19908,
											"end": 20037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19908,
											"end": 20037,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20043,
											"end": 20118,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 20043,
											"end": 20118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20076,
											"end": 20082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20109,
											"end": 20111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20103,
											"end": 20112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20093,
											"end": 20112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20093,
											"end": 20112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20043,
											"end": 20118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20043,
											"end": 20118,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20124,
											"end": 20431,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 20124,
											"end": 20431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20185,
											"end": 20189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20275,
											"end": 20293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20267,
											"end": 20273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20294,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20261,
											"end": 20317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20261,
											"end": 20317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 20261,
											"end": 20317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20297,
											"end": 20315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 20297,
											"end": 20315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 20297,
											"end": 20315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20297,
											"end": 20315,
											"name": "tag",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 20297,
											"end": 20315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20261,
											"end": 20317,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 20261,
											"end": 20317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20335,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 20357,
											"end": 20363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20335,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 20335,
											"end": 20364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20335,
											"end": 20364,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 20335,
											"end": 20364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20327,
											"end": 20364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20327,
											"end": 20364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20419,
											"end": 20423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20413,
											"end": 20417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20409,
											"end": 20424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20401,
											"end": 20424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20401,
											"end": 20424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20431,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20437,
											"end": 20569,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 20437,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20504,
											"end": 20508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20527,
											"end": 20530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20519,
											"end": 20530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20519,
											"end": 20530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20557,
											"end": 20561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20552,
											"end": 20555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20548,
											"end": 20562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20540,
											"end": 20562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20540,
											"end": 20562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20437,
											"end": 20569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20437,
											"end": 20569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20437,
											"end": 20569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20437,
											"end": 20569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20575,
											"end": 20689,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 20575,
											"end": 20689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20676,
											"end": 20681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20670,
											"end": 20682,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20660,
											"end": 20682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20660,
											"end": 20682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20575,
											"end": 20689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20575,
											"end": 20689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20575,
											"end": 20689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20575,
											"end": 20689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20695,
											"end": 20794,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 20695,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20781,
											"end": 20786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20775,
											"end": 20787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20695,
											"end": 20794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20695,
											"end": 20794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20695,
											"end": 20794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20695,
											"end": 20794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20800,
											"end": 20913,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 20800,
											"end": 20913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20902,
											"end": 20906,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20897,
											"end": 20900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20893,
											"end": 20907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20885,
											"end": 20907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20885,
											"end": 20907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20800,
											"end": 20913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20800,
											"end": 20913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20800,
											"end": 20913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20800,
											"end": 20913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20919,
											"end": 21103,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 20919,
											"end": 21103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21018,
											"end": 21029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21052,
											"end": 21058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21047,
											"end": 21050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21040,
											"end": 21059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21092,
											"end": 21096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21087,
											"end": 21090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21068,
											"end": 21097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21068,
											"end": 21097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20919,
											"end": 21103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20919,
											"end": 21103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20919,
											"end": 21103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20919,
											"end": 21103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20919,
											"end": 21103,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21109,
											"end": 21278,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 21109,
											"end": 21278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21193,
											"end": 21204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21227,
											"end": 21233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21222,
											"end": 21225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21215,
											"end": 21234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21267,
											"end": 21271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21262,
											"end": 21265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21258,
											"end": 21272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21243,
											"end": 21272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21243,
											"end": 21272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21109,
											"end": 21278,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21109,
											"end": 21278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21109,
											"end": 21278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21109,
											"end": 21278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21109,
											"end": 21278,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21284,
											"end": 21589,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 21284,
											"end": 21589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21324,
											"end": 21327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21343,
											"end": 21363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 21361,
											"end": 21362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21343,
											"end": 21363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 21343,
											"end": 21363,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21343,
											"end": 21363,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 21343,
											"end": 21363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21338,
											"end": 21363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21338,
											"end": 21363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21377,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 21395,
											"end": 21396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21377,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 21377,
											"end": 21397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21377,
											"end": 21397,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 21377,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21372,
											"end": 21397,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21372,
											"end": 21397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21531,
											"end": 21532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21463,
											"end": 21529,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21459,
											"end": 21533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21456,
											"end": 21457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21453,
											"end": 21534,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21450,
											"end": 21557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21450,
											"end": 21557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 21450,
											"end": 21557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21450,
											"end": 21557,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 21450,
											"end": 21557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21581,
											"end": 21582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21578,
											"end": 21579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21574,
											"end": 21583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21567,
											"end": 21583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21567,
											"end": 21583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21284,
											"end": 21589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21284,
											"end": 21589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21284,
											"end": 21589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21284,
											"end": 21589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21284,
											"end": 21589,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21595,
											"end": 21780,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 21595,
											"end": 21780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21635,
											"end": 21636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21652,
											"end": 21672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 21670,
											"end": 21671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21652,
											"end": 21672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 21652,
											"end": 21672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21652,
											"end": 21672,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 21652,
											"end": 21672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21647,
											"end": 21672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21647,
											"end": 21672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 21704,
											"end": 21705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21725,
											"end": 21726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21715,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 21715,
											"end": 21750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21730,
											"end": 21748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 21730,
											"end": 21748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 21730,
											"end": 21748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21730,
											"end": 21748,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 21730,
											"end": 21748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21715,
											"end": 21750,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 21715,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21772,
											"end": 21773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21769,
											"end": 21770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21765,
											"end": 21774,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 21760,
											"end": 21774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21760,
											"end": 21774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21595,
											"end": 21780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21595,
											"end": 21780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21595,
											"end": 21780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21595,
											"end": 21780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21595,
											"end": 21780,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21786,
											"end": 22134,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 21786,
											"end": 22134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21826,
											"end": 21833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21849,
											"end": 21869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 21867,
											"end": 21868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21849,
											"end": 21869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 21849,
											"end": 21869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21849,
											"end": 21869,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 21849,
											"end": 21869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 21869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 21869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21883,
											"end": 21903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 21901,
											"end": 21902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21883,
											"end": 21903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 21883,
											"end": 21903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21883,
											"end": 21903,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 21883,
											"end": 21903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 21903,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 21903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22071,
											"end": 22072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22003,
											"end": 22069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21999,
											"end": 22073,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 21996,
											"end": 21997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21993,
											"end": 22074,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21988,
											"end": 21989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21981,
											"end": 21990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21974,
											"end": 21991,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21970,
											"end": 22075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 22098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 22098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 21967,
											"end": 22098,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22078,
											"end": 22096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 22078,
											"end": 22096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 22078,
											"end": 22096,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22078,
											"end": 22096,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 22078,
											"end": 22096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 22098,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 21967,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22126,
											"end": 22127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22123,
											"end": 22124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22119,
											"end": 22128,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21786,
											"end": 22134,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21786,
											"end": 22134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21786,
											"end": 22134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21786,
											"end": 22134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21786,
											"end": 22134,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22140,
											"end": 22331,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 22140,
											"end": 22331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22180,
											"end": 22184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 22218,
											"end": 22219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22195,
											"end": 22220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22195,
											"end": 22220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 22252,
											"end": 22253,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22229,
											"end": 22254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22229,
											"end": 22254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22273,
											"end": 22274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22270,
											"end": 22271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22267,
											"end": 22275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 22264,
											"end": 22298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22264,
											"end": 22298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 22264,
											"end": 22298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22264,
											"end": 22298,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 22264,
											"end": 22298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22323,
											"end": 22324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22320,
											"end": 22321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22316,
											"end": 22325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22308,
											"end": 22325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22308,
											"end": 22325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22140,
											"end": 22331,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22140,
											"end": 22331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22140,
											"end": 22331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22140,
											"end": 22331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22140,
											"end": 22331,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22337,
											"end": 22433,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 22337,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22374,
											"end": 22381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22403,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 22421,
											"end": 22426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22403,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 22403,
											"end": 22427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22403,
											"end": 22427,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 22403,
											"end": 22427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22392,
											"end": 22427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22392,
											"end": 22427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 22433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 22433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 22433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 22433,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22439,
											"end": 22529,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 22439,
											"end": 22529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22473,
											"end": 22480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22516,
											"end": 22521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22509,
											"end": 22522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22502,
											"end": 22523,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22491,
											"end": 22523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22491,
											"end": 22523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22439,
											"end": 22529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22439,
											"end": 22529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22439,
											"end": 22529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22439,
											"end": 22529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22535,
											"end": 22684,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 22535,
											"end": 22684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22571,
											"end": 22578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22611,
											"end": 22677,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22604,
											"end": 22609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22600,
											"end": 22678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22589,
											"end": 22678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22589,
											"end": 22678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 22684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 22684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 22684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 22684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22690,
											"end": 22802,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 22690,
											"end": 22802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22743,
											"end": 22750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22772,
											"end": 22796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 22790,
											"end": 22795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22772,
											"end": 22796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 22772,
											"end": 22796,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22772,
											"end": 22796,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 22772,
											"end": 22796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22761,
											"end": 22796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22761,
											"end": 22796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22690,
											"end": 22802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22690,
											"end": 22802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22690,
											"end": 22802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22690,
											"end": 22802,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22808,
											"end": 22925,
											"name": "tag",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 22808,
											"end": 22925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22866,
											"end": 22873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22895,
											"end": 22919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 22913,
											"end": 22918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22895,
											"end": 22919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 22895,
											"end": 22919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22895,
											"end": 22919,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 22895,
											"end": 22919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22884,
											"end": 22919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22884,
											"end": 22919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22808,
											"end": 22925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22808,
											"end": 22925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22808,
											"end": 22925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22808,
											"end": 22925,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22931,
											"end": 23057,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 22931,
											"end": 23057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 22975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23008,
											"end": 23050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23001,
											"end": 23006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22997,
											"end": 23051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22986,
											"end": 23051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22986,
											"end": 23051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23057,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23063,
											"end": 23140,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 23063,
											"end": 23140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23100,
											"end": 23107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23129,
											"end": 23134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23118,
											"end": 23134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23118,
											"end": 23134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23063,
											"end": 23140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23063,
											"end": 23140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23063,
											"end": 23140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23063,
											"end": 23140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23146,
											"end": 23286,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 23146,
											"end": 23286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23210,
											"end": 23219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23243,
											"end": 23280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 23274,
											"end": 23279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23243,
											"end": 23280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23243,
											"end": 23280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23243,
											"end": 23280,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 23243,
											"end": 23280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23230,
											"end": 23280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23230,
											"end": 23280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23146,
											"end": 23286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23146,
											"end": 23286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23146,
											"end": 23286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23146,
											"end": 23286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23292,
											"end": 23434,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 23292,
											"end": 23434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23391,
											"end": 23428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 23422,
											"end": 23427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23391,
											"end": 23428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23391,
											"end": 23428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23391,
											"end": 23428,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 23391,
											"end": 23428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23378,
											"end": 23428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23378,
											"end": 23428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23292,
											"end": 23434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23292,
											"end": 23434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23292,
											"end": 23434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23292,
											"end": 23434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23440,
											"end": 23587,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 23440,
											"end": 23587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23511,
											"end": 23520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23544,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 23575,
											"end": 23580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23544,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23544,
											"end": 23581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23544,
											"end": 23581,
											"name": "tag",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 23544,
											"end": 23581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23531,
											"end": 23581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23531,
											"end": 23581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23440,
											"end": 23587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23440,
											"end": 23587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23440,
											"end": 23587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23440,
											"end": 23587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23593,
											"end": 23742,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 23593,
											"end": 23742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23666,
											"end": 23675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23699,
											"end": 23736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 23730,
											"end": 23735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23699,
											"end": 23736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23699,
											"end": 23736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23699,
											"end": 23736,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 23699,
											"end": 23736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23686,
											"end": 23736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23686,
											"end": 23736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23593,
											"end": 23742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23593,
											"end": 23742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23593,
											"end": 23742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23593,
											"end": 23742,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23748,
											"end": 23874,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23748,
											"end": 23874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23798,
											"end": 23807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23831,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 23862,
											"end": 23867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23831,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 23831,
											"end": 23868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23831,
											"end": 23868,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 23831,
											"end": 23868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23818,
											"end": 23868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23818,
											"end": 23868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23748,
											"end": 23874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23748,
											"end": 23874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23748,
											"end": 23874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23748,
											"end": 23874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23880,
											"end": 23993,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 23880,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23930,
											"end": 23939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23963,
											"end": 23987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 23981,
											"end": 23986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23963,
											"end": 23987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 23963,
											"end": 23987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23963,
											"end": 23987,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 23963,
											"end": 23987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23950,
											"end": 23987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23950,
											"end": 23987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23880,
											"end": 23993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23880,
											"end": 23993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23880,
											"end": 23993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23880,
											"end": 23993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23999,
											"end": 24153,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 23999,
											"end": 24153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24083,
											"end": 24089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24078,
											"end": 24081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24073,
											"end": 24076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24060,
											"end": 24090,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 24145,
											"end": 24146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24136,
											"end": 24142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24131,
											"end": 24134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24127,
											"end": 24143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24120,
											"end": 24147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24153,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24159,
											"end": 24466,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 24159,
											"end": 24466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24227,
											"end": 24228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24251,
											"end": 24257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24248,
											"end": 24249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24245,
											"end": 24258,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24336,
											"end": 24337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24331,
											"end": 24334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24327,
											"end": 24338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24321,
											"end": 24339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24317,
											"end": 24318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24312,
											"end": 24315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24308,
											"end": 24319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24301,
											"end": 24340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24273,
											"end": 24275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24270,
											"end": 24271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24266,
											"end": 24276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24261,
											"end": 24276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24261,
											"end": 24276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 24237,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24365,
											"end": 24366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24359,
											"end": 24460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24359,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 24359,
											"end": 24460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24448,
											"end": 24449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24439,
											"end": 24445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24434,
											"end": 24437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24423,
											"end": 24450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24359,
											"end": 24460,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 24359,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24208,
											"end": 24466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24159,
											"end": 24466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24159,
											"end": 24466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24159,
											"end": 24466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24159,
											"end": 24466,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24472,
											"end": 24753,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 24472,
											"end": 24753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24555,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 24577,
											"end": 24581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24555,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 24555,
											"end": 24582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24555,
											"end": 24582,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 24555,
											"end": 24582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24547,
											"end": 24553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24543,
											"end": 24583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 24691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24673,
											"end": 24683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24692,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24649,
											"end": 24667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24637,
											"end": 24647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24634,
											"end": 24668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24631,
											"end": 24693,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 24628,
											"end": 24716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24628,
											"end": 24716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 24628,
											"end": 24716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24696,
											"end": 24714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 24696,
											"end": 24714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 24696,
											"end": 24714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24696,
											"end": 24714,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 24696,
											"end": 24714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24628,
											"end": 24716,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 24628,
											"end": 24716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24736,
											"end": 24746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24732,
											"end": 24734,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24725,
											"end": 24747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24515,
											"end": 24753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24472,
											"end": 24753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24472,
											"end": 24753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24472,
											"end": 24753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24759,
											"end": 24992,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 24759,
											"end": 24992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24798,
											"end": 24801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24821,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 24839,
											"end": 24844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24821,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 24821,
											"end": 24845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24821,
											"end": 24845,
											"name": "tag",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 24821,
											"end": 24845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24812,
											"end": 24845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24812,
											"end": 24845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24867,
											"end": 24933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24860,
											"end": 24865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24857,
											"end": 24934,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24854,
											"end": 24957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24854,
											"end": 24957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 24854,
											"end": 24957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24937,
											"end": 24955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 24937,
											"end": 24955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 24937,
											"end": 24955,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24937,
											"end": 24955,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 24937,
											"end": 24955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24854,
											"end": 24957,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 24854,
											"end": 24957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24984,
											"end": 24985,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24977,
											"end": 24982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24973,
											"end": 24986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24966,
											"end": 24986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24966,
											"end": 24986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24759,
											"end": 24992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24759,
											"end": 24992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24759,
											"end": 24992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24759,
											"end": 24992,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24998,
											"end": 25178,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 24998,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25046,
											"end": 25123,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25043,
											"end": 25044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25036,
											"end": 25124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25143,
											"end": 25147,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 25140,
											"end": 25141,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25133,
											"end": 25148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25167,
											"end": 25171,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 25164,
											"end": 25165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25157,
											"end": 25172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25364,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 25184,
											"end": 25364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25232,
											"end": 25309,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25229,
											"end": 25230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25222,
											"end": 25310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25329,
											"end": 25333,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 25326,
											"end": 25327,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25319,
											"end": 25334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25353,
											"end": 25357,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 25350,
											"end": 25351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25343,
											"end": 25358,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25370,
											"end": 25550,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 25370,
											"end": 25550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25418,
											"end": 25495,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25415,
											"end": 25416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25408,
											"end": 25496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25515,
											"end": 25519,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 25512,
											"end": 25513,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25505,
											"end": 25520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25539,
											"end": 25543,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 25536,
											"end": 25537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25529,
											"end": 25544,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25556,
											"end": 25736,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 25556,
											"end": 25736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25681,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25601,
											"end": 25602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25594,
											"end": 25682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25701,
											"end": 25705,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 25698,
											"end": 25699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25691,
											"end": 25706,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25725,
											"end": 25729,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 25722,
											"end": 25723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25715,
											"end": 25730,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25742,
											"end": 25859,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 25742,
											"end": 25859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25851,
											"end": 25852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25848,
											"end": 25849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25841,
											"end": 25853,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25865,
											"end": 25982,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 25865,
											"end": 25982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25974,
											"end": 25975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25971,
											"end": 25972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25964,
											"end": 25976,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25988,
											"end": 26105,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 25988,
											"end": 26105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26097,
											"end": 26098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26094,
											"end": 26095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26087,
											"end": 26099,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26111,
											"end": 26228,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 26111,
											"end": 26228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26220,
											"end": 26221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26217,
											"end": 26218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26210,
											"end": 26222,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26234,
											"end": 26336,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 26234,
											"end": 26336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26275,
											"end": 26281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26326,
											"end": 26328,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26322,
											"end": 26329,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26317,
											"end": 26319,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26310,
											"end": 26315,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26306,
											"end": 26320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26302,
											"end": 26330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26292,
											"end": 26330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26292,
											"end": 26330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26234,
											"end": 26336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26234,
											"end": 26336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26234,
											"end": 26336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26234,
											"end": 26336,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26342,
											"end": 26567,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 26342,
											"end": 26567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26482,
											"end": 26516,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 26478,
											"end": 26479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26470,
											"end": 26476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26466,
											"end": 26480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26459,
											"end": 26517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26551,
											"end": 26559,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26546,
											"end": 26548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26538,
											"end": 26544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26534,
											"end": 26549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26527,
											"end": 26560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26342,
											"end": 26567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26342,
											"end": 26567,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26573,
											"end": 26750,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 26573,
											"end": 26750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26713,
											"end": 26742,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 26709,
											"end": 26710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26701,
											"end": 26707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26697,
											"end": 26711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26690,
											"end": 26743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26573,
											"end": 26750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26573,
											"end": 26750,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26756,
											"end": 26935,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 26756,
											"end": 26935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26896,
											"end": 26927,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000"
										},
										{
											"begin": 26892,
											"end": 26893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26884,
											"end": 26890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26880,
											"end": 26894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26873,
											"end": 26928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26756,
											"end": 26935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26756,
											"end": 26935,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26941,
											"end": 27105,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 26941,
											"end": 27105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27081,
											"end": 27097,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206973207A65726F000000000000000000000000000000000000"
										},
										{
											"begin": 27077,
											"end": 27078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27069,
											"end": 27075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27065,
											"end": 27079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27058,
											"end": 27098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26941,
											"end": 27105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26941,
											"end": 27105,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27111,
											"end": 27331,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 27111,
											"end": 27331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27251,
											"end": 27285,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 27247,
											"end": 27248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27239,
											"end": 27245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27228,
											"end": 27286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27320,
											"end": 27323,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27315,
											"end": 27317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27307,
											"end": 27313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27303,
											"end": 27318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27111,
											"end": 27331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27111,
											"end": 27331,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27337,
											"end": 27519,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 27337,
											"end": 27519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27477,
											"end": 27511,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27473,
											"end": 27474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27465,
											"end": 27471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27461,
											"end": 27475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27454,
											"end": 27512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27337,
											"end": 27519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27337,
											"end": 27519,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27525,
											"end": 27695,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 27525,
											"end": 27695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27665,
											"end": 27687,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E206964206973206E6F7420676F6F64000000000000000000000000"
										},
										{
											"begin": 27661,
											"end": 27662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27653,
											"end": 27659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27649,
											"end": 27663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27642,
											"end": 27688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27525,
											"end": 27695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27525,
											"end": 27695,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27701,
											"end": 27869,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 27701,
											"end": 27869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27861,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 27837,
											"end": 27838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27829,
											"end": 27835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27825,
											"end": 27839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27818,
											"end": 27862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27701,
											"end": 27869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27701,
											"end": 27869,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27875,
											"end": 27997,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 27875,
											"end": 27997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 27966,
											"end": 27971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 27948,
											"end": 27972,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27948,
											"end": 27972,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 27948,
											"end": 27972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27941,
											"end": 27946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27938,
											"end": 27973,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27928,
											"end": 27991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 27928,
											"end": 27991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27987,
											"end": 27988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27984,
											"end": 27985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27928,
											"end": 27991,
											"name": "tag",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 27928,
											"end": 27991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27875,
											"end": 27997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27875,
											"end": 27997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28003,
											"end": 28119,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 28003,
											"end": 28119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28073,
											"end": 28094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 28088,
											"end": 28093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28073,
											"end": 28094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 28073,
											"end": 28094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28073,
											"end": 28094,
											"name": "tag",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 28073,
											"end": 28094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28066,
											"end": 28071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28063,
											"end": 28095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28053,
											"end": 28113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 28053,
											"end": 28113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28109,
											"end": 28110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28106,
											"end": 28107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28099,
											"end": 28111,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28053,
											"end": 28113,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 28053,
											"end": 28113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28003,
											"end": 28119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28003,
											"end": 28119,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28125,
											"end": 28279,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 28125,
											"end": 28279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28214,
											"end": 28254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 28248,
											"end": 28253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28214,
											"end": 28254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 28214,
											"end": 28254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28214,
											"end": 28254,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 28214,
											"end": 28254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28255,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28194,
											"end": 28273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 28194,
											"end": 28273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28269,
											"end": 28270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28266,
											"end": 28267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28259,
											"end": 28271,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28194,
											"end": 28273,
											"name": "tag",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 28194,
											"end": 28273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28125,
											"end": 28279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28125,
											"end": 28279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28285,
											"end": 28449,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 28285,
											"end": 28449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28379,
											"end": 28424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 28418,
											"end": 28423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28379,
											"end": 28424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 28379,
											"end": 28424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28379,
											"end": 28424,
											"name": "tag",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 28379,
											"end": 28424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28372,
											"end": 28377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28369,
											"end": 28425,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28359,
											"end": 28443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 28359,
											"end": 28443,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28439,
											"end": 28440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28436,
											"end": 28437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28429,
											"end": 28441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28359,
											"end": 28443,
											"name": "tag",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 28359,
											"end": 28443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28285,
											"end": 28449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28285,
											"end": 28449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28455,
											"end": 28577,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 28455,
											"end": 28577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28528,
											"end": 28552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "790"
										},
										{
											"begin": 28546,
											"end": 28551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28528,
											"end": 28552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 28528,
											"end": 28552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28528,
											"end": 28552,
											"name": "tag",
											"source": 1,
											"value": "790"
										},
										{
											"begin": 28528,
											"end": 28552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28521,
											"end": 28526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28518,
											"end": 28553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28508,
											"end": 28571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 28508,
											"end": 28571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28567,
											"end": 28568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28564,
											"end": 28565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28557,
											"end": 28569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28508,
											"end": 28571,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 28508,
											"end": 28571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28455,
											"end": 28577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28455,
											"end": 28577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DDT()": "cb3cba55",
							"DDTPerBlock()": "f395db2c",
							"NFTMasterChef()": "e4d09896",
							"add(uint256,address,bool)": "1eaaa045",
							"compundDDT(uint256)": "1395d8c9",
							"deposit(uint256,uint256)": "e2bbb158",
							"devaddr()": "d49e77cd",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getUserTokenIds(uint256,address)": "d5545992",
							"massUpdatePools()": "630b5ba1",
							"migrator()": "7cd07e47",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"pendingDDT(uint256,address)": "2080baab",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setDevAddress(address)": "d0d41fe1",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateDDTPerBlock(uint256)": "612eee43",
							"updateMultiplier(uint256)": "5ffe6146",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DDT\",\"type\":\"address\"},{\"internalType\":\"contract INFTMasterChef\",\"name\":\"_NFTMasterChef\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_DDTPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDTPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTMasterChef\",\"outputs\":[{\"internalType\":\"contract INFTMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"_NFTToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"compundDDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingDDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFTToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accDDTPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updateDDTPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"NFTStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1103,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "NFTMasterChef",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(INFTMasterChef)1071"
							},
							{
								"astId": 1106,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "DDT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 1108,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "devaddr",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1110,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "DDTPerBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1113,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1116,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "migrator",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 1120,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "poolInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(PoolInfo)1100_storage)dyn_storage"
							},
							{
								"astId": 1127,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "userInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1090_storage))"
							},
							{
								"astId": 1130,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1132,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "startBlock",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1100_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1100_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTStake.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1048": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_contract(INFTMasterChef)1071": {
								"encoding": "inplace",
								"label": "contract INFTMasterChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1090_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTStake.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1090_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1090_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1090_storage)"
							},
							"t_struct(PoolInfo)1100_storage": {
								"encoding": "inplace",
								"label": "struct NFTStake.PoolInfo",
								"members": [
									{
										"astId": 1093,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "NFTToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)1048"
									},
									{
										"astId": 1095,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1097,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1099,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "accDDTPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)1090_storage": {
								"encoding": "inplace",
								"label": "struct NFTStake.UserInfo",
								"members": [
									{
										"astId": 1085,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "tokenIds",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1087,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1089,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTStake.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":16161:19512  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":16161:19512  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122098c4f12de537503e4a9e604679b3ca257cd993d1599beedddc5f79565da32dc164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098c4f12de537503e4a9e604679b3ca257cd993d1599beedddc5f79565da32dc164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xC4 CALL 0x2D 0xE5 CALLDATACOPY POP RETURNDATACOPY 0x4A SWAP15 PUSH1 0x46 PUSH26 0xB3CA257CD993D1599BEEDDDC5F79565DA32DC164736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16161:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098c4f12de537503e4a9e604679b3ca257cd993d1599beedddc5f79565da32dc164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xC4 CALL 0x2D 0xE5 CALLDATACOPY POP RETURNDATACOPY 0x4A SWAP15 PUSH1 0x46 PUSH26 0xB3CA257CD993D1599BEEDDDC5F79565DA32DC164736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16161:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098c4f12de537503e4a9e604679b3ca257cd993d1599beedddc5f79565da32dc164736f6c63430008070033",
									".code": [
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":200:5048  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":200:5048  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209319258dc97d5bafe9bd0c2dbdd9ae63ba1b9f8d4cb37a9bd6022914ada6f3d964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209319258dc97d5bafe9bd0c2dbdd9ae63ba1b9f8d4cb37a9bd6022914ada6f3d964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 NOT 0x25 DUP14 0xC9 PUSH30 0x5BAFE9BD0C2DBDD9AE63BA1B9F8D4CB37A9BD6022914ADA6F3D964736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "200:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209319258dc97d5bafe9bd0c2dbdd9ae63ba1b9f8d4cb37a9bd6022914ada6f3d964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 NOT 0x25 DUP14 0xC9 PUSH30 0x5BAFE9BD0C2DBDD9AE63BA1B9F8D4CB37A9BD6022914ADA6F3D964736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "200:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209319258dc97d5bafe9bd0c2dbdd9ae63ba1b9f8d4cb37a9bd6022914ada6f3d964736f6c63430008070033",
									".code": [
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x3936afa9684fbd49197297f1da918b8aca6d754562cd83fea330734d7bef3fe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2998a392261ab2eaeca4e2489b744acf7789b626adc886262267544e4b8b6c\",\"dweb:/ipfs/QmP3XmPwypqfqnGvFmBKYpRS6EwctwtRgXRBVGKr75eJF9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTStake.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStake.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC165": [
							936
						],
						"IERC20": [
							286
						],
						"IERC721": [
							1048
						],
						"IERC721Receiver": [
							1063
						],
						"IMigratorChef": [
							927
						],
						"INFTMasterChef": [
							1071
						],
						"NFTStake": [
							2093
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "173:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "208:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "522:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "541:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "533:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "545:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "533:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "569:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "574:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "577:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "561:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "561:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "627:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "620:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "224:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:9:0"
									},
									"scope": 194,
									"src": "455:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "978:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1000:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1003:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1006:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "996:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "989:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "644:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "920:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:9:0"
									},
									"scope": 194,
									"src": "911:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1479:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1498:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1503:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1498:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1506:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1490:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1538:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1530:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1542:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1546:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1542:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1530:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1567:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1560:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1055:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1393:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1405:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1416:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1408:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1433:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1419:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:9:0"
									},
									"scope": 194,
									"src": "1384:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1894:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2130:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2135:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2126:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2138:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2153:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2193:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2185:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2197:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2201:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2197:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2185:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2221:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2221:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2233:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2213:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2213:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2289:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2282:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1584:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1836:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1840:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1859:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1851:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1839:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1885:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:9:0"
									},
									"scope": 194,
									"src": "1827:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2833:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2855:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2858:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2851:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2844:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2306:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2775:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:9:0"
									},
									"scope": 194,
									"src": "2766:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3523:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3609:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3613:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3616:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3601:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3601:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3648:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3640:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3652:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3656:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3640:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3764:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3757:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2906:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3437:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3449:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3441:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3460:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3452:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3477:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3463:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:9:0"
									},
									"scope": 194,
									"src": "3428:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4297:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4319:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4315:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4315:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4308:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3781:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4239:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4251:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4243:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4262:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4254:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:9:0"
									},
									"scope": 194,
									"src": "4230:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4974:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4993:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4998:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5001:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4985:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4985:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5032:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5036:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5032:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "5025:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4368:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4888:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4911:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4928:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4914:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4891:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4965:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4964:9:0"
									},
									"scope": 194,
									"src": "4879:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2094,
							"src": "200:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "5062:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5076:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5159:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5170:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:9:0"
									},
									"scope": 286,
									"src": "5150:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5213:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5302:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5311:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5351:9:0"
									},
									"scope": 286,
									"src": "5293:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5369:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5599:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5616:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5608:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5635:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5627:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5607:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5661:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5660:6:0"
									},
									"scope": 286,
									"src": "5590:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5675:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5960:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5985:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:9:0"
									},
									"scope": 286,
									"src": "5951:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6042:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6712:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:6:0"
									},
									"scope": 286,
									"src": "6703:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6794:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6824:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6816:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6798:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6849:6:0"
									},
									"scope": 286,
									"src": "6785:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6864:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7183:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7214:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7206:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7267:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7299:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7298:6:0"
									},
									"scope": 286,
									"src": "7174:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7313:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7488:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7513:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7497:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7535:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7519:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7547:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7539:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:57:0"
									},
									"src": "7482:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7562:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 277,
									"name": "Approval",
									"nameLocation": "7725:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7734:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7757:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7790:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7782:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7733:63:0"
									},
									"src": "7719:78:0"
								},
								{
									"anonymous": false,
									"id": 285,
									"name": "Mint",
									"nameLocation": "7811:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7832:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7816:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7856:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7840:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7815:60:0"
									},
									"src": "7805:71:0"
								}
							],
							"scope": 2094,
							"src": "5052:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7891:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8957:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9186:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9186:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9186:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9186:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9179:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7906:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8900:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8919:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:0"
									},
									"scope": 578,
									"src": "8891:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10223:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10250:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10242:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10242:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10242:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10242:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10267:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10242:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10275:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10234:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10234:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10326:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10321:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10321:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10369:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10339:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10339:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10361:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10339:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10339:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10320:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10400:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10383:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10383:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9225:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10187:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10171:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10171:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10206:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10170:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 578,
									"src": "10152:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11320:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11359:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11365:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11338:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11331:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10477:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11240:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11305:14:0"
									},
									"scope": 578,
									"src": "11231:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11787:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11835:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11841:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11844:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11805:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11798:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11414:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11645:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11676:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11668:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11693:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11735:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11721:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11721:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11657:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11773:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:14:0"
									},
									"scope": 578,
									"src": "11636:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12387:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12435:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12441:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12448:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12405:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12405:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12398:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11873:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12249:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12306:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12342:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12334:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12270:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12373:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12373:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12372:14:0"
									},
									"scope": 578,
									"src": "12240:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12940:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12967:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12959:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12959:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12959:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12959:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12984:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12959:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12991:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12951:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12951:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "13062:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13051:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13051:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13071:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13043:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "13043:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13122:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13117:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13144:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13131:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13184:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13158:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13158:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13116:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13233:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13245:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13207:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13207:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13200:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12508:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12765:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12805:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12797:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12822:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12858:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12850:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12874:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12874:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12786:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12926:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12926:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12925:14:0"
									},
									"scope": 578,
									"src": "12756:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13551:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13602:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13569:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13569:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13562:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13274:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13460:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13478:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13537:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13536:14:0"
									},
									"scope": 578,
									"src": "13451:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "14004:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "14034:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14023:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14023:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14043:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14015:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "14015:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14101:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14096:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14096:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14123:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14110:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14155:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14137:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14137:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14095:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14178:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14178:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14171:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13658:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13851:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13888:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13880:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13918:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13905:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13905:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13947:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13933:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13933:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13869:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13990:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13990:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13989:14:0"
									},
									"scope": 578,
									"src": "13842:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14521:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14568:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14574:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14539:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14539:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14532:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14245:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14433:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14462:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14454:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14483:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14470:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14453:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14507:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14507:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14506:14:0"
									},
									"scope": 578,
									"src": "14424:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14977:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15007:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14996:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15016:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14988:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14988:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15076:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15071:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15071:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15098:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15085:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15132:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15112:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15112:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15070:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15181:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15193:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15155:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15155:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15148:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14632:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14827:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14866:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14858:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14896:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14883:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14925:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14911:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14963:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14962:14:0"
									},
									"scope": 578,
									"src": "14818:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15606:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15680:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15766:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15766:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15766:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16081:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16107:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16100:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16100:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16100:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15762:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15789:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15912:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15935:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15964:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15958:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15958:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15939:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16008:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "16012:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "16004:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16004:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "16025:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15997:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15997:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15997:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15964:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "16012:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15903:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15617:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15630:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15645:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15222:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15451:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15478:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15514:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15501:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15535:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15467:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15592:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15591:14:0"
									},
									"scope": 578,
									"src": "15442:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2094,
							"src": "7883:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16169:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16192:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16186:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16204:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16326:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16387:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16387:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16387:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16412:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16364:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16364:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16337:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16337:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16229:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16252:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16283:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16275:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16241:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16326:0:0"
									},
									"scope": 797,
									"src": "16220:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16572:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16633:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16633:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16633:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16662:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16668:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16672:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16610:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16610:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16610:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16583:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16583:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16583:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16448:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16475:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16475:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16506:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16498:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16529:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16521:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16550:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16464:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16572:0:0"
									},
									"scope": 797,
									"src": "16439:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "17066:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17320:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17329:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17320:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17319:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17360:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17352:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17352:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17352:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17367:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17336:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17336:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17379:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17336:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17335:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17319:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17396:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17297:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17297:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17494:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17524:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17524:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17524:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17557:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17501:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17501:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17474:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17474:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17474:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16695:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16965:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16994:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16987:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16987:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "17010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "17036:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16976:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17066:0:0"
									},
									"scope": 797,
									"src": "16956:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17700:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17719:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17711:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17758:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17750:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17750:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17750:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17734:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17734:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17734:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17776:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17734:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17711:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17812:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17842:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17842:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17842:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17866:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17875:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17819:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17819:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17819:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17792:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17792:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17792:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17589:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17678:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17670:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17610:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17700:0:0"
									},
									"scope": 797,
									"src": "17580:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "18025:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "18036:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "18069:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18061:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18108:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18100:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18100:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18100:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18084:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18084:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18084:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18061:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18146:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18162:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18146:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18169:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18138:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18138:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18138:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18236:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18228:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18251:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18266:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18251:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18228:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18306:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18336:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18336:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18360:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18369:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18313:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18313:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18313:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18286:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18286:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18286:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17914:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17946:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17977:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17935:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18025:0:0"
									},
									"scope": 797,
									"src": "17905:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18863:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19230:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19217:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19271:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19277:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19251:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19243:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19243:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19243:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19243:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19217:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19327:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19327:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19327:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19323:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19350:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19424:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19437:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19437:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19436:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19413:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19413:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19413:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19445:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19405:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19405:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18410:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18802:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18829:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18822:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18849:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18836:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18836:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18821:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18863:0:0"
									},
									"scope": 797,
									"src": "18793:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2094,
							"src": "16161:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19534:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19611:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19629:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19629:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19622:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19558:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19568:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19601:9:0"
									},
									"scope": 816,
									"src": "19549:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19722:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19740:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19740:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19733:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19664:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19672:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19706:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19705:16:0"
									},
									"scope": 816,
									"src": "19655:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2094,
							"src": "19516:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19792:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19792:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19781:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19823:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19807:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19807:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19844:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19881:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19865:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19912:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19896:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19864:57:0"
									},
									"src": "19838:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "20043:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20073:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20054:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20054:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "20054:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19930:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20040:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20043:0:0"
									},
									"scope": 917,
									"src": "20029:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20230:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20241:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20102:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20184:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20189:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20221:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20220:9:0"
									},
									"scope": 917,
									"src": "20175:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20376:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20395:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20395:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20406:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20406:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20395:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20420:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20387:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20387:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20387:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20466:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20270:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20364:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20373:2:0"
									},
									"src": "20355:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20880:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20918:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20910:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20891:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20891:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20891:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20483:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20870:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20870:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20835:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20852:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20880:0:0"
									},
									"scope": 917,
									"src": "20826:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21154:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21173:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21193:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21185:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21185:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21185:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21173:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21197:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21165:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21165:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21268:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21249:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21249:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21249:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20937:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21144:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21144:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21093:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21110:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21154:0:0"
									},
									"scope": 917,
									"src": "21084:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21508:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21527:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21519:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21519:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21519:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21555:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21564:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21555:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21555:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21609:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21619:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21588:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21588:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21583:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21293:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21454:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21481:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21473:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21472:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21508:0:0"
									},
									"scope": 917,
									"src": "21445:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2094,
							"src": "19763:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21653:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21683:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21698:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21691:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21691:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21690:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21723:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21723:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21723:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21722:8:0"
									},
									"scope": 927,
									"src": "21674:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2094,
							"src": "21643:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 936,
							"linearizedBaseContracts": [
								936
							],
							"name": "IERC165",
							"nameLocation": "21748:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "21763:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "22125:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "22150:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22143:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 929,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "22143:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22142:20:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22186:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22185:6:0"
									},
									"scope": 936,
									"src": "22116:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2094,
							"src": "21738:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 937,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 936,
										"src": "22220:7:0"
									},
									"id": 938,
									"nodeType": "InheritanceSpecifier",
									"src": "22220:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								936
							],
							"name": "IERC721",
							"nameLocation": "22209:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "22235:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 947,
									"name": "Transfer",
									"nameLocation": "22337:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22346:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22384:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22368:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22388:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22345:67:0"
									},
									"src": "22331:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "22421:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 956,
									"name": "Approval",
									"nameLocation": "22529:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22538:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22577:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22561:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22587:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22537:74:0"
									},
									"src": "22523:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "22620:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 965,
									"name": "ApprovalForAll",
									"nameLocation": "22751:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22782:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22766:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22805:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22789:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22815:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 962,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22765:64:0"
									},
									"src": "22745:85:0"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "22838:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "22931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22949:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "22941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22940:15:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "22987:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "22979:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22978:17:0"
									},
									"scope": 1048,
									"src": "22922:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "23004:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "23156:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23172:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23164:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23163:17:0"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23212:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23204:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23203:15:0"
									},
									"scope": 1048,
									"src": "23147:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "23227:703:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23945:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23980:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24003:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23995:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "24016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23961:77:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24047:0:0"
									},
									"scope": 1048,
									"src": "23936:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "24056:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "24588:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24619:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24611:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24642:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24634:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24600:77:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24686:0:0"
									},
									"scope": 1048,
									"src": "24579:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "24695:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25190:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25182:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25181:29:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25219:0:0"
									},
									"scope": 1048,
									"src": "25165:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "25228:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "25388:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25408:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:17:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25448:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25440:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25439:18:0"
									},
									"scope": 1048,
									"src": "25379:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "25466:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "25799:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25825:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "25817:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "25840:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "25835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25816:34:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25859:0:0"
									},
									"scope": 1048,
									"src": "25790:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "25868:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "26025:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26042:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26065:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26057:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26041:33:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26098:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26097:6:0"
									},
									"scope": 1048,
									"src": "26016:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "26112:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26695:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26730:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26722:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26774:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26766:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26807:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26792:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26711:107:0"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26827:0:0"
									},
									"scope": 1048,
									"src": "26686:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2094,
							"src": "22199:4632:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1063,
							"linearizedBaseContracts": [
								1063
							],
							"name": "IERC721Receiver",
							"nameLocation": "26845:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "26868:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "27376:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27430:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27494:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27479:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27392:113:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27524:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27524:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27523:8:0"
									},
									"scope": 1063,
									"src": "27367:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2094,
							"src": "26835:700:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1071,
							"linearizedBaseContracts": [
								1071
							],
							"name": "INFTMasterChef",
							"nameLocation": "27549:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cf35fddf",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterStakingCompund",
									"nameLocation": "27580:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "27608:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "27600:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "27625:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "27617:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27599:35:0"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27643:0:0"
									},
									"scope": 1071,
									"src": "27571:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2094,
							"src": "27539:108:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1072,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "28035:7:0"
									},
									"id": 1073,
									"nodeType": "InheritanceSpecifier",
									"src": "28035:7:0"
								},
								{
									"baseName": {
										"id": 1074,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "28044:15:0"
									},
									"id": 1075,
									"nodeType": "InheritanceSpecifier",
									"src": "28044:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2093,
							"linearizedBaseContracts": [
								2093,
								1063,
								917,
								816
							],
							"name": "NFTStake",
							"nameLocation": "28023:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1078,
									"libraryName": {
										"id": 1076,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "28073:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28067:27:0",
									"typeName": {
										"id": 1077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28086:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1082,
									"libraryName": {
										"id": 1079,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "28106:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28100:27:0",
									"typeName": {
										"id": 1081,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1080,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "28120:6:0"
										},
										"referencedDeclaration": 286,
										"src": "28120:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTStake.UserInfo",
									"id": 1090,
									"members": [
										{
											"constant": false,
											"id": 1085,
											"mutability": "mutable",
											"name": "tokenIds",
											"nameLocation": "28197:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28187:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ArrayTypeName",
												"src": "28187:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1087,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "28224:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28216:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1086,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28216:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1089,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "28294:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28286:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1088,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28286:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "28167:8:0",
									"nodeType": "StructDefinition",
									"scope": 2093,
									"src": "28160:817:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTStake.PoolInfo",
									"id": 1100,
									"members": [
										{
											"constant": false,
											"id": 1093,
											"mutability": "mutable",
											"name": "NFTToken",
											"nameLocation": "29045:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29037:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$1048",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 1092,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1091,
													"name": "IERC721",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1048,
													"src": "29037:7:0"
												},
												"referencedDeclaration": 1048,
												"src": "29037:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1048",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1095,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "29105:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29097:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1094,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29097:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1097,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "29217:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29209:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1096,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29209:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1099,
											"mutability": "mutable",
											"name": "accDDTPerShare",
											"nameLocation": "29303:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29295:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29295:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "29017:8:0",
									"nodeType": "StructDefinition",
									"scope": 2093,
									"src": "29010:369:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e4d09896",
									"id": 1103,
									"mutability": "mutable",
									"name": "NFTMasterChef",
									"nameLocation": "29409:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29387:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
										"typeString": "contract INFTMasterChef"
									},
									"typeName": {
										"id": 1102,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1101,
											"name": "INFTMasterChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1071,
											"src": "29387:14:0"
										},
										"referencedDeclaration": 1071,
										"src": "29387:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
											"typeString": "contract INFTMasterChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3cba55",
									"id": 1106,
									"mutability": "mutable",
									"name": "DDT",
									"nameLocation": "29468:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29454:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1105,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1104,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "29454:6:0"
										},
										"referencedDeclaration": 286,
										"src": "29454:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d49e77cd",
									"id": 1108,
									"mutability": "mutable",
									"name": "devaddr",
									"nameLocation": "29514:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29499:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "29499:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f395db2c",
									"id": 1110,
									"mutability": "mutable",
									"name": "DDTPerBlock",
									"nameLocation": "29581:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29566:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1109,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 1113,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "29660:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29645:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29645:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29679:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 1116,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "29804:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29783:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 1115,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1114,
											"name": "IMigratorChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "29783:13:0"
										},
										"referencedDeclaration": 927,
										"src": "29783:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1120,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "29864:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29846:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
										"typeString": "struct NFTStake.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1118,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1117,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1100,
												"src": "29846:8:0"
											},
											"referencedDeclaration": 1100,
											"src": "29846:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
												"typeString": "struct NFTStake.PoolInfo"
											}
										},
										"id": 1119,
										"nodeType": "ArrayTypeName",
										"src": "29846:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr",
											"typeString": "struct NFTStake.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1127,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "29984:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "29928:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))"
									},
									"typeName": {
										"id": 1126,
										"keyType": {
											"id": 1121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29936:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "29928:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))"
										},
										"valueType": {
											"id": 1125,
											"keyType": {
												"id": 1122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29955:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "29947:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
												"typeString": "mapping(address => struct NFTStake.UserInfo)"
											},
											"valueType": {
												"id": 1124,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1123,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1090,
													"src": "29966:8:0"
												},
												"referencedDeclaration": 1090,
												"src": "29966:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
													"typeString": "struct NFTStake.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1130,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "30102:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "30087:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30087:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30120:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 1132,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "30192:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2093,
									"src": "30177:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30177:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1140,
									"name": "Deposit",
									"nameLocation": "30217:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30241:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30225:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30263:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30247:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30276:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30268:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30224:59:0"
									},
									"src": "30211:73:0"
								},
								{
									"anonymous": false,
									"id": 1148,
									"name": "Withdraw",
									"nameLocation": "30296:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30321:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30305:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30343:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30327:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30356:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30304:59:0"
									},
									"src": "30290:74:0"
								},
								{
									"anonymous": false,
									"id": 1156,
									"name": "EmergencyWithdraw",
									"nameLocation": "30376:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30451:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30435:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30473:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30393:93:0"
									},
									"src": "30370:117:0"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "30664:171:0",
										"statements": [
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "30675:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "_DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "30681:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "30675:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "30675:10:0"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "NFTMasterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "30696:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
															"typeString": "contract INFTMasterChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1176,
														"name": "_NFTMasterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "30712:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
															"typeString": "contract INFTMasterChef"
														}
													},
													"src": "30696:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
														"typeString": "contract INFTMasterChef"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "30696:30:0"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "30737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1180,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "30747:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30737:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "30737:18:0"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "DDTPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "30766:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "_DDTPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "30780:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30766:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "30766:26:0"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "30803:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "30816:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30803:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "30803:24:0"
											}
										]
									},
									"id": 1192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_DDT",
												"nameLocation": "30524:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30517:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1157,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "30517:6:0"
													},
													"referencedDeclaration": 286,
													"src": "30517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_NFTMasterChef",
												"nameLocation": "30554:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30539:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
													"typeString": "contract INFTMasterChef"
												},
												"typeName": {
													"id": 1161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1160,
														"name": "INFTMasterChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1071,
														"src": "30539:14:0"
													},
													"referencedDeclaration": 1071,
													"src": "30539:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
														"typeString": "contract INFTMasterChef"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "30587:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30579:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_DDTPerBlock",
												"nameLocation": "30614:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30606:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "30645:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30637:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30506:157:0"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30664:0:0"
									},
									"scope": 2093,
									"src": "30495:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1062
									],
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "31037:56:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1207,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "31055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NFTStake_$2093",
																"typeString": "contract NFTStake"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1212,
														"src": "31055:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "31055:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1210,
												"nodeType": "Return",
												"src": "31048:37:0"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "30843:80:0",
										"text": " Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "30938:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31011:8:0"
									},
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30982:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30982:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30954:41:0"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "31029:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31028:8:0"
									},
									"scope": 2093,
									"src": "30929:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "31170:54:0",
										"statements": [
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "31181:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "31200:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31181:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "31181:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1216,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "31160:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31160:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "31110:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "31135:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "31127:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31126:26:0"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31170:0:0"
									},
									"scope": 2093,
									"src": "31101:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "31286:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1229,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "31304:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "31304:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1231,
												"nodeType": "Return",
												"src": "31297:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "31241:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31251:2:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "31277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31276:9:0"
									},
									"scope": 2093,
									"src": "31232:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "31586:472:0",
										"statements": [
											{
												"condition": {
													"id": 1245,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "31601:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "31597:61:0",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "31614:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1246,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "31629:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31629:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "31629:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "31676:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "31668:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1261,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1253,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31694:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31694:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1255,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "31709:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "31694:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1259,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "31737:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31694:53:0",
													"trueExpression": {
														"expression": {
															"id": 1257,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31722:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31668:79:0"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "31758:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1265,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "31796:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1263,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "31776:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31776:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31776:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31758:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "31758:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1273,
																	"name": "_NFTToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "31885:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$1048",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1274,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "31925:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1275,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "31972:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32022:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$1048",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1272,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "31847:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1100_storage_ptr_$",
																	"typeString": "type(struct NFTStake.PoolInfo storage pointer)"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"NFTToken",
																"allocPoint",
																"lastRewardBlock",
																"accDDTPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "31847:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_memory_ptr",
																"typeString": "struct NFTStake.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1100_memory_ptr",
																"typeString": "struct NFTStake.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1269,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "31819:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "31819:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1100_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTStake.PoolInfo storage ref[] storage pointer,struct NFTStake.PoolInfo storage ref)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31819:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "31819:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1242,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "31576:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31576:9:0"
										}
									],
									"name": "add",
									"nameLocation": "31505:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "31518:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31510:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_NFTToken",
												"nameLocation": "31539:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31531:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1048",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1048,
														"src": "31531:7:0"
													},
													"referencedDeclaration": 1048,
													"src": "31531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1048",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "31555:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31550:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31550:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31508:60:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31586:0:0"
									},
									"scope": 2093,
									"src": "31496:562:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "32237:221:0",
										"statements": [
											{
												"condition": {
													"id": 1292,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1287,
													"src": "32252:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "32248:61:0",
												"trueBody": {
													"id": 1296,
													"nodeType": "Block",
													"src": "32265:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1293,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "32280:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32280:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1295,
															"nodeType": "ExpressionStatement",
															"src": "32280:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "32319:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1307,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "32388:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1301,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1120,
																				"src": "32357:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																					"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1303,
																			"indexExpression": {
																				"id": 1302,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "32366:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32357:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
																				"typeString": "struct NFTStake.PoolInfo storage ref"
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1095,
																		"src": "32357:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1299,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "32337:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "32337:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32337:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "32337:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32337:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32319:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "32319:81:0"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1311,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "32411:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																	"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1313,
															"indexExpression": {
																"id": 1312,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "32420:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32411:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
																"typeString": "struct NFTStake.PoolInfo storage ref"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1095,
														"src": "32411:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1315,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "32439:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32411:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "32411:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "32227:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32227:9:0"
										}
									],
									"name": "set",
									"nameLocation": "32162:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "32189:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32181:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "32207:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32202:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32202:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32165:54:0"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32237:0:0"
									},
									"scope": 2093,
									"src": "32153:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "32597:39:0",
										"statements": [
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1327,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "32608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1328,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "32619:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "32608:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "32608:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1324,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "32587:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32587:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "32543:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "32569:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "32555:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1320,
														"name": "IMigratorChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "32555:13:0"
													},
													"referencedDeclaration": 927,
													"src": "32555:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32554:25:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32597:0:0"
									},
									"scope": 2093,
									"src": "32534:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "32793:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "32831:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1343,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "32820:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1341,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "32812:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "32812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32812:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "32812:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32812:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1348,
												"nodeType": "Return",
												"src": "32805:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "32721:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "32743:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32735:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "32758:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32750:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32734:28:0"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32784:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32783:9:0"
									},
									"scope": 2093,
									"src": "32712:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "32957:95:0",
										"statements": [
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32985:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "32968:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1361,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1360,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "32968:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "32968:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1363,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "32992:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1365,
														"indexExpression": {
															"id": 1364,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "33001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32992:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1367,
													"indexExpression": {
														"id": 1366,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "33007:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32992:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32968:45:0"
											},
											{
												"expression": {
													"expression": {
														"id": 1369,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "33031:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo storage pointer"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "tokenIds",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1085,
													"src": "33031:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1371,
												"nodeType": "Return",
												"src": "33024:20:0"
											}
										]
									},
									"functionSelector": "d5545992",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTokenIds",
									"nameLocation": "32873:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32897:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32889:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "32911:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32903:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32888:29:0"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32939:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1356,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1357,
													"nodeType": "ArrayTypeName",
													"src": "32939:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32938:18:0"
									},
									"scope": 2093,
									"src": "32864:188:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "33195:673:0",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33223:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33206:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1383,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1382,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "33206:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "33206:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"baseExpression": {
														"id": 1385,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "33230:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1387,
													"indexExpression": {
														"id": 1386,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "33239:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33230:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33206:38:0"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33272:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33255:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1390,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1389,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "33255:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "33255:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1392,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "33279:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1394,
														"indexExpression": {
															"id": 1393,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "33288:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33279:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1396,
													"indexExpression": {
														"id": 1395,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "33294:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33279:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33255:45:0"
											},
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "accDDTPerShare",
														"nameLocation": "33319:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33311:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"expression": {
														"id": 1400,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "33336:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo storage pointer"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accDDTPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1099,
													"src": "33336:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33311:44:0"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "NFTSupply",
														"nameLocation": "33374:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33366:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "33418:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33410:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33410:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33410:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1405,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "33386:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "33386:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "33386:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33386:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33366:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1414,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "33439:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "33439:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1416,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "33454:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "33454:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "33439:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1419,
															"name": "NFTSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "33478:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33491:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "33478:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "33439:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "33435:346:0",
												"trueBody": {
													"id": 1459,
													"nodeType": "Block",
													"src": "33494:287:0",
													"statements": [
														{
															"assignments": [
																1424
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1424,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "33517:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1459,
																	"src": "33509:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1423,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33509:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1431,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1426,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "33544:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1097,
																		"src": "33544:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1428,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "33566:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "33566:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1425,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "33530:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33530:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33509:70:0"
														},
														{
															"assignments": [
																1433
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1433,
																	"mutability": "mutable",
																	"name": "DDTReward",
																	"nameLocation": "33602:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1459,
																	"src": "33594:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33594:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1445,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1443,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "33667:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1439,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1384,
																					"src": "33646:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																						"typeString": "struct NFTStake.PoolInfo storage pointer"
																					}
																				},
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1095,
																				"src": "33646:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1436,
																						"name": "DDTPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1110,
																						"src": "33629:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1434,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "33614:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "33614:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33614:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "33614:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33614:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "33614:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33614:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33594:89:0"
														},
														{
															"expression": {
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1446,
																	"name": "accDDTPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "33698:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1454,
																					"name": "NFTSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "33758:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1451,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33748:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1449,
																							"name": "DDTReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1433,
																							"src": "33734:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "33734:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33734:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "33734:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33734:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1447,
																			"name": "accDDTPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "33715:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33715:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33715:54:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33698:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "33698:71:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1470,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "33844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "33844:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33834:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1464,
																			"name": "accDDTPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "33814:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1461,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1391,
																				"src": "33798:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "33798:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "33798:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33798:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "33798:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33798:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "33798:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33798:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1473,
												"nodeType": "Return",
												"src": "33791:69:0"
											}
										]
									},
									"functionSelector": "2080baab",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingDDT",
									"nameLocation": "33124:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "33143:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33135:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "33157:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33149:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33134:29:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33187:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33186:9:0"
									},
									"scope": 2093,
									"src": "33115:753:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "33985:146:0",
										"statements": [
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "34004:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "33996:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33996:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"expression": {
														"id": 1480,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "34013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "34013:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33996:32:0"
											},
											{
												"body": {
													"id": 1497,
													"nodeType": "Block",
													"src": "34082:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "34108:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1493,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "34097:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34097:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "34097:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1487,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "34061:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1488,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "34067:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34061:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1498,
												"initializationExpression": {
													"assignments": [
														1484
													],
													"declarations": [
														{
															"constant": false,
															"id": 1484,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "34052:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1498,
															"src": "34044:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1483,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1486,
													"initialValue": {
														"hexValue": "30",
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34058:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "34044:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "34075:5:0",
														"subExpression": {
															"id": 1490,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "34077:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1492,
													"nodeType": "ExpressionStatement",
													"src": "34075:5:0"
												},
												"nodeType": "ForStatement",
												"src": "34039:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "33960:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33975:2:0"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33985:0:0"
									},
									"scope": 2093,
									"src": "33951:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "34248:688:0",
										"statements": [
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34276:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34259:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1506,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1505,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "34259:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "34259:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1511,
												"initialValue": {
													"baseExpression": {
														"id": 1508,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "34283:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1510,
													"indexExpression": {
														"id": 1509,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "34292:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34283:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34259:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1512,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "34312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1514,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34328:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1097,
														"src": "34328:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34312:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1519,
												"nodeType": "IfStatement",
												"src": "34308:75:0",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "34350:33:0",
													"statements": [
														{
															"functionReturnParameters": 1504,
															"id": 1517,
															"nodeType": "Return",
															"src": "34365:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "NFTSupply",
														"nameLocation": "34401:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34393:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1527,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34445:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34437:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34437:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34437:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1522,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "34413:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "34413:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "34413:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34413:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34393:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1531,
														"name": "NFTSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "34466:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34466:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "34462:103:0",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "34482:83:0",
													"statements": [
														{
															"expression": {
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1534,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "34497:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																			"typeString": "struct NFTStake.PoolInfo storage pointer"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1097,
																	"src": "34497:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1537,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "34520:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "34520:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34497:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "34497:35:0"
														},
														{
															"functionReturnParameters": 1504,
															"id": 1541,
															"nodeType": "Return",
															"src": "34547:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "34583:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34575:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1547,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "34610:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "34610:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1549,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "34632:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "34632:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1546,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "34596:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34596:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34575:70:0"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "DDTReward",
														"nameLocation": "34664:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34656:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34656:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "34729:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1560,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "34708:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																			"typeString": "struct NFTStake.PoolInfo storage pointer"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1095,
																	"src": "34708:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1557,
																			"name": "DDTPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "34691:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1555,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "34676:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "34676:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34676:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "34676:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34676:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "34676:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34676:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34656:89:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1572,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34773:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34765:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34765:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "DDTReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "34780:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1567,
															"name": "DDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "34756:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "34756:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34756:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "34756:34:0"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1577,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34801:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accDDTPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1099,
														"src": "34801:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1588,
																		"name": "NFTSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "34871:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34861:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1583,
																				"name": "DDTReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "34847:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "34847:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34847:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "34847:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34847:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1580,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "34823:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																		"typeString": "struct NFTStake.PoolInfo storage pointer"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accDDTPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1099,
																"src": "34823:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "34823:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34823:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34801:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "34801:81:0"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1593,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34893:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1097,
														"src": "34893:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1596,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34916:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "34916:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34893:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "34893:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "34216:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "34235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "34227:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34226:14:0"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34248:0:0"
									},
									"scope": 2093,
									"src": "34207:729:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "35061:740:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1609,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "35080:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35092:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "35080:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206964206973206e6f7420676f6f64",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35095:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd",
																"typeString": "literal_string \"Token id is not good\""
															},
															"value": "Token id is not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c92971ebbd72ec74ac4eff836a2a47e0d297c32161f2dcea373f239f76ef47fd",
																"typeString": "literal_string \"Token id is not good\""
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35072:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "35072:46:0"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35146:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "35129:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1616,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1615,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "35129:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "35129:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"baseExpression": {
														"id": 1618,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "35153:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1620,
													"indexExpression": {
														"id": 1619,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "35162:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35153:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35129:38:0"
											},
											{
												"assignments": [
													1624
												],
												"declarations": [
													{
														"constant": false,
														"id": 1624,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35195:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "35178:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1623,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1622,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "35178:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "35178:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1631,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1625,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "35202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1627,
														"indexExpression": {
															"id": 1626,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35211:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35202:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1630,
													"indexExpression": {
														"expression": {
															"id": 1628,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35217:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35217:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35202:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35178:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1633,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1632,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "35239:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35239:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "35239:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1636,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "35270:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1637,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "35270:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35284:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35270:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1668,
												"nodeType": "IfStatement",
												"src": "35266:233:0",
												"trueBody": {
													"id": 1667,
													"nodeType": "Block",
													"src": "35287:212:0",
													"statements": [
														{
															"assignments": [
																1641
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1641,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "35310:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1667,
																	"src": "35302:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1640,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35302:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1655,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1652,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "35371:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1089,
																		"src": "35371:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35361:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1645,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1617,
																							"src": "35336:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																								"typeString": "struct NFTStake.PoolInfo storage pointer"
																							}
																						},
																						"id": 1646,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accDDTPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1099,
																						"src": "35336:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1642,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1624,
																							"src": "35320:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																								"typeString": "struct NFTStake.UserInfo storage pointer"
																							}
																						},
																						"id": 1643,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1087,
																						"src": "35320:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "35320:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35320:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "35320:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35320:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "35320:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35320:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35302:85:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1656,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "35405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35415:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "35405:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1666,
															"nodeType": "IfStatement",
															"src": "35402:86:0",
															"trueBody": {
																"id": 1665,
																"nodeType": "Block",
																"src": "35417:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1660,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "35452:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "35452:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1662,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "35464:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1659,
																				"name": "safeDDTTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "35436:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35436:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1664,
																		"nodeType": "ExpressionStatement",
																		"src": "35436:36:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1676,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "35548:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "35548:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35540:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1674,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35540:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35540:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1681,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "35569:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35561:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1679,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35561:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35561:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1683,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35576:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1669,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "35509:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "35509:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "35509:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35509:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "35509:76:0"
											},
											{
												"expression": {
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1686,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "35596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "35596:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35626:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 1689,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "35610:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																		"typeString": "struct NFTStake.UserInfo storage pointer"
																	}
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1087,
																"src": "35610:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "35610:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35610:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35596:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "35596:32:0"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1696,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "35639:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "35639:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35698:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1702,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "35673:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accDDTPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1099,
																		"src": "35673:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1699,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "35657:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "35657:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "35657:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35657:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "35657:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35657:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35639:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "35639:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1715,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35733:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1710,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "35714:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1085,
															"src": "35714:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "35714:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35714:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "35714:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35766:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35766:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1721,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35778:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1722,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35784:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1718,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "35758:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35758:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "EmitStatement",
												"src": "35753:40:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "35014:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "35030:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "35022:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "35044:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "35036:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35021:32:0"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35061:0:0"
									},
									"scope": 2093,
									"src": "35005:796:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "35911:1481:0",
										"statements": [
											{
												"assignments": [
													1735
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35939:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1940,
														"src": "35922:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1733,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "35922:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "35922:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1739,
												"initialValue": {
													"baseExpression": {
														"id": 1736,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "35946:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1738,
													"indexExpression": {
														"id": 1737,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "35955:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35946:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35922:38:0"
											},
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35988:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1940,
														"src": "35971:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1741,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1740,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "35971:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "35971:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1749,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1743,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "35995:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1745,
														"indexExpression": {
															"id": 1744,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "36004:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35995:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1748,
													"indexExpression": {
														"expression": {
															"id": 1746,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "36010:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "36010:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35995:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35971:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1751,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "36042:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																		"typeString": "struct NFTStake.UserInfo storage pointer"
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1087,
																"src": "36042:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36056:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36042:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36059:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36034:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36034:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "36034:46:0"
											},
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "36101:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1940,
														"src": "36093:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"nodeType": "VariableDeclarationStatement",
												"src": "36093:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1761,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "36122:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36134:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36122:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1931,
													"nodeType": "Block",
													"src": "36455:878:0",
													"statements": [
														{
															"assignments": [
																1811
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1811,
																	"mutability": "mutable",
																	"name": "hasTokenId",
																	"nameLocation": "36478:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1931,
																	"src": "36470:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1810,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36470:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1813,
															"initialValue": {
																"hexValue": "30",
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36491:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36470:22:0"
														},
														{
															"assignments": [
																1815
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1815,
																	"mutability": "mutable",
																	"name": "tokenIdIndex",
																	"nameLocation": "36515:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1931,
																	"src": "36507:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1814,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36507:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1816,
															"nodeType": "VariableDeclarationStatement",
															"src": "36507:20:0"
														},
														{
															"body": {
																"id": 1844,
																"nodeType": "Block",
																"src": "36585:162:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 1828,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1742,
																						"src": "36607:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1829,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "tokenIds",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1085,
																					"src": "36607:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 1831,
																				"indexExpression": {
																					"id": 1830,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1818,
																					"src": "36621:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "36607:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1832,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1730,
																				"src": "36627:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36607:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1843,
																		"nodeType": "IfStatement",
																		"src": "36604:128:0",
																		"trueBody": {
																			"id": 1842,
																			"nodeType": "Block",
																			"src": "36636:96:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1836,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1834,
																							"name": "hasTokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1811,
																							"src": "36659:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "31",
																							"id": 1835,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36672:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "36659:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1837,
																					"nodeType": "ExpressionStatement",
																					"src": "36659:14:0"
																				},
																				{
																					"expression": {
																						"id": 1840,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1838,
																							"name": "tokenIdIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1815,
																							"src": "36696:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1839,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1818,
																							"src": "36711:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "36696:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1841,
																					"nodeType": "ExpressionStatement",
																					"src": "36696:16:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1820,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "36557:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1821,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "36559:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenIds",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1085,
																		"src": "36559:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "36559:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36557:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1845,
															"initializationExpression": {
																"assignments": [
																	1818
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1818,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "36554:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1845,
																		"src": "36546:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1817,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "36546:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1819,
																"nodeType": "VariableDeclarationStatement",
																"src": "36546:9:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "36581:3:0",
																	"subExpression": {
																		"id": 1825,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "36581:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1827,
																"nodeType": "ExpressionStatement",
																"src": "36581:3:0"
															},
															"nodeType": "ForStatement",
															"src": "36542:205:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1847,
																			"name": "hasTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "36769:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36783:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36769:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f7520617265206e6f74204f776e6572206f6620746f6b656e206964",
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36786:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																			"typeString": "literal_string \"You are not Owner of token id\""
																		},
																		"value": "You are not Owner of token id"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																			"typeString": "literal_string \"You are not Owner of token id\""
																		}
																	],
																	"id": 1846,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "36761:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36761:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1852,
															"nodeType": "ExpressionStatement",
															"src": "36761:57:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1854,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "36858:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1853,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "36847:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36847:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1856,
															"nodeType": "ExpressionStatement",
															"src": "36847:16:0"
														},
														{
															"expression": {
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1857,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "36878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1868,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1742,
																				"src": "36939:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1089,
																			"src": "36939:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653132",
																					"id": 1865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "36929:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1861,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1735,
																								"src": "36904:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																									"typeString": "struct NFTStake.PoolInfo storage pointer"
																								}
																							},
																							"id": 1862,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "accDDTPerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1099,
																							"src": "36904:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1858,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1742,
																								"src": "36888:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																									"typeString": "struct NFTStake.UserInfo storage pointer"
																								}
																							},
																							"id": 1859,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1087,
																							"src": "36888:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1860,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "36888:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36888:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "36888:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36888:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "36888:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36888:67:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36878:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1872,
															"nodeType": "ExpressionStatement",
															"src": "36878:77:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1873,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "36973:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36983:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "36973:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1883,
															"nodeType": "IfStatement",
															"src": "36970:86:0",
															"trueBody": {
																"id": 1882,
																"nodeType": "Block",
																"src": "36985:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1877,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "37020:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1878,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "37020:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1879,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1759,
																					"src": "37032:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1876,
																				"name": "safeDDTTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "37004:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37004:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1881,
																		"nodeType": "ExpressionStatement",
																		"src": "37004:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1884,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "37070:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1087,
																	"src": "37070:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37100:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1887,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1742,
																				"src": "37084:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "37084:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "37084:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37084:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37070:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1893,
															"nodeType": "ExpressionStatement",
															"src": "37070:32:0"
														},
														{
															"expression": {
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1894,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "37117:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "37117:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37176:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1900,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "37151:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																							"typeString": "struct NFTStake.PoolInfo storage pointer"
																						}
																					},
																					"id": 1901,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "accDDTPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1099,
																					"src": "37151:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1897,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1742,
																						"src": "37135:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1898,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1087,
																					"src": "37135:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 107,
																				"src": "37135:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37135:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 124,
																		"src": "37135:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37135:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37117:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1907,
															"nodeType": "ExpressionStatement",
															"src": "37117:64:0"
														},
														{
															"expression": {
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "37196:34:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1908,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "37203:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenIds",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1085,
																		"src": "37203:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1911,
																	"indexExpression": {
																		"id": 1910,
																		"name": "tokenIdIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "37217:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "37203:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1913,
															"nodeType": "ExpressionStatement",
															"src": "37196:34:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1921,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "37284:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTStake_$2093",
																					"typeString": "contract NFTStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTStake_$2093",
																					"typeString": "contract NFTStake"
																				}
																			],
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37276:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1919,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37276:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37276:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1925,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "37299:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "37299:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37291:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37291:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37291:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1928,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "37312:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1914,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "37245:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1093,
																		"src": "37245:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1048",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 991,
																	"src": "37245:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37245:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1930,
															"nodeType": "ExpressionStatement",
															"src": "37245:76:0"
														}
													]
												},
												"id": 1932,
												"nodeType": "IfStatement",
												"src": "36119:1214:0",
												"trueBody": {
													"id": 1809,
													"nodeType": "Block",
													"src": "36136:314:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1765,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "36162:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1764,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "36151:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36151:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1767,
															"nodeType": "ExpressionStatement",
															"src": "36151:16:0"
														},
														{
															"expression": {
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1768,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "36182:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1779,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1742,
																				"src": "36243:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1089,
																			"src": "36243:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653132",
																					"id": 1776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "36233:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1772,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1735,
																								"src": "36208:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																									"typeString": "struct NFTStake.PoolInfo storage pointer"
																								}
																							},
																							"id": 1773,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "accDDTPerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1099,
																							"src": "36208:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1769,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1742,
																								"src": "36192:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																									"typeString": "struct NFTStake.UserInfo storage pointer"
																								}
																							},
																							"id": 1770,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1087,
																							"src": "36192:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "36192:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36192:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "36192:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36192:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "36192:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36192:67:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36182:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1783,
															"nodeType": "ExpressionStatement",
															"src": "36182:77:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1784,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "36277:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36287:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "36277:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1794,
															"nodeType": "IfStatement",
															"src": "36274:86:0",
															"trueBody": {
																"id": 1793,
																"nodeType": "Block",
																"src": "36289:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1788,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "36324:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1789,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "36324:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1790,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1759,
																					"src": "36336:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1787,
																				"name": "safeDDTTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "36308:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36308:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1792,
																		"nodeType": "ExpressionStatement",
																		"src": "36308:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1795,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "36374:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "36374:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36433:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1801,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "36408:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																							"typeString": "struct NFTStake.PoolInfo storage pointer"
																						}
																					},
																					"id": 1802,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "accDDTPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1099,
																					"src": "36408:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1798,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1742,
																						"src": "36392:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1799,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1087,
																					"src": "36392:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 107,
																				"src": "36392:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36392:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 124,
																		"src": "36392:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36392:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36374:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "36374:64:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1934,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37357:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37357:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1936,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "37369:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1937,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "37375:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "37348:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37348:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "EmitStatement",
												"src": "37343:41:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "35863:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "35880:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "35872:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "35894:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "35886:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35871:32:0"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35911:0:0"
									},
									"scope": 2093,
									"src": "35854:1538:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "37441:536:0",
										"statements": [
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "37469:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "37452:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1947,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1946,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "37452:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "37452:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"baseExpression": {
														"id": 1949,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "37476:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1951,
													"indexExpression": {
														"id": 1950,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "37485:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37476:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37452:38:0"
											},
											{
												"assignments": [
													1955
												],
												"declarations": [
													{
														"constant": false,
														"id": 1955,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "37518:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "37501:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1954,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1953,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "37501:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "37501:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1956,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "37525:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1958,
														"indexExpression": {
															"id": 1957,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "37534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "37525:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1961,
													"indexExpression": {
														"expression": {
															"id": 1959,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "37540:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "37540:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37525:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37501:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1964,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "37573:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1963,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "37562:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37562:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "37562:16:0"
											},
											{
												"assignments": [
													1968
												],
												"declarations": [
													{
														"constant": false,
														"id": 1968,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "37597:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "37589:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1979,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "37658:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "37658:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37648:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1972,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1948,
																				"src": "37623:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																					"typeString": "struct NFTStake.PoolInfo storage pointer"
																				}
																			},
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accDDTPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1099,
																			"src": "37623:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1969,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1955,
																				"src": "37607:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1970,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "37607:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "37607:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37607:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "37607:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37607:46:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "37607:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37607:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37589:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1984,
																"name": "pending",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "37693:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37703:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37693:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37706:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 1983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37685:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "37685:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1995,
																	"name": "NFTMasterChef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "37754:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																		"typeString": "contract INFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																		"typeString": "contract INFTMasterChef"
																	}
																],
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37746:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1993,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37746:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37746:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "37770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1990,
															"name": "DDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "37734:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "37734:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37734:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "37734:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2003,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "37823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2004,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37832:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37832:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2000,
															"name": "NFTMasterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "37789:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																"typeString": "contract INFTMasterChef"
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "enterStakingCompund",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "37789:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address) external"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37789:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "37789:54:0"
											},
											{
												"expression": {
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2008,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "37854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "37854:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37913:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2014,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "37888:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accDDTPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1099,
																		"src": "37888:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2011,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1955,
																			"src": "37872:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "37872:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "37872:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37872:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "37872:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37872:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37854:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2021,
												"nodeType": "ExpressionStatement",
												"src": "37854:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2023,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37943:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37943:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2025,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "37955:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2026,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "37961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2022,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "37934:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37934:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "EmitStatement",
												"src": "37929:40:0"
											}
										]
									},
									"functionSelector": "1395d8c9",
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compundDDT",
									"nameLocation": "37409:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "37428:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "37420:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37419:14:0"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37441:0:0"
									},
									"scope": 2093,
									"src": "37400:577:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "38153:207:0",
										"statements": [
											{
												"assignments": [
													2038
												],
												"declarations": [
													{
														"constant": false,
														"id": 2038,
														"mutability": "mutable",
														"name": "DDTbal",
														"nameLocation": "38172:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2067,
														"src": "38164:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2037,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2046,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2043,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "38203:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2093",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38195:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38195:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38195:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2039,
															"name": "DDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "38181:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "38181:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38181:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38164:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2047,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "38224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2048,
														"name": "DDTbal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "38234:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38224:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "38300:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2061,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2032,
																		"src": "38328:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2062,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2034,
																		"src": "38333:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2058,
																		"name": "DDT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "38315:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "38315:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38315:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2064,
															"nodeType": "ExpressionStatement",
															"src": "38315:26:0"
														}
													]
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "38220:133:0",
												"trueBody": {
													"id": 2057,
													"nodeType": "Block",
													"src": "38242:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2053,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2032,
																		"src": "38270:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2054,
																		"name": "DDTbal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "38275:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2050,
																		"name": "DDT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "38257:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "38257:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38257:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2056,
															"nodeType": "ExpressionStatement",
															"src": "38257:25:0"
														}
													]
												}
											}
										]
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDDTTransfer",
									"nameLocation": "38098:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "38122:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "38114:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "38135:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "38127:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38113:30:0"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38153:0:0"
									},
									"scope": 2093,
									"src": "38089:271:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "38426:37:0",
										"statements": [
											{
												"expression": {
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2075,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "38437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2076,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2070,
														"src": "38447:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "38437:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "38437:18:0"
											}
										]
									},
									"functionSelector": "d0d41fe1",
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2072,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "38416:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38416:9:0"
										}
									],
									"name": "setDevAddress",
									"nameLocation": "38377:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "38399:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "38391:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38390:18:0"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38426:0:0"
									},
									"scope": 2093,
									"src": "38368:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "38534:42:0",
										"statements": [
											{
												"expression": {
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2087,
														"name": "DDTPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "38545:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2088,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "38559:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38545:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "38545:23:0"
											}
										]
									},
									"functionSelector": "612eee43",
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2085,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2084,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "38524:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38524:9:0"
										}
									],
									"name": "updateDDTPerBlock",
									"nameLocation": "38480:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "38506:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "38498:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38497:19:0"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38534:0:0"
									},
									"scope": 2093,
									"src": "38471:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2094,
							"src": "28014:10565:0",
							"usedErrors": []
						}
					],
					"src": "173:38406:0"
				},
				"id": 0
			}
		}
	}
}
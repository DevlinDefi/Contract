{
	"id": "9d54cbabb873571f3477d52bd2dc5f56",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    \r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface LP {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (IERC20);\r\n\r\n    function token1() external view returns (IERC20);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    using SafeMath for uint256;\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint256){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r\n\r\n        uint256 phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))));\r\n        uint256 phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1()))));\r\n        return (phase2);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204f2063935a2a0448ac6bb878f828275ad3f74f93c3dc4bed9aeeeab8df95b70664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f2063935a2a0448ac6bb878f828275ad3f74f93c3dc4bed9aeeeab8df95b70664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F KECCAK256 PUSH4 0x935A2A04 BASEFEE 0xAC PUSH12 0xB878F828275AD3F74F93C3DC 0x4B 0xED SWAP11 0xEE 0xEA 0xB8 0xDF SWAP6 0xB7 MOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f2063935a2a0448ac6bb878f828275ad3f74f93c3dc4bed9aeeeab8df95b70664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F KECCAK256 PUSH4 0x935A2A04 BASEFEE 0xAC PUSH12 0xB878F828275AD3F74F93C3DC 0x4B 0xED SWAP11 0xEE 0xEA 0xB8 0xDF SWAP6 0xB7 MOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f2063935a2a0448ac6bb878f828275ad3f74f93c3dc4bed9aeeeab8df95b70664736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x58e161507e999654b8dd5e4d87af504afd37592260ad6361c79844b198230acc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab6f513fc24a3afe281fb8f2a511093be20b03c7a8f423b0745467f61dc68b82\",\"dweb:/ipfs/Qmc8pjTtJmXpYPa5wP72XRXjkTdjizBeqhbwAXoRyJJFUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x58e161507e999654b8dd5e4d87af504afd37592260ad6361c79844b198230acc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab6f513fc24a3afe281fb8f2a511093be20b03c7a8f423b0745467f61dc68b82\",\"dweb:/ipfs/Qmc8pjTtJmXpYPa5wP72XRXjkTdjizBeqhbwAXoRyJJFUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LP": {
					"abi": [
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LP\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x58e161507e999654b8dd5e4d87af504afd37592260ad6361c79844b198230acc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab6f513fc24a3afe281fb8f2a511093be20b03c7a8f423b0745467f61dc68b82\",\"dweb:/ipfs/Qmc8pjTtJmXpYPa5wP72XRXjkTdjizBeqhbwAXoRyJJFUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract LP",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":13649:14569  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":13728:13770  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13799:13841  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13865:13884  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":13848:13884  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":13649:14569  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":13649:14569  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x344e49d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":14179:14566  function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":14179:14566  function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":14258:14265  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14279:14293  uint256 phase1 */\n      dup1\n        /* \"contracts/LpPrice.sol\":14297:14399  lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))) */\n      tag_20\n        /* \"contracts/LpPrice.sol\":14350:14398  price(routerAddress,address(lpAddress.token0())) */\n      tag_21\n        /* \"contracts/LpPrice.sol\":14356:14369  routerAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":14378:14387  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":14378:14394  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14378:14396  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"contracts/LpPrice.sol\":14350:14355  price */\n      tag_27\n        /* \"contracts/LpPrice.sol\":14350:14398  price(routerAddress,address(lpAddress.token0())) */\n      jump\t// in\n    tag_21:\n        /* \"contracts/LpPrice.sol\":14297:14306  lpAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":14297:14313  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14297:14315  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n        /* \"contracts/LpPrice.sol\":14297:14325  lpAddress.token0().balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":14334:14343  lpAddress */\n      dup8\n        /* \"contracts/LpPrice.sol\":14297:14345  lpAddress.token0().balanceOf(address(lpAddress)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"contracts/LpPrice.sol\":14297:14349  lpAddress.token0().balanceOf(address(lpAddress)).mul */\n      tag_38\n      swap1\n        /* \"contracts/LpPrice.sol\":14297:14399  lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"contracts/LpPrice.sol\":14279:14400  uint256 phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0())))) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14411:14425  uint256 phase2 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14429:14531  lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1()))) */\n      tag_39\n        /* \"contracts/LpPrice.sol\":14482:14530  price(routerAddress,address(lpAddress.token1())) */\n      tag_40\n        /* \"contracts/LpPrice.sol\":14488:14501  routerAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":14510:14519  lpAddress */\n      dup8\n        /* \"contracts/LpPrice.sol\":14510:14526  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":14510:14528  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n        /* \"contracts/LpPrice.sol\":14482:14487  price */\n      tag_27\n        /* \"contracts/LpPrice.sol\":14482:14530  price(routerAddress,address(lpAddress.token1())) */\n      jump\t// in\n    tag_40:\n        /* \"contracts/LpPrice.sol\":14429:14438  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":14429:14445  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":14429:14447  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_48:\n        /* \"contracts/LpPrice.sol\":14429:14457  lpAddress.token1().balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":14466:14475  lpAddress */\n      dup9\n        /* \"contracts/LpPrice.sol\":14429:14477  lpAddress.token1().balanceOf(address(lpAddress)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_49:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_53:\n        /* \"contracts/LpPrice.sol\":14429:14481  lpAddress.token1().balanceOf(address(lpAddress)).mul */\n      tag_38\n      swap1\n        /* \"contracts/LpPrice.sol\":14429:14531  lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1()))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"contracts/LpPrice.sol\":14411:14532  uint256 phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1())))) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14551:14557  phase2 */\n      dup1\n        /* \"contracts/LpPrice.sol\":14543:14558  return (phase2) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14179:14566  function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13893:14171  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n    tag_27:\n        /* \"contracts/LpPrice.sol\":13967:13974  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":13986:14007  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":14024:14025  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":14010:14026  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n    tag_55:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_58\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_58:\n      pop\n        /* \"contracts/LpPrice.sol\":13986:14026  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14047:14052  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":14037:14041  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14042:14043  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14037:14044  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_59\n      jumpi\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n    tag_59:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14037:14052  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14073:14077  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14063:14067  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14068:14069  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":14063:14070  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_61\n      jump\t// in\n    tag_63:\n    tag_62:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14063:14077  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14098:14102  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14088:14092  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14093:14094  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14088:14095  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_64\n      jumpi\n      tag_65\n      tag_61\n      jump\t// in\n    tag_65:\n    tag_64:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14088:14102  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14120:14133  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":14120:14147  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":14148:14154  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":14155:14159  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":14120:14160  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"contracts/LpPrice.sol\":14161:14162  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14120:14163  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_74\n      tag_61\n      jump\t// in\n    tag_74:\n    tag_73:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":14113:14163  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":13893:14171  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9965:10436  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_38:\n        /* \"contracts/LpPrice.sol\":10023:10030  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":10273:10274  0 */\n      dup1\n        /* \"contracts/LpPrice.sol\":10268:10269  a */\n      dup4\n        /* \"contracts/LpPrice.sol\":10268:10274  a == 0 */\n      eq\n        /* \"contracts/LpPrice.sol\":10264:10311  if (a == 0) {\r... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/LpPrice.sol\":10298:10299  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":10291:10299  return 0 */\n      swap1\n      pop\n      jump(tag_75)\n        /* \"contracts/LpPrice.sol\":10264:10311  if (a == 0) {\r... */\n    tag_76:\n        /* \"contracts/LpPrice.sol\":10323:10332  uint256 c */\n      0x00\n        /* \"contracts/LpPrice.sol\":10339:10340  b */\n      dup3\n        /* \"contracts/LpPrice.sol\":10335:10336  a */\n      dup5\n        /* \"contracts/LpPrice.sol\":10335:10340  a * b */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/LpPrice.sol\":10323:10340  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":10368:10369  b */\n      dup3\n        /* \"contracts/LpPrice.sol\":10363:10364  a */\n      dup5\n        /* \"contracts/LpPrice.sol\":10359:10360  c */\n      dup3\n        /* \"contracts/LpPrice.sol\":10359:10364  c / a */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/LpPrice.sol\":10359:10369  c / a == b */\n      eq\n        /* \"contracts/LpPrice.sol\":10351:10407  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/LpPrice.sol\":10427:10428  c */\n      dup1\n        /* \"contracts/LpPrice.sol\":10420:10428  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9965:10436  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_75:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_85:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_87\n        /* \"#utility.yul\":172:236   */\n      tag_88\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":156:237   */\n      tag_90\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":361:504   */\n    tag_91:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_94:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_97\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_94)\n    tag_96:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":791:1176   */\n    tag_99:\n        /* \"#utility.yul\":873:878   */\n      0x00\n        /* \"#utility.yul\":922:925   */\n      dup3\n        /* \"#utility.yul\":915:919   */\n      0x1f\n        /* \"#utility.yul\":907:913   */\n      dup4\n        /* \"#utility.yul\":903:920   */\n      add\n        /* \"#utility.yul\":899:926   */\n      slt\n        /* \"#utility.yul\":889:1011   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":930:1009   */\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":889:1011   */\n    tag_101:\n        /* \"#utility.yul\":1040:1046   */\n      dup2\n        /* \"#utility.yul\":1034:1047   */\n      mload\n        /* \"#utility.yul\":1065:1170   */\n      tag_104\n        /* \"#utility.yul\":1166:1169   */\n      dup5\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1151:1155   */\n      0x20\n        /* \"#utility.yul\":1143:1149   */\n      dup7\n        /* \"#utility.yul\":1139:1156   */\n      add\n        /* \"#utility.yul\":1065:1170   */\n      tag_85\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1056:1170   */\n      swap2\n      pop\n        /* \"#utility.yul\":879:1176   */\n      pop\n        /* \"#utility.yul\":791:1176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1182:1353   */\n    tag_105:\n        /* \"#utility.yul\":1253:1258   */\n      0x00\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1278:1291   */\n      mload\n        /* \"#utility.yul\":1269:1291   */\n      swap1\n      pop\n        /* \"#utility.yul\":1300:1347   */\n      tag_107\n        /* \"#utility.yul\":1341:1346   */\n      dup2\n        /* \"#utility.yul\":1300:1347   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1182:1353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1359:1518   */\n    tag_109:\n        /* \"#utility.yul\":1415:1420   */\n      0x00\n        /* \"#utility.yul\":1453:1459   */\n      dup2\n        /* \"#utility.yul\":1440:1460   */\n      calldataload\n        /* \"#utility.yul\":1431:1460   */\n      swap1\n      pop\n        /* \"#utility.yul\":1469:1512   */\n      tag_111\n        /* \"#utility.yul\":1506:1511   */\n      dup2\n        /* \"#utility.yul\":1469:1512   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1359:1518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1524:1691   */\n    tag_113:\n        /* \"#utility.yul\":1584:1589   */\n      0x00\n        /* \"#utility.yul\":1622:1628   */\n      dup2\n        /* \"#utility.yul\":1609:1629   */\n      calldataload\n        /* \"#utility.yul\":1600:1629   */\n      swap1\n      pop\n        /* \"#utility.yul\":1638:1685   */\n      tag_115\n        /* \"#utility.yul\":1679:1684   */\n      dup2\n        /* \"#utility.yul\":1638:1685   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1524:1691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1697:1840   */\n    tag_98:\n        /* \"#utility.yul\":1754:1759   */\n      0x00\n        /* \"#utility.yul\":1785:1791   */\n      dup2\n        /* \"#utility.yul\":1779:1792   */\n      mload\n        /* \"#utility.yul\":1770:1792   */\n      swap1\n      pop\n        /* \"#utility.yul\":1801:1834   */\n      tag_118\n        /* \"#utility.yul\":1828:1833   */\n      dup2\n        /* \"#utility.yul\":1801:1834   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1697:1840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1846:2400   */\n    tag_72:\n        /* \"#utility.yul\":1941:1947   */\n      0x00\n        /* \"#utility.yul\":1990:1992   */\n      0x20\n        /* \"#utility.yul\":1978:1987   */\n      dup3\n        /* \"#utility.yul\":1969:1976   */\n      dup5\n        /* \"#utility.yul\":1965:1988   */\n      sub\n        /* \"#utility.yul\":1961:1993   */\n      slt\n        /* \"#utility.yul\":1958:2077   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":1996:2075   */\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1958:2077   */\n    tag_121:\n        /* \"#utility.yul\":2137:2138   */\n      0x00\n        /* \"#utility.yul\":2126:2135   */\n      dup3\n        /* \"#utility.yul\":2122:2139   */\n      add\n        /* \"#utility.yul\":2116:2140   */\n      mload\n        /* \"#utility.yul\":2167:2185   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2159:2165   */\n      dup2\n        /* \"#utility.yul\":2156:2186   */\n      gt\n        /* \"#utility.yul\":2153:2270   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2189:2268   */\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2153:2270   */\n    tag_124:\n        /* \"#utility.yul\":2294:2383   */\n      tag_127\n        /* \"#utility.yul\":2375:2382   */\n      dup5\n        /* \"#utility.yul\":2366:2372   */\n      dup3\n        /* \"#utility.yul\":2355:2364   */\n      dup6\n        /* \"#utility.yul\":2351:2373   */\n      add\n        /* \"#utility.yul\":2294:2383   */\n      tag_99\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2284:2383   */\n      swap2\n      pop\n        /* \"#utility.yul\":2087:2393   */\n      pop\n        /* \"#utility.yul\":1846:2400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2406:2785   */\n    tag_26:\n        /* \"#utility.yul\":2490:2496   */\n      0x00\n        /* \"#utility.yul\":2539:2541   */\n      0x20\n        /* \"#utility.yul\":2527:2536   */\n      dup3\n        /* \"#utility.yul\":2518:2525   */\n      dup5\n        /* \"#utility.yul\":2514:2537   */\n      sub\n        /* \"#utility.yul\":2510:2542   */\n      slt\n        /* \"#utility.yul\":2507:2626   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2545:2624   */\n      tag_130\n      tag_123\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2507:2626   */\n    tag_129:\n        /* \"#utility.yul\":2665:2666   */\n      0x00\n        /* \"#utility.yul\":2690:2768   */\n      tag_131\n        /* \"#utility.yul\":2760:2767   */\n      dup5\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2740:2749   */\n      dup6\n        /* \"#utility.yul\":2736:2758   */\n      add\n        /* \"#utility.yul\":2690:2768   */\n      tag_105\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2680:2768   */\n      swap2\n      pop\n        /* \"#utility.yul\":2636:2778   */\n      pop\n        /* \"#utility.yul\":2406:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3313   */\n    tag_8:\n        /* \"#utility.yul\":2883:2889   */\n      0x00\n        /* \"#utility.yul\":2891:2897   */\n      dup1\n        /* \"#utility.yul\":2940:2942   */\n      0x40\n        /* \"#utility.yul\":2928:2937   */\n      dup4\n        /* \"#utility.yul\":2919:2926   */\n      dup6\n        /* \"#utility.yul\":2915:2938   */\n      sub\n        /* \"#utility.yul\":2911:2943   */\n      slt\n        /* \"#utility.yul\":2908:3027   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":2946:3025   */\n      tag_134\n      tag_123\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2908:3027   */\n    tag_133:\n        /* \"#utility.yul\":3066:3067   */\n      0x00\n        /* \"#utility.yul\":3091:3154   */\n      tag_135\n        /* \"#utility.yul\":3146:3153   */\n      dup6\n        /* \"#utility.yul\":3137:3143   */\n      dup3\n        /* \"#utility.yul\":3126:3135   */\n      dup7\n        /* \"#utility.yul\":3122:3144   */\n      add\n        /* \"#utility.yul\":3091:3154   */\n      tag_109\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3081:3154   */\n      swap3\n      pop\n        /* \"#utility.yul\":3037:3164   */\n      pop\n        /* \"#utility.yul\":3203:3205   */\n      0x20\n        /* \"#utility.yul\":3229:3296   */\n      tag_136\n        /* \"#utility.yul\":3288:3295   */\n      dup6\n        /* \"#utility.yul\":3279:3285   */\n      dup3\n        /* \"#utility.yul\":3268:3277   */\n      dup7\n        /* \"#utility.yul\":3264:3286   */\n      add\n        /* \"#utility.yul\":3229:3296   */\n      tag_113\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3219:3296   */\n      swap2\n      pop\n        /* \"#utility.yul\":3174:3306   */\n      pop\n        /* \"#utility.yul\":2791:3313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3319:3670   */\n    tag_37:\n        /* \"#utility.yul\":3389:3395   */\n      0x00\n        /* \"#utility.yul\":3438:3440   */\n      0x20\n        /* \"#utility.yul\":3426:3435   */\n      dup3\n        /* \"#utility.yul\":3417:3424   */\n      dup5\n        /* \"#utility.yul\":3413:3436   */\n      sub\n        /* \"#utility.yul\":3409:3441   */\n      slt\n        /* \"#utility.yul\":3406:3525   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3444:3523   */\n      tag_139\n      tag_123\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3406:3525   */\n    tag_138:\n        /* \"#utility.yul\":3564:3565   */\n      0x00\n        /* \"#utility.yul\":3589:3653   */\n      tag_140\n        /* \"#utility.yul\":3645:3652   */\n      dup5\n        /* \"#utility.yul\":3636:3642   */\n      dup3\n        /* \"#utility.yul\":3625:3634   */\n      dup6\n        /* \"#utility.yul\":3621:3643   */\n      add\n        /* \"#utility.yul\":3589:3653   */\n      tag_98\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3579:3653   */\n      swap2\n      pop\n        /* \"#utility.yul\":3535:3663   */\n      pop\n        /* \"#utility.yul\":3319:3670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3676:3855   */\n    tag_141:\n        /* \"#utility.yul\":3745:3755   */\n      0x00\n        /* \"#utility.yul\":3766:3812   */\n      tag_143\n        /* \"#utility.yul\":3808:3811   */\n      dup4\n        /* \"#utility.yul\":3800:3806   */\n      dup4\n        /* \"#utility.yul\":3766:3812   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3844:3848   */\n      0x20\n        /* \"#utility.yul\":3839:3842   */\n      dup4\n        /* \"#utility.yul\":3835:3849   */\n      add\n        /* \"#utility.yul\":3821:3849   */\n      swap1\n      pop\n        /* \"#utility.yul\":3676:3855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3861:3969   */\n    tag_144:\n        /* \"#utility.yul\":3938:3962   */\n      tag_146\n        /* \"#utility.yul\":3956:3961   */\n      dup2\n        /* \"#utility.yul\":3938:3962   */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3933:3936   */\n      dup3\n        /* \"#utility.yul\":3926:3963   */\n      mstore\n        /* \"#utility.yul\":3861:3969   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3975:4093   */\n    tag_148:\n        /* \"#utility.yul\":4062:4086   */\n      tag_150\n        /* \"#utility.yul\":4080:4085   */\n      dup2\n        /* \"#utility.yul\":4062:4086   */\n      tag_147\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4057:4060   */\n      dup3\n        /* \"#utility.yul\":4050:4087   */\n      mstore\n        /* \"#utility.yul\":3975:4093   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4129:4861   */\n    tag_151:\n        /* \"#utility.yul\":4248:4251   */\n      0x00\n        /* \"#utility.yul\":4277:4331   */\n      tag_153\n        /* \"#utility.yul\":4325:4330   */\n      dup3\n        /* \"#utility.yul\":4277:4331   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4347:4433   */\n      tag_155\n        /* \"#utility.yul\":4426:4432   */\n      dup2\n        /* \"#utility.yul\":4421:4424   */\n      dup6\n        /* \"#utility.yul\":4347:4433   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4340:4433   */\n      swap4\n      pop\n        /* \"#utility.yul\":4457:4513   */\n      tag_157\n        /* \"#utility.yul\":4507:4512   */\n      dup4\n        /* \"#utility.yul\":4457:4513   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4536:4543   */\n      dup1\n        /* \"#utility.yul\":4567:4568   */\n      0x00\n        /* \"#utility.yul\":4552:4836   */\n    tag_159:\n        /* \"#utility.yul\":4577:4583   */\n      dup4\n        /* \"#utility.yul\":4574:4575   */\n      dup2\n        /* \"#utility.yul\":4571:4584   */\n      lt\n        /* \"#utility.yul\":4552:4836   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":4653:4659   */\n      dup2\n        /* \"#utility.yul\":4647:4660   */\n      mload\n        /* \"#utility.yul\":4680:4743   */\n      tag_162\n        /* \"#utility.yul\":4739:4742   */\n      dup9\n        /* \"#utility.yul\":4724:4737   */\n      dup3\n        /* \"#utility.yul\":4680:4743   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4673:4743   */\n      swap8\n      pop\n        /* \"#utility.yul\":4766:4826   */\n      tag_163\n        /* \"#utility.yul\":4819:4825   */\n      dup4\n        /* \"#utility.yul\":4766:4826   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4756:4826   */\n      swap3\n      pop\n        /* \"#utility.yul\":4612:4836   */\n      pop\n        /* \"#utility.yul\":4599:4600   */\n      0x01\n        /* \"#utility.yul\":4596:4597   */\n      dup2\n        /* \"#utility.yul\":4592:4601   */\n      add\n        /* \"#utility.yul\":4587:4601   */\n      swap1\n      pop\n        /* \"#utility.yul\":4552:4836   */\n      jump(tag_159)\n    tag_161:\n        /* \"#utility.yul\":4556:4570   */\n      pop\n        /* \"#utility.yul\":4852:4855   */\n      dup6\n        /* \"#utility.yul\":4845:4855   */\n      swap4\n      pop\n        /* \"#utility.yul\":4253:4861   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4129:4861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4867:5233   */\n    tag_165:\n        /* \"#utility.yul\":5009:5012   */\n      0x00\n        /* \"#utility.yul\":5030:5097   */\n      tag_167\n        /* \"#utility.yul\":5094:5096   */\n      0x21\n        /* \"#utility.yul\":5089:5092   */\n      dup4\n        /* \"#utility.yul\":5030:5097   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5023:5097   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5199   */\n      tag_169\n        /* \"#utility.yul\":5195:5198   */\n      dup3\n        /* \"#utility.yul\":5106:5199   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5224:5226   */\n      0x40\n        /* \"#utility.yul\":5219:5222   */\n      dup3\n        /* \"#utility.yul\":5215:5227   */\n      add\n        /* \"#utility.yul\":5208:5227   */\n      swap1\n      pop\n        /* \"#utility.yul\":4867:5233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5239:5357   */\n    tag_171:\n        /* \"#utility.yul\":5326:5350   */\n      tag_173\n        /* \"#utility.yul\":5344:5349   */\n      dup2\n        /* \"#utility.yul\":5326:5350   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5321:5324   */\n      dup3\n        /* \"#utility.yul\":5314:5351   */\n      mstore\n        /* \"#utility.yul\":5239:5357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5363:5585   */\n    tag_15:\n        /* \"#utility.yul\":5456:5460   */\n      0x00\n        /* \"#utility.yul\":5494:5496   */\n      0x20\n        /* \"#utility.yul\":5483:5492   */\n      dup3\n        /* \"#utility.yul\":5479:5497   */\n      add\n        /* \"#utility.yul\":5471:5497   */\n      swap1\n      pop\n        /* \"#utility.yul\":5507:5578   */\n      tag_176\n        /* \"#utility.yul\":5575:5576   */\n      0x00\n        /* \"#utility.yul\":5564:5573   */\n      dup4\n        /* \"#utility.yul\":5560:5577   */\n      add\n        /* \"#utility.yul\":5551:5557   */\n      dup5\n        /* \"#utility.yul\":5507:5578   */\n      tag_148\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5363:5585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5591:6010   */\n    tag_83:\n        /* \"#utility.yul\":5757:5761   */\n      0x00\n        /* \"#utility.yul\":5795:5797   */\n      0x20\n        /* \"#utility.yul\":5784:5793   */\n      dup3\n        /* \"#utility.yul\":5780:5798   */\n      add\n        /* \"#utility.yul\":5772:5798   */\n      swap1\n      pop\n        /* \"#utility.yul\":5844:5853   */\n      dup2\n        /* \"#utility.yul\":5838:5842   */\n      dup2\n        /* \"#utility.yul\":5834:5854   */\n      sub\n        /* \"#utility.yul\":5830:5831   */\n      0x00\n        /* \"#utility.yul\":5819:5828   */\n      dup4\n        /* \"#utility.yul\":5815:5832   */\n      add\n        /* \"#utility.yul\":5808:5855   */\n      mstore\n        /* \"#utility.yul\":5872:6003   */\n      tag_178\n        /* \"#utility.yul\":5998:6002   */\n      dup2\n        /* \"#utility.yul\":5872:6003   */\n      tag_165\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5864:6003   */\n      swap1\n      pop\n        /* \"#utility.yul\":5591:6010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6016:6238   */\n    tag_11:\n        /* \"#utility.yul\":6109:6113   */\n      0x00\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"#utility.yul\":6136:6145   */\n      dup3\n        /* \"#utility.yul\":6132:6150   */\n      add\n        /* \"#utility.yul\":6124:6150   */\n      swap1\n      pop\n        /* \"#utility.yul\":6160:6231   */\n      tag_180\n        /* \"#utility.yul\":6228:6229   */\n      0x00\n        /* \"#utility.yul\":6217:6226   */\n      dup4\n        /* \"#utility.yul\":6213:6230   */\n      add\n        /* \"#utility.yul\":6204:6210   */\n      dup5\n        /* \"#utility.yul\":6160:6231   */\n      tag_171\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6016:6238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6244:6727   */\n    tag_67:\n        /* \"#utility.yul\":6415:6419   */\n      0x00\n        /* \"#utility.yul\":6453:6455   */\n      0x40\n        /* \"#utility.yul\":6442:6451   */\n      dup3\n        /* \"#utility.yul\":6438:6456   */\n      add\n        /* \"#utility.yul\":6430:6456   */\n      swap1\n      pop\n        /* \"#utility.yul\":6466:6537   */\n      tag_182\n        /* \"#utility.yul\":6534:6535   */\n      0x00\n        /* \"#utility.yul\":6523:6532   */\n      dup4\n        /* \"#utility.yul\":6519:6536   */\n      add\n        /* \"#utility.yul\":6510:6516   */\n      dup6\n        /* \"#utility.yul\":6466:6537   */\n      tag_171\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6584:6593   */\n      dup2\n        /* \"#utility.yul\":6578:6582   */\n      dup2\n        /* \"#utility.yul\":6574:6594   */\n      sub\n        /* \"#utility.yul\":6569:6571   */\n      0x20\n        /* \"#utility.yul\":6558:6567   */\n      dup4\n        /* \"#utility.yul\":6554:6572   */\n      add\n        /* \"#utility.yul\":6547:6595   */\n      mstore\n        /* \"#utility.yul\":6612:6720   */\n      tag_183\n        /* \"#utility.yul\":6715:6719   */\n      dup2\n        /* \"#utility.yul\":6706:6712   */\n      dup5\n        /* \"#utility.yul\":6612:6720   */\n      tag_151\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6604:6720   */\n      swap1\n      pop\n        /* \"#utility.yul\":6244:6727   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6733:6862   */\n    tag_90:\n        /* \"#utility.yul\":6767:6773   */\n      0x00\n        /* \"#utility.yul\":6794:6814   */\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6784:6814   */\n      swap1\n      pop\n        /* \"#utility.yul\":6823:6856   */\n      tag_187\n        /* \"#utility.yul\":6851:6855   */\n      dup3\n        /* \"#utility.yul\":6843:6849   */\n      dup3\n        /* \"#utility.yul\":6823:6856   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6733:6862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6868:6943   */\n    tag_186:\n        /* \"#utility.yul\":6901:6907   */\n      0x00\n        /* \"#utility.yul\":6934:6936   */\n      0x40\n        /* \"#utility.yul\":6928:6937   */\n      mload\n        /* \"#utility.yul\":6918:6937   */\n      swap1\n      pop\n        /* \"#utility.yul\":6868:6943   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6949:7260   */\n    tag_89:\n        /* \"#utility.yul\":7026:7030   */\n      0x00\n        /* \"#utility.yul\":7116:7134   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7108:7114   */\n      dup3\n        /* \"#utility.yul\":7105:7135   */\n      gt\n        /* \"#utility.yul\":7102:7158   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":7138:7156   */\n      tag_192\n      tag_57\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7102:7158   */\n    tag_191:\n        /* \"#utility.yul\":7188:7192   */\n      0x20\n        /* \"#utility.yul\":7180:7186   */\n      dup3\n        /* \"#utility.yul\":7176:7193   */\n      mul\n        /* \"#utility.yul\":7168:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":7248:7252   */\n      0x20\n        /* \"#utility.yul\":7242:7246   */\n      dup2\n        /* \"#utility.yul\":7238:7253   */\n      add\n        /* \"#utility.yul\":7230:7253   */\n      swap1\n      pop\n        /* \"#utility.yul\":6949:7260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7266:7398   */\n    tag_158:\n        /* \"#utility.yul\":7333:7337   */\n      0x00\n        /* \"#utility.yul\":7356:7359   */\n      dup2\n        /* \"#utility.yul\":7348:7359   */\n      swap1\n      pop\n        /* \"#utility.yul\":7386:7390   */\n      0x20\n        /* \"#utility.yul\":7381:7384   */\n      dup3\n        /* \"#utility.yul\":7377:7391   */\n      add\n        /* \"#utility.yul\":7369:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7266:7398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:7518   */\n    tag_154:\n        /* \"#utility.yul\":7471:7477   */\n      0x00\n        /* \"#utility.yul\":7505:7510   */\n      dup2\n        /* \"#utility.yul\":7499:7511   */\n      mload\n        /* \"#utility.yul\":7489:7511   */\n      swap1\n      pop\n        /* \"#utility.yul\":7404:7518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7524:7637   */\n    tag_164:\n        /* \"#utility.yul\":7594:7598   */\n      0x00\n        /* \"#utility.yul\":7626:7630   */\n      0x20\n        /* \"#utility.yul\":7621:7624   */\n      dup3\n        /* \"#utility.yul\":7617:7631   */\n      add\n        /* \"#utility.yul\":7609:7631   */\n      swap1\n      pop\n        /* \"#utility.yul\":7524:7637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7643:7827   */\n    tag_156:\n        /* \"#utility.yul\":7742:7753   */\n      0x00\n        /* \"#utility.yul\":7776:7782   */\n      dup3\n        /* \"#utility.yul\":7771:7774   */\n      dup3\n        /* \"#utility.yul\":7764:7783   */\n      mstore\n        /* \"#utility.yul\":7816:7820   */\n      0x20\n        /* \"#utility.yul\":7811:7814   */\n      dup3\n        /* \"#utility.yul\":7807:7821   */\n      add\n        /* \"#utility.yul\":7792:7821   */\n      swap1\n      pop\n        /* \"#utility.yul\":7643:7827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7833:8002   */\n    tag_168:\n        /* \"#utility.yul\":7917:7928   */\n      0x00\n        /* \"#utility.yul\":7951:7957   */\n      dup3\n        /* \"#utility.yul\":7946:7949   */\n      dup3\n        /* \"#utility.yul\":7939:7958   */\n      mstore\n        /* \"#utility.yul\":7991:7995   */\n      0x20\n        /* \"#utility.yul\":7986:7989   */\n      dup3\n        /* \"#utility.yul\":7982:7996   */\n      add\n        /* \"#utility.yul\":7967:7996   */\n      swap1\n      pop\n        /* \"#utility.yul\":7833:8002   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8008:8193   */\n    tag_80:\n        /* \"#utility.yul\":8048:8049   */\n      0x00\n        /* \"#utility.yul\":8065:8085   */\n      tag_199\n        /* \"#utility.yul\":8083:8084   */\n      dup3\n        /* \"#utility.yul\":8065:8085   */\n      tag_174\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8060:8085   */\n      swap2\n      pop\n        /* \"#utility.yul\":8099:8119   */\n      tag_200\n        /* \"#utility.yul\":8117:8118   */\n      dup4\n        /* \"#utility.yul\":8099:8119   */\n      tag_174\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8094:8119   */\n      swap3\n      pop\n        /* \"#utility.yul\":8138:8139   */\n      dup3\n        /* \"#utility.yul\":8128:8163   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":8143:8161   */\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8128:8163   */\n    tag_201:\n        /* \"#utility.yul\":8185:8186   */\n      dup3\n        /* \"#utility.yul\":8182:8183   */\n      dup3\n        /* \"#utility.yul\":8178:8187   */\n      div\n        /* \"#utility.yul\":8173:8187   */\n      swap1\n      pop\n        /* \"#utility.yul\":8008:8193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8199:8547   */\n    tag_78:\n        /* \"#utility.yul\":8239:8246   */\n      0x00\n        /* \"#utility.yul\":8262:8282   */\n      tag_205\n        /* \"#utility.yul\":8280:8281   */\n      dup3\n        /* \"#utility.yul\":8262:8282   */\n      tag_174\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8257:8282   */\n      swap2\n      pop\n        /* \"#utility.yul\":8296:8316   */\n      tag_206\n        /* \"#utility.yul\":8314:8315   */\n      dup4\n        /* \"#utility.yul\":8296:8316   */\n      tag_174\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8291:8316   */\n      swap3\n      pop\n        /* \"#utility.yul\":8484:8485   */\n      dup2\n        /* \"#utility.yul\":8416:8482   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8412:8486   */\n      div\n        /* \"#utility.yul\":8409:8410   */\n      dup4\n        /* \"#utility.yul\":8406:8487   */\n      gt\n        /* \"#utility.yul\":8401:8402   */\n      dup3\n        /* \"#utility.yul\":8394:8403   */\n      iszero\n        /* \"#utility.yul\":8387:8404   */\n      iszero\n        /* \"#utility.yul\":8383:8488   */\n      and\n        /* \"#utility.yul\":8380:8511   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":8491:8509   */\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8380:8511   */\n    tag_207:\n        /* \"#utility.yul\":8539:8540   */\n      dup3\n        /* \"#utility.yul\":8536:8537   */\n      dup3\n        /* \"#utility.yul\":8532:8541   */\n      mul\n        /* \"#utility.yul\":8521:8541   */\n      swap1\n      pop\n        /* \"#utility.yul\":8199:8547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8553:8649   */\n    tag_147:\n        /* \"#utility.yul\":8590:8597   */\n      0x00\n        /* \"#utility.yul\":8619:8643   */\n      tag_211\n        /* \"#utility.yul\":8637:8642   */\n      dup3\n        /* \"#utility.yul\":8619:8643   */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8608:8643   */\n      swap1\n      pop\n        /* \"#utility.yul\":8553:8649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8655:8765   */\n    tag_213:\n        /* \"#utility.yul\":8706:8713   */\n      0x00\n        /* \"#utility.yul\":8735:8759   */\n      tag_215\n        /* \"#utility.yul\":8753:8758   */\n      dup3\n        /* \"#utility.yul\":8735:8759   */\n      tag_147\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8724:8759   */\n      swap1\n      pop\n        /* \"#utility.yul\":8655:8765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8771:8877   */\n    tag_216:\n        /* \"#utility.yul\":8818:8825   */\n      0x00\n        /* \"#utility.yul\":8847:8871   */\n      tag_218\n        /* \"#utility.yul\":8865:8870   */\n      dup3\n        /* \"#utility.yul\":8847:8871   */\n      tag_147\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8836:8871   */\n      swap1\n      pop\n        /* \"#utility.yul\":8771:8877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8883:8993   */\n    tag_219:\n        /* \"#utility.yul\":8934:8941   */\n      0x00\n        /* \"#utility.yul\":8963:8987   */\n      tag_221\n        /* \"#utility.yul\":8981:8986   */\n      dup3\n        /* \"#utility.yul\":8963:8987   */\n      tag_147\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8952:8987   */\n      swap1\n      pop\n        /* \"#utility.yul\":8883:8993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8999:9125   */\n    tag_212:\n        /* \"#utility.yul\":9036:9043   */\n      0x00\n        /* \"#utility.yul\":9076:9118   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9069:9074   */\n      dup3\n        /* \"#utility.yul\":9065:9119   */\n      and\n        /* \"#utility.yul\":9054:9119   */\n      swap1\n      pop\n        /* \"#utility.yul\":8999:9125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9131:9208   */\n    tag_174:\n        /* \"#utility.yul\":9168:9175   */\n      0x00\n        /* \"#utility.yul\":9197:9202   */\n      dup2\n        /* \"#utility.yul\":9186:9202   */\n      swap1\n      pop\n        /* \"#utility.yul\":9131:9208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9214:9495   */\n    tag_188:\n        /* \"#utility.yul\":9297:9324   */\n      tag_225\n        /* \"#utility.yul\":9319:9323   */\n      dup3\n        /* \"#utility.yul\":9297:9324   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":9289:9295   */\n      dup2\n        /* \"#utility.yul\":9285:9325   */\n      add\n        /* \"#utility.yul\":9427:9433   */\n      dup2\n        /* \"#utility.yul\":9415:9425   */\n      dup2\n        /* \"#utility.yul\":9412:9434   */\n      lt\n        /* \"#utility.yul\":9391:9409   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9379:9389   */\n      dup3\n        /* \"#utility.yul\":9376:9410   */\n      gt\n        /* \"#utility.yul\":9373:9435   */\n      or\n        /* \"#utility.yul\":9370:9458   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":9438:9456   */\n      tag_228\n      tag_57\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9370:9458   */\n    tag_227:\n        /* \"#utility.yul\":9478:9488   */\n      dup1\n        /* \"#utility.yul\":9474:9476   */\n      0x40\n        /* \"#utility.yul\":9467:9489   */\n      mstore\n        /* \"#utility.yul\":9257:9495   */\n      pop\n        /* \"#utility.yul\":9214:9495   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9501:9681   */\n    tag_209:\n        /* \"#utility.yul\":9549:9626   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9546:9547   */\n      0x00\n        /* \"#utility.yul\":9539:9627   */\n      mstore\n        /* \"#utility.yul\":9646:9650   */\n      0x11\n        /* \"#utility.yul\":9643:9644   */\n      0x04\n        /* \"#utility.yul\":9636:9651   */\n      mstore\n        /* \"#utility.yul\":9670:9674   */\n      0x24\n        /* \"#utility.yul\":9667:9668   */\n      0x00\n        /* \"#utility.yul\":9660:9675   */\n      revert\n        /* \"#utility.yul\":9687:9867   */\n    tag_203:\n        /* \"#utility.yul\":9735:9812   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9732:9733   */\n      0x00\n        /* \"#utility.yul\":9725:9813   */\n      mstore\n        /* \"#utility.yul\":9832:9836   */\n      0x12\n        /* \"#utility.yul\":9829:9830   */\n      0x04\n        /* \"#utility.yul\":9822:9837   */\n      mstore\n        /* \"#utility.yul\":9856:9860   */\n      0x24\n        /* \"#utility.yul\":9853:9854   */\n      0x00\n        /* \"#utility.yul\":9846:9861   */\n      revert\n        /* \"#utility.yul\":9873:10053   */\n    tag_61:\n        /* \"#utility.yul\":9921:9998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9918:9919   */\n      0x00\n        /* \"#utility.yul\":9911:9999   */\n      mstore\n        /* \"#utility.yul\":10018:10022   */\n      0x32\n        /* \"#utility.yul\":10015:10016   */\n      0x04\n        /* \"#utility.yul\":10008:10023   */\n      mstore\n        /* \"#utility.yul\":10042:10046   */\n      0x24\n        /* \"#utility.yul\":10039:10040   */\n      0x00\n        /* \"#utility.yul\":10032:10047   */\n      revert\n        /* \"#utility.yul\":10059:10239   */\n    tag_57:\n        /* \"#utility.yul\":10107:10184   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10104:10105   */\n      0x00\n        /* \"#utility.yul\":10097:10185   */\n      mstore\n        /* \"#utility.yul\":10204:10208   */\n      0x41\n        /* \"#utility.yul\":10201:10202   */\n      0x04\n        /* \"#utility.yul\":10194:10209   */\n      mstore\n        /* \"#utility.yul\":10228:10232   */\n      0x24\n        /* \"#utility.yul\":10225:10226   */\n      0x00\n        /* \"#utility.yul\":10218:10233   */\n      revert\n        /* \"#utility.yul\":10245:10362   */\n    tag_103:\n        /* \"#utility.yul\":10354:10355   */\n      0x00\n        /* \"#utility.yul\":10351:10352   */\n      dup1\n        /* \"#utility.yul\":10344:10356   */\n      revert\n        /* \"#utility.yul\":10368:10485   */\n    tag_93:\n        /* \"#utility.yul\":10477:10478   */\n      0x00\n        /* \"#utility.yul\":10474:10475   */\n      dup1\n        /* \"#utility.yul\":10467:10479   */\n      revert\n        /* \"#utility.yul\":10491:10608   */\n    tag_126:\n        /* \"#utility.yul\":10600:10601   */\n      0x00\n        /* \"#utility.yul\":10597:10598   */\n      dup1\n        /* \"#utility.yul\":10590:10602   */\n      revert\n        /* \"#utility.yul\":10614:10731   */\n    tag_123:\n        /* \"#utility.yul\":10723:10724   */\n      0x00\n        /* \"#utility.yul\":10720:10721   */\n      dup1\n        /* \"#utility.yul\":10713:10725   */\n      revert\n        /* \"#utility.yul\":10737:10839   */\n    tag_226:\n        /* \"#utility.yul\":10778:10784   */\n      0x00\n        /* \"#utility.yul\":10829:10831   */\n      0x1f\n        /* \"#utility.yul\":10825:10832   */\n      not\n        /* \"#utility.yul\":10820:10822   */\n      0x1f\n        /* \"#utility.yul\":10813:10818   */\n      dup4\n        /* \"#utility.yul\":10809:10823   */\n      add\n        /* \"#utility.yul\":10805:10833   */\n      and\n        /* \"#utility.yul\":10795:10833   */\n      swap1\n      pop\n        /* \"#utility.yul\":10737:10839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10845:11065   */\n    tag_170:\n        /* \"#utility.yul\":10985:11019   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":10981:10982   */\n      0x00\n        /* \"#utility.yul\":10973:10979   */\n      dup3\n        /* \"#utility.yul\":10969:10983   */\n      add\n        /* \"#utility.yul\":10962:11020   */\n      mstore\n        /* \"#utility.yul\":11054:11057   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11049:11051   */\n      0x20\n        /* \"#utility.yul\":11041:11047   */\n      dup3\n        /* \"#utility.yul\":11037:11052   */\n      add\n        /* \"#utility.yul\":11030:11058   */\n      mstore\n        /* \"#utility.yul\":10845:11065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11071:11221   */\n    tag_108:\n        /* \"#utility.yul\":11158:11196   */\n      tag_240\n        /* \"#utility.yul\":11190:11195   */\n      dup2\n        /* \"#utility.yul\":11158:11196   */\n      tag_213\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":11151:11156   */\n      dup2\n        /* \"#utility.yul\":11148:11197   */\n      eq\n        /* \"#utility.yul\":11138:11215   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":11211:11212   */\n      0x00\n        /* \"#utility.yul\":11208:11209   */\n      dup1\n        /* \"#utility.yul\":11201:11213   */\n      revert\n        /* \"#utility.yul\":11138:11215   */\n    tag_241:\n        /* \"#utility.yul\":11071:11221   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11227:11369   */\n    tag_112:\n        /* \"#utility.yul\":11310:11344   */\n      tag_243\n        /* \"#utility.yul\":11338:11343   */\n      dup2\n        /* \"#utility.yul\":11310:11344   */\n      tag_216\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":11303:11308   */\n      dup2\n        /* \"#utility.yul\":11300:11345   */\n      eq\n        /* \"#utility.yul\":11290:11363   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":11359:11360   */\n      0x00\n        /* \"#utility.yul\":11356:11357   */\n      dup1\n        /* \"#utility.yul\":11349:11361   */\n      revert\n        /* \"#utility.yul\":11290:11363   */\n    tag_244:\n        /* \"#utility.yul\":11227:11369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11375:11525   */\n    tag_116:\n        /* \"#utility.yul\":11462:11500   */\n      tag_246\n        /* \"#utility.yul\":11494:11499   */\n      dup2\n        /* \"#utility.yul\":11462:11500   */\n      tag_219\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":11455:11460   */\n      dup2\n        /* \"#utility.yul\":11452:11501   */\n      eq\n        /* \"#utility.yul\":11442:11519   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":11515:11516   */\n      0x00\n        /* \"#utility.yul\":11512:11513   */\n      dup1\n        /* \"#utility.yul\":11505:11517   */\n      revert\n        /* \"#utility.yul\":11442:11519   */\n    tag_247:\n        /* \"#utility.yul\":11375:11525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11531:11653   */\n    tag_119:\n        /* \"#utility.yul\":11604:11628   */\n      tag_249\n        /* \"#utility.yul\":11622:11627   */\n      dup2\n        /* \"#utility.yul\":11604:11628   */\n      tag_174\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":11597:11602   */\n      dup2\n        /* \"#utility.yul\":11594:11629   */\n      eq\n        /* \"#utility.yul\":11584:11647   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":11643:11644   */\n      0x00\n        /* \"#utility.yul\":11640:11641   */\n      dup1\n        /* \"#utility.yul\":11633:11645   */\n      revert\n        /* \"#utility.yul\":11584:11647   */\n    tag_250:\n        /* \"#utility.yul\":11531:11653   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a53c0a8a079127ec097563009aed098e8c5f4025c42ac8443deb7c2a597b95da64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610da7806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b9190610863565b6100b2565b60405161006d91906109d1565b60405180910390f35b61007e610402565b60405161008b9190610996565b60405180910390f35b61009c610428565b6040516100a99190610996565b60405180910390f35b60008061025361013f848673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561010257600080fd5b505afa158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a9190610836565b61044c565b8573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd9190610836565b73ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016101f59190610996565b60206040518083038186803b15801561020d57600080fd5b505afa158015610221573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024591906108a3565b61068090919063ffffffff16565b905060006103f56102e1858773ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc9190610836565b61044c565b8673ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561032757600080fd5b505afa15801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f9190610836565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016103979190610996565b60206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e791906108a3565b61068090919063ffffffff16565b9050809250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff81111561046a57610469610c72565b5b6040519080825280602002602001820160405280156104985781602001602082028036833780820191505090505b50905082816000815181106104b0576104af610c43565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061051f5761051e610c43565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106105905761058f610c43565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016106079291906109ec565b60006040518083038186803b15801561061f57600080fd5b505afa158015610633573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061065c91906107ed565b60028151811061066f5761066e610c43565b5b602002602001015191505092915050565b60008083141561069357600090506106f5565b600082846106a19190610ae8565b90508284826106b09190610ab7565b146106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e7906109b1565b60405180910390fd5b809150505b92915050565b600061070e61070984610a41565b610a1c565b9050808382526020820190508285602086028201111561073157610730610ca6565b5b60005b85811015610761578161074788826107d8565b845260208401935060208301925050600181019050610734565b5050509392505050565b600082601f8301126107805761077f610ca1565b5b81516107908482602086016106fb565b91505092915050565b6000815190506107a881610d15565b92915050565b6000813590506107bd81610d2c565b92915050565b6000813590506107d281610d43565b92915050565b6000815190506107e781610d5a565b92915050565b60006020828403121561080357610802610cb0565b5b600082015167ffffffffffffffff81111561082157610820610cab565b5b61082d8482850161076b565b91505092915050565b60006020828403121561084c5761084b610cb0565b5b600061085a84828501610799565b91505092915050565b6000806040838503121561087a57610879610cb0565b5b6000610888858286016107ae565b9250506020610899858286016107c3565b9150509250929050565b6000602082840312156108b9576108b8610cb0565b5b60006108c7848285016107d8565b91505092915050565b60006108dc83836108e8565b60208301905092915050565b6108f181610b42565b82525050565b61090081610b42565b82525050565b600061091182610a7d565b61091b8185610a95565b935061092683610a6d565b8060005b8381101561095757815161093e88826108d0565b975061094983610a88565b92505060018101905061092a565b5085935050505092915050565b6000610971602183610aa6565b915061097c82610cc6565b604082019050919050565b61099081610baa565b82525050565b60006020820190506109ab60008301846108f7565b92915050565b600060208201905081810360008301526109ca81610964565b9050919050565b60006020820190506109e66000830184610987565b92915050565b6000604082019050610a016000830185610987565b8181036020830152610a138184610906565b90509392505050565b6000610a26610a37565b9050610a328282610bb4565b919050565b6000604051905090565b600067ffffffffffffffff821115610a5c57610a5b610c72565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ac282610baa565b9150610acd83610baa565b925082610add57610adc610c14565b5b828204905092915050565b6000610af382610baa565b9150610afe83610baa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3757610b36610be5565b5b828202905092915050565b6000610b4d82610b8a565b9050919050565b6000610b5f82610b42565b9050919050565b6000610b7182610b42565b9050919050565b6000610b8382610b42565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610bbd82610cb5565b810181811067ffffffffffffffff82111715610bdc57610bdb610c72565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b610d1e81610b54565b8114610d2957600080fd5b50565b610d3581610b66565b8114610d4057600080fd5b50565b610d4c81610b78565b8114610d5757600080fd5b50565b610d6381610baa565b8114610d6e57600080fd5b5056fea2646970667358221220a53c0a8a079127ec097563009aed098e8c5f4025c42ac8443deb7c2a597b95da64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA7 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x253 PUSH2 0x13F DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x221 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x680 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F5 PUSH2 0x2E1 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x680 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0xC72 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x498 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4B0 JUMPI PUSH2 0x4AF PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP3 SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x66F JUMPI PUSH2 0x66E PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST EQ PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E7 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70E PUSH2 0x709 DUP5 PUSH2 0xA41 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0xCA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x761 JUMPI DUP2 PUSH2 0x747 DUP9 DUP3 PUSH2 0x7D8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x734 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0xCA1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x790 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A8 DUP2 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BD DUP2 PUSH2 0xD2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7D2 DUP2 PUSH2 0xD43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E7 DUP2 PUSH2 0xD5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x803 JUMPI PUSH2 0x802 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0xCAB JUMP JUMPDEST JUMPDEST PUSH2 0x82D DUP5 DUP3 DUP6 ADD PUSH2 0x76B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x85A DUP5 DUP3 DUP6 ADD PUSH2 0x799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x888 DUP6 DUP3 DUP7 ADD PUSH2 0x7AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x899 DUP6 DUP3 DUP7 ADD PUSH2 0x7C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C7 DUP5 DUP3 DUP6 ADD PUSH2 0x7D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP4 DUP4 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F1 DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 DUP3 PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x91B DUP2 DUP6 PUSH2 0xA95 JUMP JUMPDEST SWAP4 POP PUSH2 0x926 DUP4 PUSH2 0xA6D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x957 JUMPI DUP2 MLOAD PUSH2 0x93E DUP9 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP8 POP PUSH2 0x949 DUP4 PUSH2 0xA88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x92A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 PUSH1 0x21 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x97C DUP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0xBAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CA DUP2 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA01 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x987 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA13 DUP2 DUP5 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA26 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP PUSH2 0xA32 DUP3 DUP3 PUSH2 0xBB4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA5C JUMPI PUSH2 0xA5B PUSH2 0xC72 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP3 PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP PUSH2 0xACD DUP4 PUSH2 0xBAA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0xC14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF3 DUP3 PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP PUSH2 0xAFE DUP4 PUSH2 0xBAA JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB36 PUSH2 0xBE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP3 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5F DUP3 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 DUP3 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP3 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBD DUP3 PUSH2 0xCB5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBDC JUMPI PUSH2 0xBDB PUSH2 0xC72 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xB54 JUMP JUMPDEST DUP2 EQ PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD35 DUP2 PUSH2 0xB66 JUMP JUMPDEST DUP2 EQ PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD4C DUP2 PUSH2 0xB78 JUMP JUMPDEST DUP2 EQ PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD63 DUP2 PUSH2 0xBAA JUMP JUMPDEST DUP2 EQ PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 EXTCODECOPY EXP DUP11 SMOD SWAP2 0x27 0xEC MULMOD PUSH22 0x63009AED098E8C5F4025C42AC8443DEB7C2A597B95DA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13649:920:0:-:0;;;13728:42;13706:64;;;;;;;;;;;;;;;;;;;;13799:42;13777:64;;;;;;;;;;;;;;;;;;;;13865:19;13848:36;;13649:920;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_533": {
									"entryPoint": 1026,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_647": {
									"entryPoint": 178,
									"id": 647,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNB_530": {
									"entryPoint": 1064,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_399": {
									"entryPoint": 1664,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price_584": {
									"entryPoint": 1100,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$494_fromMemory": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_LP_$512": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$524": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$494_fromMemory": {
									"entryPoint": 2102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_LP_$512t_contract$_Router_$524": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$494": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_LP_$512": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$524": {
									"entryPoint": 2936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3092,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$494": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_LP_$512": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$524": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11656:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "928:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "930:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "930:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "930:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "907:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "915:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "903:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "903:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "922:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:35:1"
															},
															"nodeType": "YulIf",
															"src": "889:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1020:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1040:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1034:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1024:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1056:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1143:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1151:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1139:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1158:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1166:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1065:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1056:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "857:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "873:5:1",
														"type": ""
													}
												],
												"src": "791:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1269:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1278:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1269:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1341:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$494",
																	"nodeType": "YulIdentifier",
																	"src": "1300:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1300:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$494_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1237:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1245:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1253:5:1",
														"type": ""
													}
												],
												"src": "1182:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1421:97:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1431:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1453:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1431:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1506:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_LP_$512",
																	"nodeType": "YulIdentifier",
																	"src": "1469:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1469:43:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_LP_$512",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1399:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1407:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1415:5:1",
														"type": ""
													}
												],
												"src": "1359:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1600:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1622:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1609:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1600:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1679:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$524",
																	"nodeType": "YulIdentifier",
																	"src": "1638:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1568:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1576:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1584:5:1",
														"type": ""
													}
												],
												"src": "1524:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1760:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1770:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1785:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1779:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1770:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1828:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1801:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1801:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1738:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1746:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1754:5:1",
														"type": ""
													}
												],
												"src": "1697:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1948:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1994:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1996:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1996:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1996:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1969:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1978:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:32:1"
															},
															"nodeType": "YulIf",
															"src": "1958:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2087:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2102:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2126:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2137:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2122:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2122:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2116:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2116:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2106:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2187:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2189:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2189:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2189:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2159:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2167:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2156:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2153:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2284:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2355:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2366:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2351:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2351:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2375:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2294:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2284:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1918:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1929:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1941:6:1",
														"type": ""
													}
												],
												"src": "1846:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2497:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2543:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2545:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2545:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2518:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2527:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2514:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2510:32:1"
															},
															"nodeType": "YulIf",
															"src": "2507:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2636:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2651:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2665:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2655:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2680:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2740:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2751:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2736:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2736:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2760:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$494_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2690:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2690:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2680:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$494_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2467:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2478:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2490:6:1",
														"type": ""
													}
												],
												"src": "2406:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2898:415:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2946:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:32:1"
															},
															"nodeType": "YulIf",
															"src": "2908:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3037:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3052:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3081:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3126:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3137:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3122:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3122:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3146:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_LP_$512",
																			"nodeType": "YulIdentifier",
																			"src": "3091:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3174:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3189:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3203:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3193:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3219:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3268:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3279:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3264:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3264:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3288:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$524",
																			"nodeType": "YulIdentifier",
																			"src": "3229:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3219:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_LP_$512t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2860:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2871:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2883:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2891:6:1",
														"type": ""
													}
												],
												"src": "2791:522:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3396:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3442:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3444:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3444:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3444:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3417:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3426:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3413:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3438:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:32:1"
															},
															"nodeType": "YulIf",
															"src": "3406:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3535:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3550:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3564:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3554:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3579:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3625:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3636:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3621:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3621:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3645:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3589:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3589:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3579:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3389:6:1",
														"type": ""
													}
												],
												"src": "3319:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3756:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3800:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3808:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3766:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3766:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3766:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3821:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3839:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3821:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3729:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3737:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3745:10:1",
														"type": ""
													}
												],
												"src": "3676:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3916:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3933:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3956:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3938:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3938:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3926:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3904:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3911:3:1",
														"type": ""
													}
												],
												"src": "3861:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4040:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4057:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4080:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4062:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4050:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4028:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4035:3:1",
														"type": ""
													}
												],
												"src": "3975:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4253:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4263:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4325:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4277:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4267:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4340:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4421:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4426:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4347:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4340:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4442:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4507:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4457:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4446:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4522:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4536:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4526:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4612:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4626:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4653:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4647:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4647:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4630:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4673:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4724:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4739:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4680:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4680:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4673:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4756:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4819:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4766:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4766:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4574:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4577:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4571:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4585:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4587:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4596:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4592:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4592:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4587:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4556:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4558:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4567:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4562:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4552:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4845:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4852:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4845:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4232:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4239:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4248:3:1",
														"type": ""
													}
												],
												"src": "4129:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5013:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5023:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5089:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5094:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5030:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5030:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5023:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "5106:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5106:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5208:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5219:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5224:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5208:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5001:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5009:3:1",
														"type": ""
													}
												],
												"src": "4867:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5304:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5321:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5344:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5326:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5326:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5314:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5292:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5299:3:1",
														"type": ""
													}
												],
												"src": "5239:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5461:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5471:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5483:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5494:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5479:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5479:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5471:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5564:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5575:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5560:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5507:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5507:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5433:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5445:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5456:4:1",
														"type": ""
													}
												],
												"src": "5363:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5762:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5772:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5784:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5795:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5772:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5830:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5815:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5838:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5844:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5834:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5808:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5808:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5864:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5998:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5872:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5872:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5864:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5742:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5757:4:1",
														"type": ""
													}
												],
												"src": "5591:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6114:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6204:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6217:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6228:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6213:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6160:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6160:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6086:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6098:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6109:4:1",
														"type": ""
													}
												],
												"src": "6016:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6420:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6430:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6453:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6438:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6430:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6510:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6523:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6534:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6519:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6466:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6466:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6558:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6569:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6554:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6578:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6574:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6547:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6604:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6706:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6715:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6612:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6604:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6384:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6396:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6404:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6415:4:1",
														"type": ""
													}
												],
												"src": "6244:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6774:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6784:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6794:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6843:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6851:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6823:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6823:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6823:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6758:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6767:6:1",
														"type": ""
													}
												],
												"src": "6733:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6908:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6918:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6934:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6928:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6928:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6901:6:1",
														"type": ""
													}
												],
												"src": "6868:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7031:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7136:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7138:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7138:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7138:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7108:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7116:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7105:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7105:30:1"
															},
															"nodeType": "YulIf",
															"src": "7102:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7168:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7180:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7188:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7176:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7176:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7168:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7230:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7242:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7248:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7238:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7230:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7015:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7026:4:1",
														"type": ""
													}
												],
												"src": "6949:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7338:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7348:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "7356:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7348:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7369:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7381:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7386:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7369:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7333:4:1",
														"type": ""
													}
												],
												"src": "7266:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7478:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7489:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7505:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7499:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7489:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7471:6:1",
														"type": ""
													}
												],
												"src": "7404:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7599:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7609:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7621:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7626:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7609:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7586:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7594:4:1",
														"type": ""
													}
												],
												"src": "7524:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7754:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7771:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7776:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7764:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7764:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7792:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7811:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7816:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7792:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7726:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7731:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7742:11:1",
														"type": ""
													}
												],
												"src": "7643:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7929:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7946:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7951:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7967:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7986:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7991:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7967:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7901:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7906:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7917:11:1",
														"type": ""
													}
												],
												"src": "7833:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8050:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8060:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8083:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8065:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8065:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8060:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8094:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8117:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8099:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8099:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8094:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8141:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8143:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8143:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8143:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8138:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:9:1"
															},
															"nodeType": "YulIf",
															"src": "8128:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8173:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8182:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8185:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8178:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8173:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8039:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8042:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8048:1:1",
														"type": ""
													}
												],
												"src": "8008:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8247:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8257:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8280:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8262:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8257:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8291:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8314:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8296:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8296:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8291:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8489:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8491:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8491:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8491:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8401:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8394:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8394:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8387:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8409:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8416:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8484:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8412:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8412:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8406:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8406:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:105:1"
															},
															"nodeType": "YulIf",
															"src": "8380:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8521:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8536:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8539:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8532:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8532:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8521:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8230:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8233:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8239:7:1",
														"type": ""
													}
												],
												"src": "8199:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8608:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8637:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8619:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8608:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8580:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8590:7:1",
														"type": ""
													}
												],
												"src": "8553:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8714:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8724:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8753:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8735:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8735:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8724:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$494",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8696:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8706:7:1",
														"type": ""
													}
												],
												"src": "8655:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8826:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8836:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8865:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8847:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8847:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8836:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_LP_$512",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8808:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8818:7:1",
														"type": ""
													}
												],
												"src": "8771:106:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8942:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8952:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8981:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8963:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8952:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8924:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8934:7:1",
														"type": ""
													}
												],
												"src": "8883:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9044:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9054:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9069:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9076:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9065:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9065:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9054:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9026:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9036:7:1",
														"type": ""
													}
												],
												"src": "8999:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9176:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9186:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9197:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9186:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9158:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9168:7:1",
														"type": ""
													}
												],
												"src": "9131:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9257:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9267:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9289:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "9319:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9297:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9297:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9285:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9285:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9271:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9436:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9438:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9438:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9438:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9379:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9391:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9376:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9376:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9415:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9427:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9412:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9412:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9373:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9373:62:1"
															},
															"nodeType": "YulIf",
															"src": "9370:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9478:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9467:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9467:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9243:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9251:4:1",
														"type": ""
													}
												],
												"src": "9214:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9529:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9546:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9549:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9539:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9539:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9643:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9646:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9636:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9636:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9636:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9670:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9660:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9660:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9501:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9715:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9732:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9735:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9725:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9725:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9829:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9832:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9822:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9822:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9853:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9856:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9846:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9846:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9687:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9901:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9918:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9921:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9911:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10015:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10018:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10008:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10039:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10042:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10032:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10032:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9873:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10087:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10104:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10107:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10097:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10097:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10201:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10204:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10194:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10225:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10228:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10218:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10218:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10059:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10334:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10351:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10354:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10344:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10344:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "10245:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10457:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10474:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10477:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10467:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10467:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "10368:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10580:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10597:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10600:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10590:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10590:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10491:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10703:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10720:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10723:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10713:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "10614:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10785:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10795:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10813:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10820:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10809:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10829:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10825:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10795:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10768:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10778:6:1",
														"type": ""
													}
												],
												"src": "10737:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10951:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10973:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10981:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10969:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10969:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10985:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10962:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10962:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11041:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11049:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11037:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11054:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11030:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10943:6:1",
														"type": ""
													}
												],
												"src": "10845:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11128:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11199:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11208:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11211:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11201:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11201:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11201:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11151:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11190:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$494",
																					"nodeType": "YulIdentifier",
																					"src": "11158:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11158:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11148:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11148:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11141:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11141:57:1"
															},
															"nodeType": "YulIf",
															"src": "11138:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$494",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11121:5:1",
														"type": ""
													}
												],
												"src": "11071:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11280:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11347:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11356:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11359:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11349:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11349:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11349:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11303:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11338:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_LP_$512",
																					"nodeType": "YulIdentifier",
																					"src": "11310:27:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11310:34:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11300:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11300:45:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11293:53:1"
															},
															"nodeType": "YulIf",
															"src": "11290:73:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_LP_$512",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11273:5:1",
														"type": ""
													}
												],
												"src": "11227:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11432:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11503:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11512:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11515:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11505:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11505:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11505:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11455:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11494:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$524",
																					"nodeType": "YulIdentifier",
																					"src": "11462:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11462:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11452:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11452:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11445:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11445:57:1"
															},
															"nodeType": "YulIf",
															"src": "11442:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11425:5:1",
														"type": ""
													}
												],
												"src": "11375:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11574:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11631:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11643:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11633:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11633:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11633:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11597:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11622:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11604:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11604:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11594:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11594:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:43:1"
															},
															"nodeType": "YulIf",
															"src": "11584:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11567:5:1",
														"type": ""
													}
												],
												"src": "11531:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$494_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$494(value)\n    }\n\n    function abi_decode_t_contract$_LP_$512(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_LP_$512(value)\n    }\n\n    function abi_decode_t_contract$_Router_$524(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$524(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$494_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$494_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_LP_$512t_contract$_Router_$524(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_LP_$512(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$524(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$494(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_LP_$512(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$524(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function validator_revert_t_contract$_IERC20_$494(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$494(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_LP_$512(value) {\n        if iszero(eq(value, cleanup_t_contract$_LP_$512(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$524(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$524(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b9190610863565b6100b2565b60405161006d91906109d1565b60405180910390f35b61007e610402565b60405161008b9190610996565b60405180910390f35b61009c610428565b6040516100a99190610996565b60405180910390f35b60008061025361013f848673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561010257600080fd5b505afa158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a9190610836565b61044c565b8573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd9190610836565b73ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016101f59190610996565b60206040518083038186803b15801561020d57600080fd5b505afa158015610221573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024591906108a3565b61068090919063ffffffff16565b905060006103f56102e1858773ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc9190610836565b61044c565b8673ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561032757600080fd5b505afa15801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f9190610836565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016103979190610996565b60206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e791906108a3565b61068090919063ffffffff16565b9050809250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff81111561046a57610469610c72565b5b6040519080825280602002602001820160405280156104985781602001602082028036833780820191505090505b50905082816000815181106104b0576104af610c43565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061051f5761051e610c43565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106105905761058f610c43565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016106079291906109ec565b60006040518083038186803b15801561061f57600080fd5b505afa158015610633573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061065c91906107ed565b60028151811061066f5761066e610c43565b5b602002602001015191505092915050565b60008083141561069357600090506106f5565b600082846106a19190610ae8565b90508284826106b09190610ab7565b146106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e7906109b1565b60405180910390fd5b809150505b92915050565b600061070e61070984610a41565b610a1c565b9050808382526020820190508285602086028201111561073157610730610ca6565b5b60005b85811015610761578161074788826107d8565b845260208401935060208301925050600181019050610734565b5050509392505050565b600082601f8301126107805761077f610ca1565b5b81516107908482602086016106fb565b91505092915050565b6000815190506107a881610d15565b92915050565b6000813590506107bd81610d2c565b92915050565b6000813590506107d281610d43565b92915050565b6000815190506107e781610d5a565b92915050565b60006020828403121561080357610802610cb0565b5b600082015167ffffffffffffffff81111561082157610820610cab565b5b61082d8482850161076b565b91505092915050565b60006020828403121561084c5761084b610cb0565b5b600061085a84828501610799565b91505092915050565b6000806040838503121561087a57610879610cb0565b5b6000610888858286016107ae565b9250506020610899858286016107c3565b9150509250929050565b6000602082840312156108b9576108b8610cb0565b5b60006108c7848285016107d8565b91505092915050565b60006108dc83836108e8565b60208301905092915050565b6108f181610b42565b82525050565b61090081610b42565b82525050565b600061091182610a7d565b61091b8185610a95565b935061092683610a6d565b8060005b8381101561095757815161093e88826108d0565b975061094983610a88565b92505060018101905061092a565b5085935050505092915050565b6000610971602183610aa6565b915061097c82610cc6565b604082019050919050565b61099081610baa565b82525050565b60006020820190506109ab60008301846108f7565b92915050565b600060208201905081810360008301526109ca81610964565b9050919050565b60006020820190506109e66000830184610987565b92915050565b6000604082019050610a016000830185610987565b8181036020830152610a138184610906565b90509392505050565b6000610a26610a37565b9050610a328282610bb4565b919050565b6000604051905090565b600067ffffffffffffffff821115610a5c57610a5b610c72565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ac282610baa565b9150610acd83610baa565b925082610add57610adc610c14565b5b828204905092915050565b6000610af382610baa565b9150610afe83610baa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3757610b36610be5565b5b828202905092915050565b6000610b4d82610b8a565b9050919050565b6000610b5f82610b42565b9050919050565b6000610b7182610b42565b9050919050565b6000610b8382610b42565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610bbd82610cb5565b810181811067ffffffffffffffff82111715610bdc57610bdb610c72565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b610d1e81610b54565b8114610d2957600080fd5b50565b610d3581610b66565b8114610d4057600080fd5b50565b610d4c81610b78565b8114610d5757600080fd5b50565b610d6381610baa565b8114610d6e57600080fd5b5056fea2646970667358221220a53c0a8a079127ec097563009aed098e8c5f4025c42ac8443deb7c2a597b95da64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x253 PUSH2 0x13F DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x221 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x680 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F5 PUSH2 0x2E1 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x680 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0xC72 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x498 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4B0 JUMPI PUSH2 0x4AF PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP3 SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x66F JUMPI PUSH2 0x66E PUSH2 0xC43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST EQ PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E7 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70E PUSH2 0x709 DUP5 PUSH2 0xA41 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0xCA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x761 JUMPI DUP2 PUSH2 0x747 DUP9 DUP3 PUSH2 0x7D8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x734 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0xCA1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x790 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A8 DUP2 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BD DUP2 PUSH2 0xD2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7D2 DUP2 PUSH2 0xD43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E7 DUP2 PUSH2 0xD5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x803 JUMPI PUSH2 0x802 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0xCAB JUMP JUMPDEST JUMPDEST PUSH2 0x82D DUP5 DUP3 DUP6 ADD PUSH2 0x76B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x85A DUP5 DUP3 DUP6 ADD PUSH2 0x799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x888 DUP6 DUP3 DUP7 ADD PUSH2 0x7AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x899 DUP6 DUP3 DUP7 ADD PUSH2 0x7C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C7 DUP5 DUP3 DUP6 ADD PUSH2 0x7D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP4 DUP4 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F1 DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 DUP3 PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x91B DUP2 DUP6 PUSH2 0xA95 JUMP JUMPDEST SWAP4 POP PUSH2 0x926 DUP4 PUSH2 0xA6D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x957 JUMPI DUP2 MLOAD PUSH2 0x93E DUP9 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP8 POP PUSH2 0x949 DUP4 PUSH2 0xA88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x92A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 PUSH1 0x21 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x97C DUP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0xBAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CA DUP2 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA01 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x987 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA13 DUP2 DUP5 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA26 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP PUSH2 0xA32 DUP3 DUP3 PUSH2 0xBB4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA5C JUMPI PUSH2 0xA5B PUSH2 0xC72 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP3 PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP PUSH2 0xACD DUP4 PUSH2 0xBAA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0xC14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF3 DUP3 PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP PUSH2 0xAFE DUP4 PUSH2 0xBAA JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB36 PUSH2 0xBE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP3 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5F DUP3 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 DUP3 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP3 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBD DUP3 PUSH2 0xCB5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBDC JUMPI PUSH2 0xBDB PUSH2 0xC72 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xB54 JUMP JUMPDEST DUP2 EQ PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD35 DUP2 PUSH2 0xB66 JUMP JUMPDEST DUP2 EQ PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD4C DUP2 PUSH2 0xB78 JUMP JUMPDEST DUP2 EQ PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD63 DUP2 PUSH2 0xBAA JUMP JUMPDEST DUP2 EQ PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 EXTCODECOPY EXP DUP11 SMOD SWAP2 0x27 0xEC MULMOD PUSH22 0x63009AED098E8C5F4025C42AC8443DEB7C2A597B95DA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13649:920:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14179:387;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13777:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13706;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14179:387;14258:7;14279:14;14297:102;14350:48;14356:13;14378:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14350:5;:48::i;:::-;14297:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;14334:9;14297:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;:102;;;;:::i;:::-;14279:121;;14411:14;14429:102;14482:48;14488:13;14510:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14482:5;:48::i;:::-;14429:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;14466:9;14429:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;:102;;;;:::i;:::-;14411:121;;14551:6;14543:15;;;;14179:387;;;;:::o;13777:64::-;;;;;;;;;;;;;:::o;13706:::-;;;;;;;;;;;;:::o;13893:278::-;13967:7;13986:21;14024:1;14010:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13986:40;;14047:5;14037:4;14042:1;14037:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;14073:4;;;;;;;;;;14063;14068:1;14063:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14098:4;;;;;;;;;;;14088;14093:1;14088:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14120:13;:27;;;14148:6;;14155:4;14120:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14161:1;14120:43;;;;;;;;:::i;:::-;;;;;;;;14113:50;;;13893:278;;;;:::o;9965:471::-;10023:7;10273:1;10268;:6;10264:47;;;10298:1;10291:8;;;;10264:47;10323:9;10339:1;10335;:5;;;;:::i;:::-;10323:17;;10368:1;10363;10359;:5;;;;:::i;:::-;:10;10351:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;10427:1;10420:8;;;9965:471;;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;791:385::-;873:5;922:3;915:4;907:6;903:17;899:27;889:122;;930:79;;:::i;:::-;889:122;1040:6;1034:13;1065:105;1166:3;1158:6;1151:4;1143:6;1139:17;1065:105;:::i;:::-;1056:114;;879:297;791:385;;;;:::o;1182:171::-;1253:5;1284:6;1278:13;1269:22;;1300:47;1341:5;1300:47;:::i;:::-;1182:171;;;;:::o;1359:159::-;1415:5;1453:6;1440:20;1431:29;;1469:43;1506:5;1469:43;:::i;:::-;1359:159;;;;:::o;1524:167::-;1584:5;1622:6;1609:20;1600:29;;1638:47;1679:5;1638:47;:::i;:::-;1524:167;;;;:::o;1697:143::-;1754:5;1785:6;1779:13;1770:22;;1801:33;1828:5;1801:33;:::i;:::-;1697:143;;;;:::o;1846:554::-;1941:6;1990:2;1978:9;1969:7;1965:23;1961:32;1958:119;;;1996:79;;:::i;:::-;1958:119;2137:1;2126:9;2122:17;2116:24;2167:18;2159:6;2156:30;2153:117;;;2189:79;;:::i;:::-;2153:117;2294:89;2375:7;2366:6;2355:9;2351:22;2294:89;:::i;:::-;2284:99;;2087:306;1846:554;;;;:::o;2406:379::-;2490:6;2539:2;2527:9;2518:7;2514:23;2510:32;2507:119;;;2545:79;;:::i;:::-;2507:119;2665:1;2690:78;2760:7;2751:6;2740:9;2736:22;2690:78;:::i;:::-;2680:88;;2636:142;2406:379;;;;:::o;2791:522::-;2883:6;2891;2940:2;2928:9;2919:7;2915:23;2911:32;2908:119;;;2946:79;;:::i;:::-;2908:119;3066:1;3091:63;3146:7;3137:6;3126:9;3122:22;3091:63;:::i;:::-;3081:73;;3037:127;3203:2;3229:67;3288:7;3279:6;3268:9;3264:22;3229:67;:::i;:::-;3219:77;;3174:132;2791:522;;;;;:::o;3319:351::-;3389:6;3438:2;3426:9;3417:7;3413:23;3409:32;3406:119;;;3444:79;;:::i;:::-;3406:119;3564:1;3589:64;3645:7;3636:6;3625:9;3621:22;3589:64;:::i;:::-;3579:74;;3535:128;3319:351;;;;:::o;3676:179::-;3745:10;3766:46;3808:3;3800:6;3766:46;:::i;:::-;3844:4;3839:3;3835:14;3821:28;;3676:179;;;;:::o;3861:108::-;3938:24;3956:5;3938:24;:::i;:::-;3933:3;3926:37;3861:108;;:::o;3975:118::-;4062:24;4080:5;4062:24;:::i;:::-;4057:3;4050:37;3975:118;;:::o;4129:732::-;4248:3;4277:54;4325:5;4277:54;:::i;:::-;4347:86;4426:6;4421:3;4347:86;:::i;:::-;4340:93;;4457:56;4507:5;4457:56;:::i;:::-;4536:7;4567:1;4552:284;4577:6;4574:1;4571:13;4552:284;;;4653:6;4647:13;4680:63;4739:3;4724:13;4680:63;:::i;:::-;4673:70;;4766:60;4819:6;4766:60;:::i;:::-;4756:70;;4612:224;4599:1;4596;4592:9;4587:14;;4552:284;;;4556:14;4852:3;4845:10;;4253:608;;;4129:732;;;;:::o;4867:366::-;5009:3;5030:67;5094:2;5089:3;5030:67;:::i;:::-;5023:74;;5106:93;5195:3;5106:93;:::i;:::-;5224:2;5219:3;5215:12;5208:19;;4867:366;;;:::o;5239:118::-;5326:24;5344:5;5326:24;:::i;:::-;5321:3;5314:37;5239:118;;:::o;5363:222::-;5456:4;5494:2;5483:9;5479:18;5471:26;;5507:71;5575:1;5564:9;5560:17;5551:6;5507:71;:::i;:::-;5363:222;;;;:::o;5591:419::-;5757:4;5795:2;5784:9;5780:18;5772:26;;5844:9;5838:4;5834:20;5830:1;5819:9;5815:17;5808:47;5872:131;5998:4;5872:131;:::i;:::-;5864:139;;5591:419;;;:::o;6016:222::-;6109:4;6147:2;6136:9;6132:18;6124:26;;6160:71;6228:1;6217:9;6213:17;6204:6;6160:71;:::i;:::-;6016:222;;;;:::o;6244:483::-;6415:4;6453:2;6442:9;6438:18;6430:26;;6466:71;6534:1;6523:9;6519:17;6510:6;6466:71;:::i;:::-;6584:9;6578:4;6574:20;6569:2;6558:9;6554:18;6547:48;6612:108;6715:4;6706:6;6612:108;:::i;:::-;6604:116;;6244:483;;;;;:::o;6733:129::-;6767:6;6794:20;;:::i;:::-;6784:30;;6823:33;6851:4;6843:6;6823:33;:::i;:::-;6733:129;;;:::o;6868:75::-;6901:6;6934:2;6928:9;6918:19;;6868:75;:::o;6949:311::-;7026:4;7116:18;7108:6;7105:30;7102:56;;;7138:18;;:::i;:::-;7102:56;7188:4;7180:6;7176:17;7168:25;;7248:4;7242;7238:15;7230:23;;6949:311;;;:::o;7266:132::-;7333:4;7356:3;7348:11;;7386:4;7381:3;7377:14;7369:22;;7266:132;;;:::o;7404:114::-;7471:6;7505:5;7499:12;7489:22;;7404:114;;;:::o;7524:113::-;7594:4;7626;7621:3;7617:14;7609:22;;7524:113;;;:::o;7643:184::-;7742:11;7776:6;7771:3;7764:19;7816:4;7811:3;7807:14;7792:29;;7643:184;;;;:::o;7833:169::-;7917:11;7951:6;7946:3;7939:19;7991:4;7986:3;7982:14;7967:29;;7833:169;;;;:::o;8008:185::-;8048:1;8065:20;8083:1;8065:20;:::i;:::-;8060:25;;8099:20;8117:1;8099:20;:::i;:::-;8094:25;;8138:1;8128:35;;8143:18;;:::i;:::-;8128:35;8185:1;8182;8178:9;8173:14;;8008:185;;;;:::o;8199:348::-;8239:7;8262:20;8280:1;8262:20;:::i;:::-;8257:25;;8296:20;8314:1;8296:20;:::i;:::-;8291:25;;8484:1;8416:66;8412:74;8409:1;8406:81;8401:1;8394:9;8387:17;8383:105;8380:131;;;8491:18;;:::i;:::-;8380:131;8539:1;8536;8532:9;8521:20;;8199:348;;;;:::o;8553:96::-;8590:7;8619:24;8637:5;8619:24;:::i;:::-;8608:35;;8553:96;;;:::o;8655:110::-;8706:7;8735:24;8753:5;8735:24;:::i;:::-;8724:35;;8655:110;;;:::o;8771:106::-;8818:7;8847:24;8865:5;8847:24;:::i;:::-;8836:35;;8771:106;;;:::o;8883:110::-;8934:7;8963:24;8981:5;8963:24;:::i;:::-;8952:35;;8883:110;;;:::o;8999:126::-;9036:7;9076:42;9069:5;9065:54;9054:65;;8999:126;;;:::o;9131:77::-;9168:7;9197:5;9186:16;;9131:77;;;:::o;9214:281::-;9297:27;9319:4;9297:27;:::i;:::-;9289:6;9285:40;9427:6;9415:10;9412:22;9391:18;9379:10;9376:34;9373:62;9370:88;;;9438:18;;:::i;:::-;9370:88;9478:10;9474:2;9467:22;9257:238;9214:281;;:::o;9501:180::-;9549:77;9546:1;9539:88;9646:4;9643:1;9636:15;9670:4;9667:1;9660:15;9687:180;9735:77;9732:1;9725:88;9832:4;9829:1;9822:15;9856:4;9853:1;9846:15;9873:180;9921:77;9918:1;9911:88;10018:4;10015:1;10008:15;10042:4;10039:1;10032:15;10059:180;10107:77;10104:1;10097:88;10204:4;10201:1;10194:15;10228:4;10225:1;10218:15;10245:117;10354:1;10351;10344:12;10368:117;10477:1;10474;10467:12;10491:117;10600:1;10597;10590:12;10614:117;10723:1;10720;10713:12;10737:102;10778:6;10829:2;10825:7;10820:2;10813:5;10809:14;10805:28;10795:38;;10737:102;;;:::o;10845:220::-;10985:34;10981:1;10973:6;10969:14;10962:58;11054:3;11049:2;11041:6;11037:15;11030:28;10845:220;:::o;11071:150::-;11158:38;11190:5;11158:38;:::i;:::-;11151:5;11148:49;11138:77;;11211:1;11208;11201:12;11138:77;11071:150;:::o;11227:142::-;11310:34;11338:5;11310:34;:::i;:::-;11303:5;11300:45;11290:73;;11359:1;11356;11349:12;11290:73;11227:142;:::o;11375:150::-;11462:38;11494:5;11462:38;:::i;:::-;11455:5;11452:49;11442:77;;11515:1;11512;11505:12;11442:77;11375:150;:::o;11531:122::-;11604:24;11622:5;11604:24;:::i;:::-;11597:5;11594:35;11584:63;;11643:1;11640;11633:12;11584:63;11531:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "699000",
								"executionCost": "71374",
								"totalCost": "770374"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address)": "infinite",
								"WBNB()": "2533"
							},
							"internal": {
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13728,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13799,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13865,
									"end": 13884,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 13848,
									"end": 13884,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13848,
									"end": 13884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 14569,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a53c0a8a079127ec097563009aed098e8c5f4025c42ac8443deb7c2a597b95da64736f6c63430008070033",
									".code": [
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "344E49D9"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 14569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14258,
											"end": 14265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14279,
											"end": 14293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14350,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14356,
											"end": 14369,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14387,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14378,
											"end": 14394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14394,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14350,
											"end": 14355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14350,
											"end": 14398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14350,
											"end": 14398,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14350,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14306,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14313,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14325,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 14334,
											"end": 14343,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14297,
											"end": 14345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14297,
											"end": 14349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14297,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14279,
											"end": 14400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14279,
											"end": 14400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14411,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14482,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14488,
											"end": 14501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14519,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14510,
											"end": 14526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14526,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14482,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14482,
											"end": 14530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14482,
											"end": 14530,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14482,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14429,
											"end": 14457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14457,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 14466,
											"end": 14475,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14429,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14429,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14429,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14411,
											"end": 14532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14411,
											"end": 14532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14551,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13967,
											"end": 13974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13986,
											"end": 14007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14024,
											"end": 14025,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13986,
											"end": 14026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13986,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14047,
											"end": 14052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14042,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14068,
											"end": 14069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14093,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14120,
											"end": 14147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14147,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 14148,
											"end": 14154,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14148,
											"end": 14154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14155,
											"end": 14159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14161,
											"end": 14162,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14113,
											"end": 14163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14113,
											"end": 14163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14113,
											"end": 14163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10268,
											"end": 10274,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10339,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 10364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10369,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10427,
											"end": 10428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 907,
											"end": 913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 903,
											"end": 920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1166,
											"end": 1169,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 1176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1460,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1506,
											"end": 1511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1993,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2186,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2375,
											"end": 2382,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2926,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3146,
											"end": 3153,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3135,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3288,
											"end": 3295,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3441,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3645,
											"end": 3652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4080,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4325,
											"end": 4330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4424,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4433,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4583,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4584,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4743,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4756,
											"end": 4826,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4756,
											"end": 4826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4867,
											"end": 5233,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4867,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5094,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5089,
											"end": 5092,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5030,
											"end": 5097,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5097,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5030,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5106,
											"end": 5199,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5106,
											"end": 5199,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5106,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5219,
											"end": 5222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5233,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5239,
											"end": 5357,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5239,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5344,
											"end": 5349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5326,
											"end": 5350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5326,
											"end": 5350,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5326,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5321,
											"end": 5324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5357,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5363,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5363,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5591,
											"end": 6010,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5591,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5757,
											"end": 5761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5854,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5998,
											"end": 6002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5872,
											"end": 6003,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5872,
											"end": 6003,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5872,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 6003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 6003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 6010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 6010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 6010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 6010,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6016,
											"end": 6238,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6016,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6136,
											"end": 6145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6213,
											"end": 6230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6160,
											"end": 6231,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6160,
											"end": 6231,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6160,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6238,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6442,
											"end": 6451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6534,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6715,
											"end": 6719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6612,
											"end": 6720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6720,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6612,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6733,
											"end": 6862,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6733,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6823,
											"end": 6856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6823,
											"end": 6856,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6823,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6862,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6868,
											"end": 6943,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6868,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6928,
											"end": 6937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6868,
											"end": 6943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6868,
											"end": 6943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6949,
											"end": 7260,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6949,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7116,
											"end": 7134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7108,
											"end": 7114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7135,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7158,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 7102,
											"end": 7158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7158,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 7102,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7193,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7242,
											"end": 7246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 7260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 7260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 7260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 7260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7266,
											"end": 7398,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7266,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7404,
											"end": 7518,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7404,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7471,
											"end": 7477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7499,
											"end": 7511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7518,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7524,
											"end": 7637,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7524,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7621,
											"end": 7624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7637,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7643,
											"end": 7827,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7643,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7776,
											"end": 7782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7764,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7827,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7833,
											"end": 8002,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7833,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 7957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 7958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 7995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 7996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 7996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8002,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8008,
											"end": 8193,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8008,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8065,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8083,
											"end": 8084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8065,
											"end": 8085,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8065,
											"end": 8085,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8065,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8117,
											"end": 8118,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8099,
											"end": 8119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8099,
											"end": 8119,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8099,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8128,
											"end": 8163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8143,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8143,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8143,
											"end": 8161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8143,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8143,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8163,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8128,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8182,
											"end": 8183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8187,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8193,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8199,
											"end": 8547,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 8199,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8239,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8257,
											"end": 8282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8257,
											"end": 8282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8314,
											"end": 8315,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8296,
											"end": 8316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8296,
											"end": 8316,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8296,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8412,
											"end": 8486,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8406,
											"end": 8487,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8403,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8380,
											"end": 8511,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8380,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8380,
											"end": 8511,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8380,
											"end": 8511,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8380,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8199,
											"end": 8547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8199,
											"end": 8547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8199,
											"end": 8547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8199,
											"end": 8547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8199,
											"end": 8547,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8553,
											"end": 8649,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8553,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8590,
											"end": 8597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8637,
											"end": 8642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 8619,
											"end": 8643,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8619,
											"end": 8643,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8619,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8649,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8655,
											"end": 8765,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 8655,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8735,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8735,
											"end": 8759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8735,
											"end": 8759,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 8735,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8765,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8771,
											"end": 8877,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8771,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8865,
											"end": 8870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8847,
											"end": 8871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8847,
											"end": 8871,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8847,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8883,
											"end": 8993,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8883,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8934,
											"end": 8941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8963,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8981,
											"end": 8986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8963,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8963,
											"end": 8987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8963,
											"end": 8987,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8963,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8999,
											"end": 9125,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 8999,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9069,
											"end": 9074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9119,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9131,
											"end": 9208,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9131,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9168,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9214,
											"end": 9495,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9214,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9297,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9319,
											"end": 9323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9297,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9297,
											"end": 9324,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9297,
											"end": 9324,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9297,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9289,
											"end": 9295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9285,
											"end": 9325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9412,
											"end": 9434,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9379,
											"end": 9389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9376,
											"end": 9410,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9435,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9458,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9370,
											"end": 9458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9458,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9370,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9467,
											"end": 9489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9501,
											"end": 9681,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9501,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9626,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9546,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9646,
											"end": 9650,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9643,
											"end": 9644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9636,
											"end": 9651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9670,
											"end": 9674,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9667,
											"end": 9668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9675,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9867,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9687,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9735,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9732,
											"end": 9733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9725,
											"end": 9813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9832,
											"end": 9836,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 9829,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9822,
											"end": 9837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9860,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9853,
											"end": 9854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9846,
											"end": 9861,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9873,
											"end": 10053,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 9873,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9918,
											"end": 9919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10022,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10015,
											"end": 10016,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10008,
											"end": 10023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10042,
											"end": 10046,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10032,
											"end": 10047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10059,
											"end": 10239,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10059,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10184,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10104,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10097,
											"end": 10185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10208,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10194,
											"end": 10209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10225,
											"end": 10226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10218,
											"end": 10233,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10245,
											"end": 10362,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 10245,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10354,
											"end": 10355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10351,
											"end": 10352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10344,
											"end": 10356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10485,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10368,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10479,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10608,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10491,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10597,
											"end": 10598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10590,
											"end": 10602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10614,
											"end": 10731,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10614,
											"end": 10731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10839,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10737,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10778,
											"end": 10784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10829,
											"end": 10831,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10825,
											"end": 10832,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10839,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10845,
											"end": 11065,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10845,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 10981,
											"end": 10982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 10983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10962,
											"end": 11020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11057,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11049,
											"end": 11051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11041,
											"end": 11047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11030,
											"end": 11058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10845,
											"end": 11065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10845,
											"end": 11065,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11071,
											"end": 11221,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11071,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11158,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 11190,
											"end": 11195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11158,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 11158,
											"end": 11196,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11158,
											"end": 11196,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 11158,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11151,
											"end": 11156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11148,
											"end": 11197,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 11138,
											"end": 11215,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11208,
											"end": 11209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11201,
											"end": 11213,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11215,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 11138,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11221,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11227,
											"end": 11369,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 11227,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 11338,
											"end": 11343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 11310,
											"end": 11344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11310,
											"end": 11344,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 11310,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11303,
											"end": 11308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11300,
											"end": 11345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 11290,
											"end": 11363,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11359,
											"end": 11360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11356,
											"end": 11357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11363,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 11290,
											"end": 11363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11375,
											"end": 11525,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11375,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11462,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11494,
											"end": 11499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11462,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 11462,
											"end": 11500,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11462,
											"end": 11500,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11462,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11455,
											"end": 11460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11452,
											"end": 11501,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11442,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 11442,
											"end": 11519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11512,
											"end": 11513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11505,
											"end": 11517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11442,
											"end": 11519,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 11442,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11375,
											"end": 11525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11375,
											"end": 11525,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11531,
											"end": 11653,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11531,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11604,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 11622,
											"end": 11627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11604,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11604,
											"end": 11628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11604,
											"end": 11628,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 11604,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11597,
											"end": 11602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11629,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11531,
											"end": 11653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11531,
											"end": 11653,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address)": "344e49d9",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract LP\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x58e161507e999654b8dd5e4d87af504afd37592260ad6361c79844b198230acc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab6f513fc24a3afe281fb8f2a511093be20b03c7a8f423b0745467f61dc68b82\",\"dweb:/ipfs/Qmc8pjTtJmXpYPa5wP72XRXjkTdjizBeqhbwAXoRyJJFUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 530,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 533,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 536,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x58e161507e999654b8dd5e4d87af504afd37592260ad6361c79844b198230acc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab6f513fc24a3afe281fb8f2a511093be20b03c7a8f423b0745467f61dc68b82\",\"dweb:/ipfs/Qmc8pjTtJmXpYPa5wP72XRXjkTdjizBeqhbwAXoRyJJFUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122078425ece5aecc448e66fd6157e40adfa7ca788f109d6a301197989b50a39ef3d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078425ece5aecc448e66fd6157e40adfa7ca788f109d6a301197989b50a39ef3d64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x425ECE5AECC448E66FD6157E40ADFA7CA788F109D6A3011979 DUP10 0xB5 EXP CODECOPY 0xEF RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078425ece5aecc448e66fd6157e40adfa7ca788f109d6a301197989b50a39ef3d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x425ECE5AECC448E66FD6157E40ADFA7CA788F109D6A3011979 DUP10 0xB5 EXP CODECOPY 0xEF RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078425ece5aecc448e66fd6157e40adfa7ca788f109d6a301197989b50a39ef3d64736f6c63430008070033",
									".code": [
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x58e161507e999654b8dd5e4d87af504afd37592260ad6361c79844b198230acc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab6f513fc24a3afe281fb8f2a511093be20b03c7a8f423b0745467f61dc68b82\",\"dweb:/ipfs/Qmc8pjTtJmXpYPa5wP72XRXjkTdjizBeqhbwAXoRyJJFUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/LpPrice.sol:397:9:\n    |\n397 |         uint256 phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))));\n    |         ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 14293,
					"file": "contracts/LpPrice.sol",
					"start": 14279
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							494
						],
						"LP": [
							512
						],
						"LpUtils": [
							648
						],
						"Router": [
							524
						],
						"SafeMath": [
							486
						]
					},
					"id": 649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 649,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "SafeMath",
							"nameLocation": "8346:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "8660:114:0",
										"statements": [
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "8679:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "8671:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "8683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8671:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "8707:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "8712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8715:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8699:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "8699:46:0"
											},
											{
												"expression": {
													"id": 316,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "8765:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 317,
												"nodeType": "Return",
												"src": "8758:8:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8602:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8606:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8605:22:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8650:9:0"
									},
									"scope": 486,
									"src": "8593:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9116:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "9138:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 331,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "9141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9144:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 329,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															364
														],
														"referencedDeclaration": 364,
														"src": "9134:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9134:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "9127:50:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "8782:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9058:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9070:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9062:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9081:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9061:22:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9107:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9106:9:0"
									},
									"scope": 486,
									"src": "9049:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9617:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "9641:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 352,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9644:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9628:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "9628:29:0"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "9676:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "9668:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "9680:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9668:17:0"
											},
											{
												"expression": {
													"id": 361,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 356,
													"src": "9705:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 362,
												"nodeType": "Return",
												"src": "9698:8:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "9193:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9531:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9543:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9554:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9571:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9557:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9534:50:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9607:9:0"
									},
									"scope": 486,
									"src": "9522:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "10032:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10268:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10273:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "10264:47:0",
												"trueBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "10276:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 373,
															"id": 378,
															"nodeType": "Return",
															"src": "10291:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "10331:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "10323:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10335:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 384,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "10339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10323:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "10359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 389,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "10363:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10359:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 391,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "10368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10371:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10351:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "10351:56:0"
											},
											{
												"expression": {
													"id": 396,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "10427:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 397,
												"nodeType": "Return",
												"src": "10420:8:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "9722:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9974:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9977:22:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10023:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10022:9:0"
									},
									"scope": 486,
									"src": "9965:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "10971:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "10993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 411,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "10996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10999:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 409,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															416,
															444
														],
														"referencedDeclaration": 444,
														"src": "10989:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10989:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 414,
												"nodeType": "Return",
												"src": "10982:46:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "10444:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10913:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10936:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10928:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10916:22:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10962:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10961:9:0"
									},
									"scope": 486,
									"src": "10904:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "11661:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 429,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "11747:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 432,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "11754:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11739:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "11739:28:0"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "11786:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "11778:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11778:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "11790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "11794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11778:17:0"
											},
											{
												"expression": {
													"id": 441,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 436,
													"src": "11902:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 442,
												"nodeType": "Return",
												"src": "11895:8:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "11044:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11575:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11587:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11598:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11615:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11601:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11601:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11578:50:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11651:9:0"
									},
									"scope": 486,
									"src": "11566:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "12435:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "12457:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "12460:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12463:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 454,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															461,
															485
														],
														"referencedDeclaration": 485,
														"src": "12453:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12453:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 459,
												"nodeType": "Return",
												"src": "12446:44:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "11919:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12377:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12400:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12392:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12380:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12425:9:0"
									},
									"scope": 486,
									"src": "12368:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "13112:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "13131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13136:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 477,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "13139:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13123:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "13123:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "13170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 481,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "13174:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13170:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 472,
												"id": 483,
												"nodeType": "Return",
												"src": "13163:12:0"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "12506:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "13026:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13038:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13049:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13052:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13029:50:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:9:0"
									},
									"scope": 486,
									"src": "13017:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 649,
							"src": "8338:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "IERC20",
							"nameLocation": "13200:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13229:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13238:17:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13278:9:0"
									},
									"scope": 494,
									"src": "13220:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "13190:101:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "LP",
							"nameLocation": "13305:2:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13326:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13337:2:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "13363:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13362:9:0"
									},
									"scope": 512,
									"src": "13317:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "13389:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13395:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13421:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$494",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 501,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "13421:6:0"
													},
													"referencedDeclaration": 494,
													"src": "13421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$494",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13420:8:0"
									},
									"scope": 512,
									"src": "13380:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "13446:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13452:2:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "13478:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$494",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "13478:6:0"
													},
													"referencedDeclaration": 494,
													"src": "13478:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$494",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13477:8:0"
									},
									"scope": 512,
									"src": "13437:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "13295:194:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 524,
							"linearizedBaseContracts": [
								524
							],
							"name": "Router",
							"nameLocation": "13503:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "13526:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "13545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "13572:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13555:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 515,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13555:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 516,
													"nodeType": "ArrayTypeName",
													"src": "13555:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13539:38:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13619:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 519,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "13619:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 520,
													"nodeType": "ArrayTypeName",
													"src": "13619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13618:23:0"
									},
									"scope": 524,
									"src": "13517:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "13493:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "LpUtils",
							"nameLocation": "13658:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 527,
									"libraryName": {
										"id": 525,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "13679:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13673:27:0",
									"typeName": {
										"id": 526,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13692:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 530,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "13721:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "13706:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 528,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13728:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 533,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "13792:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "13777:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 531,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13777:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13799:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13856:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "13848:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 534,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13848:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13865:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "13975:196:0",
										"statements": [
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "14003:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "13986:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 548,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13986:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 549,
															"nodeType": "ArrayTypeName",
															"src": "13986:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14024:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14010:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14014:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 552,
															"nodeType": "ArrayTypeName",
															"src": "14014:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14010:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13986:40:0"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 557,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14037:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 559,
														"indexExpression": {
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14042:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 560,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "14047:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14037:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "14037:15:0"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 563,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14063:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 565,
														"indexExpression": {
															"hexValue": "31",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14068:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 566,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "14073:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14063:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "14063:14:0"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 569,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 571,
														"indexExpression": {
															"hexValue": "32",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 572,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "14098:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14088:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "14088:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 577,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "14148:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 578,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "14155:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 575,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "14120:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$524",
																	"typeString": "contract Router"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "14120:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14120:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 581,
													"indexExpression": {
														"hexValue": "32",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14161:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14120:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 582,
												"nodeType": "Return",
												"src": "14113:50:0"
											}
										]
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "13902:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "13915:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13908:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$524",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "13908:6:0"
													},
													"referencedDeclaration": 524,
													"src": "13908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$524",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13938:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13907:37:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13966:9:0"
									},
									"scope": 648,
									"src": "13893:278:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "14266:300:0",
										"statements": [
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "phase1",
														"nameLocation": "14287:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "14279:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 608,
																			"name": "routerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "14356:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Router_$524",
																				"typeString": "contract Router"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 611,
																							"name": "lpAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "14378:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LP_$512",
																								"typeString": "contract LP"
																							}
																						},
																						"id": 612,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token0",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 505,
																						"src": "14378:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																							"typeString": "function () view external returns (contract IERC20)"
																						}
																					},
																					"id": 613,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14378:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$494",
																						"typeString": "contract IERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20_$494",
																						"typeString": "contract IERC20"
																					}
																				],
																				"id": 610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14370:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 609,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "14370:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14370:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Router_$524",
																				"typeString": "contract Router"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 607,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "14350:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$524_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (contract Router,address) view returns (uint256)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14350:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 603,
																					"name": "lpAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "14334:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LP_$512",
																						"typeString": "contract LP"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_LP_$512",
																						"typeString": "contract LP"
																					}
																				],
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14326:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 601,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "14326:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14326:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 597,
																					"name": "lpAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "14297:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LP_$512",
																						"typeString": "contract LP"
																					}
																				},
																				"id": 598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 505,
																				"src": "14297:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																					"typeString": "function () view external returns (contract IERC20)"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14297:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$494",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 493,
																		"src": "14297:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14297:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 399,
																"src": "14297:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14297:102:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 617,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14296:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14279:121:0"
											},
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "phase2",
														"nameLocation": "14419:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "14411:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14411:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 632,
																			"name": "routerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "14488:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Router_$524",
																				"typeString": "contract Router"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 635,
																							"name": "lpAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "14510:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LP_$512",
																								"typeString": "contract LP"
																							}
																						},
																						"id": 636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 511,
																						"src": "14510:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																							"typeString": "function () view external returns (contract IERC20)"
																						}
																					},
																					"id": 637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14510:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$494",
																						"typeString": "contract IERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20_$494",
																						"typeString": "contract IERC20"
																					}
																				],
																				"id": 634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14502:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 633,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "14502:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14502:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Router_$524",
																				"typeString": "contract Router"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 631,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "14482:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$524_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (contract Router,address) view returns (uint256)"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14482:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 627,
																					"name": "lpAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "14466:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LP_$512",
																						"typeString": "contract LP"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_LP_$512",
																						"typeString": "contract LP"
																					}
																				],
																				"id": 626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14458:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 625,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "14458:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14458:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 621,
																					"name": "lpAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "14429:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LP_$512",
																						"typeString": "contract LP"
																					}
																				},
																				"id": 622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 511,
																				"src": "14429:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																					"typeString": "function () view external returns (contract IERC20)"
																				}
																			},
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14429:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$494",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 493,
																		"src": "14429:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14429:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 399,
																"src": "14429:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14429:102:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 641,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14428:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14411:121:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 643,
															"name": "phase2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "14551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 644,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14550:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 594,
												"id": 645,
												"nodeType": "Return",
												"src": "14543:15:0"
											}
										]
									},
									"functionSelector": "344e49d9",
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "14188:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "14203:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "14200:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_LP_$512",
													"typeString": "contract LP"
												},
												"typeName": {
													"id": 586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 585,
														"name": "LP",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 512,
														"src": "14200:2:0"
													},
													"referencedDeclaration": 512,
													"src": "14200:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LP_$512",
														"typeString": "contract LP"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "14221:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "14214:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$524",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 588,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "14214:6:0"
													},
													"referencedDeclaration": 524,
													"src": "14214:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$524",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14199:36:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "14258:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14257:9:0"
									},
									"scope": 648,
									"src": "14179:387:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "13649:920:0",
							"usedErrors": []
						}
					],
					"src": "33:14536:0"
				},
				"id": 0
			}
		}
	}
}
{
	"id": "0e4c9e0bec484e6613d8cc73ddf55bc0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r\n        return ((lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0())) );\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a70902eb4596df1d19f3287869f45421db31c34fdb27037b1e458c376e28f88f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a70902eb4596df1d19f3287869f45421db31c34fdb27037b1e458c376e28f88f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 MULMOD MUL 0xEB GASLIMIT SWAP7 0xDF SAR NOT RETURN 0x28 PUSH25 0x69F45421DB31C34FDB27037B1E458C376E28F88F64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a70902eb4596df1d19f3287869f45421db31c34fdb27037b1e458c376e28f88f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 MULMOD MUL 0xEB GASLIMIT SWAP7 0xDF SAR NOT RETURN 0x28 PUSH25 0x69F45421DB31C34FDB27037B1E458C376E28F88F64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a70902eb4596df1d19f3287869f45421db31c34fdb27037b1e458c376e28f88f64736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x5f0326e16075943c3598fe709a65be5785297d5b7f0301eae7633d1f37e2226d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed21aefc1f2ae438272584a6f30b5b4f1c9caec1b00442af39a798503f4804c\",\"dweb:/ipfs/QmTomQZiCD3Ltgo2iduFv7D1LDDbQUZtzGRbxanGfKFCRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x5f0326e16075943c3598fe709a65be5785297d5b7f0301eae7633d1f37e2226d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed21aefc1f2ae438272584a6f30b5b4f1c9caec1b00442af39a798503f4804c\",\"dweb:/ipfs/QmTomQZiCD3Ltgo2iduFv7D1LDDbQUZtzGRbxanGfKFCRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8846:9544  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8892:8934  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8963:9005  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9029:9048  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9012:9048  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8846:9544  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8846:9544  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x344e49d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9340:9541  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9340:9541  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":9423:9430  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9491:9530  price(routerAddress,lpAddress.token0()) */\n      tag_20\n        /* \"contracts/LpPrice.sol\":9497:9510  routerAddress */\n      dup3\n        /* \"contracts/LpPrice.sol\":9511:9520  lpAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9511:9527  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9511:9529  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/LpPrice.sol\":9491:9496  price */\n      tag_26\n        /* \"contracts/LpPrice.sol\":9491:9530  price(routerAddress,lpAddress.token0()) */\n      jump\t// in\n    tag_20:\n        /* \"contracts/LpPrice.sol\":9451:9460  lpAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9451:9470  lpAddress.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":9471:9480  lpAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":9471:9487  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9471:9489  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_30:\n        /* \"contracts/LpPrice.sol\":9451:9490  lpAddress.balanceOf(lpAddress.token0()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/LpPrice.sol\":9451:9530  lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0()) */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/LpPrice.sol\":9442:9533  return ((lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0())) ) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9340:9541  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9057:9332  function price(Router routerAddress, address token) internal view returns(uint){\r... */\n    tag_26:\n        /* \"contracts/LpPrice.sol\":9131:9135  uint */\n      0x00\n        /* \"contracts/LpPrice.sol\":9147:9168  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":9185:9186  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":9171:9187  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n    tag_40:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_43\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_43:\n      pop\n        /* \"contracts/LpPrice.sol\":9147:9187  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9208:9213  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":9198:9202  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9203:9204  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9198:9205  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n    tag_44:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9198:9213  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9234:9238  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9224:9228  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9229:9230  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":9224:9231  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_48\n      tag_46\n      jump\t// in\n    tag_48:\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9224:9238  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9259:9263  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9249:9253  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9254:9255  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9249:9256  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_50\n      tag_46\n      jump\t// in\n    tag_50:\n    tag_49:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9249:9263  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9281:9294  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9281:9308  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":9309:9315  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":9316:9320  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":9281:9321  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts/LpPrice.sol\":9322:9323  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9281:9324  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_46\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":9274:9324  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9057:9332  function price(Router routerAddress, address token) internal view returns(uint){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_61:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_63\n        /* \"#utility.yul\":172:236   */\n      tag_64\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":156:237   */\n      tag_66\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":361:504   */\n    tag_67:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_70:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_73\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_70)\n    tag_72:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:917   */\n    tag_75:\n        /* \"#utility.yul\":831:836   */\n      0x00\n        /* \"#utility.yul\":862:868   */\n      dup2\n        /* \"#utility.yul\":856:869   */\n      mload\n        /* \"#utility.yul\":847:869   */\n      swap1\n      pop\n        /* \"#utility.yul\":878:911   */\n      tag_77\n        /* \"#utility.yul\":905:910   */\n      dup2\n        /* \"#utility.yul\":878:911   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":774:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":940:1325   */\n    tag_79:\n        /* \"#utility.yul\":1022:1027   */\n      0x00\n        /* \"#utility.yul\":1071:1074   */\n      dup3\n        /* \"#utility.yul\":1064:1068   */\n      0x1f\n        /* \"#utility.yul\":1056:1062   */\n      dup4\n        /* \"#utility.yul\":1052:1069   */\n      add\n        /* \"#utility.yul\":1048:1075   */\n      slt\n        /* \"#utility.yul\":1038:1160   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1079:1158   */\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1038:1160   */\n    tag_81:\n        /* \"#utility.yul\":1189:1195   */\n      dup2\n        /* \"#utility.yul\":1183:1196   */\n      mload\n        /* \"#utility.yul\":1214:1319   */\n      tag_84\n        /* \"#utility.yul\":1315:1318   */\n      dup5\n        /* \"#utility.yul\":1307:1313   */\n      dup3\n        /* \"#utility.yul\":1300:1304   */\n      0x20\n        /* \"#utility.yul\":1292:1298   */\n      dup7\n        /* \"#utility.yul\":1288:1305   */\n      add\n        /* \"#utility.yul\":1214:1319   */\n      tag_61\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1205:1319   */\n      swap2\n      pop\n        /* \"#utility.yul\":1028:1325   */\n      pop\n        /* \"#utility.yul\":940:1325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1331:1498   */\n    tag_85:\n        /* \"#utility.yul\":1391:1396   */\n      0x00\n        /* \"#utility.yul\":1429:1435   */\n      dup2\n        /* \"#utility.yul\":1416:1436   */\n      calldataload\n        /* \"#utility.yul\":1407:1436   */\n      swap1\n      pop\n        /* \"#utility.yul\":1445:1492   */\n      tag_87\n        /* \"#utility.yul\":1486:1491   */\n      dup2\n        /* \"#utility.yul\":1445:1492   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1331:1498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1504:1671   */\n    tag_89:\n        /* \"#utility.yul\":1564:1569   */\n      0x00\n        /* \"#utility.yul\":1602:1608   */\n      dup2\n        /* \"#utility.yul\":1589:1609   */\n      calldataload\n        /* \"#utility.yul\":1580:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1618:1665   */\n      tag_91\n        /* \"#utility.yul\":1659:1664   */\n      dup2\n        /* \"#utility.yul\":1618:1665   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1504:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1820   */\n    tag_74:\n        /* \"#utility.yul\":1734:1739   */\n      0x00\n        /* \"#utility.yul\":1765:1771   */\n      dup2\n        /* \"#utility.yul\":1759:1772   */\n      mload\n        /* \"#utility.yul\":1750:1772   */\n      swap1\n      pop\n        /* \"#utility.yul\":1781:1814   */\n      tag_94\n        /* \"#utility.yul\":1808:1813   */\n      dup2\n        /* \"#utility.yul\":1781:1814   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1677:1820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1826:2177   */\n    tag_25:\n        /* \"#utility.yul\":1896:1902   */\n      0x00\n        /* \"#utility.yul\":1945:1947   */\n      0x20\n        /* \"#utility.yul\":1933:1942   */\n      dup3\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1920:1943   */\n      sub\n        /* \"#utility.yul\":1916:1948   */\n      slt\n        /* \"#utility.yul\":1913:2032   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1951:2030   */\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1913:2032   */\n    tag_97:\n        /* \"#utility.yul\":2071:2072   */\n      0x00\n        /* \"#utility.yul\":2096:2160   */\n      tag_100\n        /* \"#utility.yul\":2152:2159   */\n      dup5\n        /* \"#utility.yul\":2143:2149   */\n      dup3\n        /* \"#utility.yul\":2132:2141   */\n      dup6\n        /* \"#utility.yul\":2128:2150   */\n      add\n        /* \"#utility.yul\":2096:2160   */\n      tag_75\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2086:2160   */\n      swap2\n      pop\n        /* \"#utility.yul\":2042:2170   */\n      pop\n        /* \"#utility.yul\":1826:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2737   */\n    tag_57:\n        /* \"#utility.yul\":2278:2284   */\n      0x00\n        /* \"#utility.yul\":2327:2329   */\n      0x20\n        /* \"#utility.yul\":2315:2324   */\n      dup3\n        /* \"#utility.yul\":2306:2313   */\n      dup5\n        /* \"#utility.yul\":2302:2325   */\n      sub\n        /* \"#utility.yul\":2298:2330   */\n      slt\n        /* \"#utility.yul\":2295:2414   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":2333:2412   */\n      tag_103\n      tag_99\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2295:2414   */\n    tag_102:\n        /* \"#utility.yul\":2474:2475   */\n      0x00\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2476   */\n      add\n        /* \"#utility.yul\":2453:2477   */\n      mload\n        /* \"#utility.yul\":2504:2522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2496:2502   */\n      dup2\n        /* \"#utility.yul\":2493:2523   */\n      gt\n        /* \"#utility.yul\":2490:2607   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2526:2605   */\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2490:2607   */\n    tag_104:\n        /* \"#utility.yul\":2631:2720   */\n      tag_107\n        /* \"#utility.yul\":2712:2719   */\n      dup5\n        /* \"#utility.yul\":2703:2709   */\n      dup3\n        /* \"#utility.yul\":2692:2701   */\n      dup6\n        /* \"#utility.yul\":2688:2710   */\n      add\n        /* \"#utility.yul\":2631:2720   */\n      tag_79\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2621:2720   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2730   */\n      pop\n        /* \"#utility.yul\":2183:2737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2743:3273   */\n    tag_8:\n        /* \"#utility.yul\":2839:2845   */\n      0x00\n        /* \"#utility.yul\":2847:2853   */\n      dup1\n        /* \"#utility.yul\":2896:2898   */\n      0x40\n        /* \"#utility.yul\":2884:2893   */\n      dup4\n        /* \"#utility.yul\":2875:2882   */\n      dup6\n        /* \"#utility.yul\":2871:2894   */\n      sub\n        /* \"#utility.yul\":2867:2899   */\n      slt\n        /* \"#utility.yul\":2864:2983   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2902:2981   */\n      tag_110\n      tag_99\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2864:2983   */\n    tag_109:\n        /* \"#utility.yul\":3022:3023   */\n      0x00\n        /* \"#utility.yul\":3047:3114   */\n      tag_111\n        /* \"#utility.yul\":3106:3113   */\n      dup6\n        /* \"#utility.yul\":3097:3103   */\n      dup3\n        /* \"#utility.yul\":3086:3095   */\n      dup7\n        /* \"#utility.yul\":3082:3104   */\n      add\n        /* \"#utility.yul\":3047:3114   */\n      tag_85\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3037:3114   */\n      swap3\n      pop\n        /* \"#utility.yul\":2993:3124   */\n      pop\n        /* \"#utility.yul\":3163:3165   */\n      0x20\n        /* \"#utility.yul\":3189:3256   */\n      tag_112\n        /* \"#utility.yul\":3248:3255   */\n      dup6\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3228:3237   */\n      dup7\n        /* \"#utility.yul\":3224:3246   */\n      add\n        /* \"#utility.yul\":3189:3256   */\n      tag_89\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3179:3256   */\n      swap2\n      pop\n        /* \"#utility.yul\":3134:3266   */\n      pop\n        /* \"#utility.yul\":2743:3273   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3279:3630   */\n    tag_36:\n        /* \"#utility.yul\":3349:3355   */\n      0x00\n        /* \"#utility.yul\":3398:3400   */\n      0x20\n        /* \"#utility.yul\":3386:3395   */\n      dup3\n        /* \"#utility.yul\":3377:3384   */\n      dup5\n        /* \"#utility.yul\":3373:3396   */\n      sub\n        /* \"#utility.yul\":3369:3401   */\n      slt\n        /* \"#utility.yul\":3366:3485   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3404:3483   */\n      tag_115\n      tag_99\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3366:3485   */\n    tag_114:\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3549:3613   */\n      tag_116\n        /* \"#utility.yul\":3605:3612   */\n      dup5\n        /* \"#utility.yul\":3596:3602   */\n      dup3\n        /* \"#utility.yul\":3585:3594   */\n      dup6\n        /* \"#utility.yul\":3581:3603   */\n      add\n        /* \"#utility.yul\":3549:3613   */\n      tag_74\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3539:3613   */\n      swap2\n      pop\n        /* \"#utility.yul\":3495:3623   */\n      pop\n        /* \"#utility.yul\":3279:3630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3636:3815   */\n    tag_117:\n        /* \"#utility.yul\":3705:3715   */\n      0x00\n        /* \"#utility.yul\":3726:3772   */\n      tag_119\n        /* \"#utility.yul\":3768:3771   */\n      dup4\n        /* \"#utility.yul\":3760:3766   */\n      dup4\n        /* \"#utility.yul\":3726:3772   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3804:3808   */\n      0x20\n        /* \"#utility.yul\":3799:3802   */\n      dup4\n        /* \"#utility.yul\":3795:3809   */\n      add\n        /* \"#utility.yul\":3781:3809   */\n      swap1\n      pop\n        /* \"#utility.yul\":3636:3815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3821:3929   */\n    tag_120:\n        /* \"#utility.yul\":3898:3922   */\n      tag_122\n        /* \"#utility.yul\":3916:3921   */\n      dup2\n        /* \"#utility.yul\":3898:3922   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3893:3896   */\n      dup3\n        /* \"#utility.yul\":3886:3923   */\n      mstore\n        /* \"#utility.yul\":3821:3929   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3935:4053   */\n    tag_124:\n        /* \"#utility.yul\":4022:4046   */\n      tag_126\n        /* \"#utility.yul\":4040:4045   */\n      dup2\n        /* \"#utility.yul\":4022:4046   */\n      tag_123\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4017:4020   */\n      dup3\n        /* \"#utility.yul\":4010:4047   */\n      mstore\n        /* \"#utility.yul\":3935:4053   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4089:4821   */\n    tag_127:\n        /* \"#utility.yul\":4208:4211   */\n      0x00\n        /* \"#utility.yul\":4237:4291   */\n      tag_129\n        /* \"#utility.yul\":4285:4290   */\n      dup3\n        /* \"#utility.yul\":4237:4291   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4307:4393   */\n      tag_131\n        /* \"#utility.yul\":4386:4392   */\n      dup2\n        /* \"#utility.yul\":4381:4384   */\n      dup6\n        /* \"#utility.yul\":4307:4393   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4300:4393   */\n      swap4\n      pop\n        /* \"#utility.yul\":4417:4473   */\n      tag_133\n        /* \"#utility.yul\":4467:4472   */\n      dup4\n        /* \"#utility.yul\":4417:4473   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4496:4503   */\n      dup1\n        /* \"#utility.yul\":4527:4528   */\n      0x00\n        /* \"#utility.yul\":4512:4796   */\n    tag_135:\n        /* \"#utility.yul\":4537:4543   */\n      dup4\n        /* \"#utility.yul\":4534:4535   */\n      dup2\n        /* \"#utility.yul\":4531:4544   */\n      lt\n        /* \"#utility.yul\":4512:4796   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4613:4619   */\n      dup2\n        /* \"#utility.yul\":4607:4620   */\n      mload\n        /* \"#utility.yul\":4640:4703   */\n      tag_138\n        /* \"#utility.yul\":4699:4702   */\n      dup9\n        /* \"#utility.yul\":4684:4697   */\n      dup3\n        /* \"#utility.yul\":4640:4703   */\n      tag_117\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4633:4703   */\n      swap8\n      pop\n        /* \"#utility.yul\":4726:4786   */\n      tag_139\n        /* \"#utility.yul\":4779:4785   */\n      dup4\n        /* \"#utility.yul\":4726:4786   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4716:4786   */\n      swap3\n      pop\n        /* \"#utility.yul\":4572:4796   */\n      pop\n        /* \"#utility.yul\":4559:4560   */\n      0x01\n        /* \"#utility.yul\":4556:4557   */\n      dup2\n        /* \"#utility.yul\":4552:4561   */\n      add\n        /* \"#utility.yul\":4547:4561   */\n      swap1\n      pop\n        /* \"#utility.yul\":4512:4796   */\n      jump(tag_135)\n    tag_137:\n        /* \"#utility.yul\":4516:4530   */\n      pop\n        /* \"#utility.yul\":4812:4815   */\n      dup6\n        /* \"#utility.yul\":4805:4815   */\n      swap4\n      pop\n        /* \"#utility.yul\":4213:4821   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4089:4821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4827:4945   */\n    tag_141:\n        /* \"#utility.yul\":4914:4938   */\n      tag_143\n        /* \"#utility.yul\":4932:4937   */\n      dup2\n        /* \"#utility.yul\":4914:4938   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4909:4912   */\n      dup3\n        /* \"#utility.yul\":4902:4939   */\n      mstore\n        /* \"#utility.yul\":4827:4945   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4951:5173   */\n    tag_15:\n        /* \"#utility.yul\":5044:5048   */\n      0x00\n        /* \"#utility.yul\":5082:5084   */\n      0x20\n        /* \"#utility.yul\":5071:5080   */\n      dup3\n        /* \"#utility.yul\":5067:5085   */\n      add\n        /* \"#utility.yul\":5059:5085   */\n      swap1\n      pop\n        /* \"#utility.yul\":5095:5166   */\n      tag_146\n        /* \"#utility.yul\":5163:5164   */\n      0x00\n        /* \"#utility.yul\":5152:5161   */\n      dup4\n        /* \"#utility.yul\":5148:5165   */\n      add\n        /* \"#utility.yul\":5139:5145   */\n      dup5\n        /* \"#utility.yul\":5095:5166   */\n      tag_124\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4951:5173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5179:5401   */\n    tag_11:\n        /* \"#utility.yul\":5272:5276   */\n      0x00\n        /* \"#utility.yul\":5310:5312   */\n      0x20\n        /* \"#utility.yul\":5299:5308   */\n      dup3\n        /* \"#utility.yul\":5295:5313   */\n      add\n        /* \"#utility.yul\":5287:5313   */\n      swap1\n      pop\n        /* \"#utility.yul\":5323:5394   */\n      tag_148\n        /* \"#utility.yul\":5391:5392   */\n      0x00\n        /* \"#utility.yul\":5380:5389   */\n      dup4\n        /* \"#utility.yul\":5376:5393   */\n      add\n        /* \"#utility.yul\":5367:5373   */\n      dup5\n        /* \"#utility.yul\":5323:5394   */\n      tag_141\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5179:5401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5407:5890   */\n    tag_52:\n        /* \"#utility.yul\":5578:5582   */\n      0x00\n        /* \"#utility.yul\":5616:5618   */\n      0x40\n        /* \"#utility.yul\":5605:5614   */\n      dup3\n        /* \"#utility.yul\":5601:5619   */\n      add\n        /* \"#utility.yul\":5593:5619   */\n      swap1\n      pop\n        /* \"#utility.yul\":5629:5700   */\n      tag_150\n        /* \"#utility.yul\":5697:5698   */\n      0x00\n        /* \"#utility.yul\":5686:5695   */\n      dup4\n        /* \"#utility.yul\":5682:5699   */\n      add\n        /* \"#utility.yul\":5673:5679   */\n      dup6\n        /* \"#utility.yul\":5629:5700   */\n      tag_141\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5747:5756   */\n      dup2\n        /* \"#utility.yul\":5741:5745   */\n      dup2\n        /* \"#utility.yul\":5737:5757   */\n      sub\n        /* \"#utility.yul\":5732:5734   */\n      0x20\n        /* \"#utility.yul\":5721:5730   */\n      dup4\n        /* \"#utility.yul\":5717:5735   */\n      add\n        /* \"#utility.yul\":5710:5758   */\n      mstore\n        /* \"#utility.yul\":5775:5883   */\n      tag_151\n        /* \"#utility.yul\":5878:5882   */\n      dup2\n        /* \"#utility.yul\":5869:5875   */\n      dup5\n        /* \"#utility.yul\":5775:5883   */\n      tag_127\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5767:5883   */\n      swap1\n      pop\n        /* \"#utility.yul\":5407:5890   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6025   */\n    tag_66:\n        /* \"#utility.yul\":5930:5936   */\n      0x00\n        /* \"#utility.yul\":5957:5977   */\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5947:5977   */\n      swap1\n      pop\n        /* \"#utility.yul\":5986:6019   */\n      tag_155\n        /* \"#utility.yul\":6014:6018   */\n      dup3\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":5986:6019   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5896:6025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6031:6106   */\n    tag_154:\n        /* \"#utility.yul\":6064:6070   */\n      0x00\n        /* \"#utility.yul\":6097:6099   */\n      0x40\n        /* \"#utility.yul\":6091:6100   */\n      mload\n        /* \"#utility.yul\":6081:6100   */\n      swap1\n      pop\n        /* \"#utility.yul\":6031:6106   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6112:6423   */\n    tag_65:\n        /* \"#utility.yul\":6189:6193   */\n      0x00\n        /* \"#utility.yul\":6279:6297   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6268:6298   */\n      gt\n        /* \"#utility.yul\":6265:6321   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":6301:6319   */\n      tag_160\n      tag_42\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6265:6321   */\n    tag_159:\n        /* \"#utility.yul\":6351:6355   */\n      0x20\n        /* \"#utility.yul\":6343:6349   */\n      dup3\n        /* \"#utility.yul\":6339:6356   */\n      mul\n        /* \"#utility.yul\":6331:6356   */\n      swap1\n      pop\n        /* \"#utility.yul\":6411:6415   */\n      0x20\n        /* \"#utility.yul\":6405:6409   */\n      dup2\n        /* \"#utility.yul\":6401:6416   */\n      add\n        /* \"#utility.yul\":6393:6416   */\n      swap1\n      pop\n        /* \"#utility.yul\":6112:6423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6429:6561   */\n    tag_134:\n        /* \"#utility.yul\":6496:6500   */\n      0x00\n        /* \"#utility.yul\":6519:6522   */\n      dup2\n        /* \"#utility.yul\":6511:6522   */\n      swap1\n      pop\n        /* \"#utility.yul\":6549:6553   */\n      0x20\n        /* \"#utility.yul\":6544:6547   */\n      dup3\n        /* \"#utility.yul\":6540:6554   */\n      add\n        /* \"#utility.yul\":6532:6554   */\n      swap1\n      pop\n        /* \"#utility.yul\":6429:6561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6567:6681   */\n    tag_130:\n        /* \"#utility.yul\":6634:6640   */\n      0x00\n        /* \"#utility.yul\":6668:6673   */\n      dup2\n        /* \"#utility.yul\":6662:6674   */\n      mload\n        /* \"#utility.yul\":6652:6674   */\n      swap1\n      pop\n        /* \"#utility.yul\":6567:6681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6687:6800   */\n    tag_140:\n        /* \"#utility.yul\":6757:6761   */\n      0x00\n        /* \"#utility.yul\":6789:6793   */\n      0x20\n        /* \"#utility.yul\":6784:6787   */\n      dup3\n        /* \"#utility.yul\":6780:6794   */\n      add\n        /* \"#utility.yul\":6772:6794   */\n      swap1\n      pop\n        /* \"#utility.yul\":6687:6800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:6990   */\n    tag_132:\n        /* \"#utility.yul\":6905:6916   */\n      0x00\n        /* \"#utility.yul\":6939:6945   */\n      dup3\n        /* \"#utility.yul\":6934:6937   */\n      dup3\n        /* \"#utility.yul\":6927:6946   */\n      mstore\n        /* \"#utility.yul\":6979:6983   */\n      0x20\n        /* \"#utility.yul\":6974:6977   */\n      dup3\n        /* \"#utility.yul\":6970:6984   */\n      add\n        /* \"#utility.yul\":6955:6984   */\n      swap1\n      pop\n        /* \"#utility.yul\":6806:6990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6996:7344   */\n    tag_38:\n        /* \"#utility.yul\":7036:7043   */\n      0x00\n        /* \"#utility.yul\":7059:7079   */\n      tag_166\n        /* \"#utility.yul\":7077:7078   */\n      dup3\n        /* \"#utility.yul\":7059:7079   */\n      tag_144\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":7054:7079   */\n      swap2\n      pop\n        /* \"#utility.yul\":7093:7113   */\n      tag_167\n        /* \"#utility.yul\":7111:7112   */\n      dup4\n        /* \"#utility.yul\":7093:7113   */\n      tag_144\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":7088:7113   */\n      swap3\n      pop\n        /* \"#utility.yul\":7281:7282   */\n      dup2\n        /* \"#utility.yul\":7213:7279   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7209:7283   */\n      div\n        /* \"#utility.yul\":7206:7207   */\n      dup4\n        /* \"#utility.yul\":7203:7284   */\n      gt\n        /* \"#utility.yul\":7198:7199   */\n      dup3\n        /* \"#utility.yul\":7191:7200   */\n      iszero\n        /* \"#utility.yul\":7184:7201   */\n      iszero\n        /* \"#utility.yul\":7180:7285   */\n      and\n        /* \"#utility.yul\":7177:7308   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":7288:7306   */\n      tag_169\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7177:7308   */\n    tag_168:\n        /* \"#utility.yul\":7336:7337   */\n      dup3\n        /* \"#utility.yul\":7333:7334   */\n      dup3\n        /* \"#utility.yul\":7329:7338   */\n      mul\n        /* \"#utility.yul\":7318:7338   */\n      swap1\n      pop\n        /* \"#utility.yul\":6996:7344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7350:7446   */\n    tag_123:\n        /* \"#utility.yul\":7387:7394   */\n      0x00\n        /* \"#utility.yul\":7416:7440   */\n      tag_172\n        /* \"#utility.yul\":7434:7439   */\n      dup3\n        /* \"#utility.yul\":7416:7440   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7405:7440   */\n      swap1\n      pop\n        /* \"#utility.yul\":7350:7446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7452:7562   */\n    tag_174:\n        /* \"#utility.yul\":7503:7510   */\n      0x00\n        /* \"#utility.yul\":7532:7556   */\n      tag_176\n        /* \"#utility.yul\":7550:7555   */\n      dup3\n        /* \"#utility.yul\":7532:7556   */\n      tag_123\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7521:7556   */\n      swap1\n      pop\n        /* \"#utility.yul\":7452:7562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7568:7678   */\n    tag_177:\n        /* \"#utility.yul\":7619:7626   */\n      0x00\n        /* \"#utility.yul\":7648:7672   */\n      tag_179\n        /* \"#utility.yul\":7666:7671   */\n      dup3\n        /* \"#utility.yul\":7648:7672   */\n      tag_123\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7637:7672   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7810   */\n    tag_173:\n        /* \"#utility.yul\":7721:7728   */\n      0x00\n        /* \"#utility.yul\":7761:7803   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7754:7759   */\n      dup3\n        /* \"#utility.yul\":7750:7804   */\n      and\n        /* \"#utility.yul\":7739:7804   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7816:7893   */\n    tag_144:\n        /* \"#utility.yul\":7853:7860   */\n      0x00\n        /* \"#utility.yul\":7882:7887   */\n      dup2\n        /* \"#utility.yul\":7871:7887   */\n      swap1\n      pop\n        /* \"#utility.yul\":7816:7893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7899:8180   */\n    tag_156:\n        /* \"#utility.yul\":7982:8009   */\n      tag_183\n        /* \"#utility.yul\":8004:8008   */\n      dup3\n        /* \"#utility.yul\":7982:8009   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7974:7980   */\n      dup2\n        /* \"#utility.yul\":7970:8010   */\n      add\n        /* \"#utility.yul\":8112:8118   */\n      dup2\n        /* \"#utility.yul\":8100:8110   */\n      dup2\n        /* \"#utility.yul\":8097:8119   */\n      lt\n        /* \"#utility.yul\":8076:8094   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8064:8074   */\n      dup3\n        /* \"#utility.yul\":8061:8095   */\n      gt\n        /* \"#utility.yul\":8058:8120   */\n      or\n        /* \"#utility.yul\":8055:8143   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":8123:8141   */\n      tag_186\n      tag_42\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8055:8143   */\n    tag_185:\n        /* \"#utility.yul\":8163:8173   */\n      dup1\n        /* \"#utility.yul\":8159:8161   */\n      0x40\n        /* \"#utility.yul\":8152:8174   */\n      mstore\n        /* \"#utility.yul\":7942:8180   */\n      pop\n        /* \"#utility.yul\":7899:8180   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8186:8366   */\n    tag_170:\n        /* \"#utility.yul\":8234:8311   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8231:8232   */\n      0x00\n        /* \"#utility.yul\":8224:8312   */\n      mstore\n        /* \"#utility.yul\":8331:8335   */\n      0x11\n        /* \"#utility.yul\":8328:8329   */\n      0x04\n        /* \"#utility.yul\":8321:8336   */\n      mstore\n        /* \"#utility.yul\":8355:8359   */\n      0x24\n        /* \"#utility.yul\":8352:8353   */\n      0x00\n        /* \"#utility.yul\":8345:8360   */\n      revert\n        /* \"#utility.yul\":8372:8552   */\n    tag_46:\n        /* \"#utility.yul\":8420:8497   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8417:8418   */\n      0x00\n        /* \"#utility.yul\":8410:8498   */\n      mstore\n        /* \"#utility.yul\":8517:8521   */\n      0x32\n        /* \"#utility.yul\":8514:8515   */\n      0x04\n        /* \"#utility.yul\":8507:8522   */\n      mstore\n        /* \"#utility.yul\":8541:8545   */\n      0x24\n        /* \"#utility.yul\":8538:8539   */\n      0x00\n        /* \"#utility.yul\":8531:8546   */\n      revert\n        /* \"#utility.yul\":8558:8738   */\n    tag_42:\n        /* \"#utility.yul\":8606:8683   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8603:8604   */\n      0x00\n        /* \"#utility.yul\":8596:8684   */\n      mstore\n        /* \"#utility.yul\":8703:8707   */\n      0x41\n        /* \"#utility.yul\":8700:8701   */\n      0x04\n        /* \"#utility.yul\":8693:8708   */\n      mstore\n        /* \"#utility.yul\":8727:8731   */\n      0x24\n        /* \"#utility.yul\":8724:8725   */\n      0x00\n        /* \"#utility.yul\":8717:8732   */\n      revert\n        /* \"#utility.yul\":8744:8861   */\n    tag_83:\n        /* \"#utility.yul\":8853:8854   */\n      0x00\n        /* \"#utility.yul\":8850:8851   */\n      dup1\n        /* \"#utility.yul\":8843:8855   */\n      revert\n        /* \"#utility.yul\":8867:8984   */\n    tag_69:\n        /* \"#utility.yul\":8976:8977   */\n      0x00\n        /* \"#utility.yul\":8973:8974   */\n      dup1\n        /* \"#utility.yul\":8966:8978   */\n      revert\n        /* \"#utility.yul\":8990:9107   */\n    tag_106:\n        /* \"#utility.yul\":9099:9100   */\n      0x00\n        /* \"#utility.yul\":9096:9097   */\n      dup1\n        /* \"#utility.yul\":9089:9101   */\n      revert\n        /* \"#utility.yul\":9113:9230   */\n    tag_99:\n        /* \"#utility.yul\":9222:9223   */\n      0x00\n        /* \"#utility.yul\":9219:9220   */\n      dup1\n        /* \"#utility.yul\":9212:9224   */\n      revert\n        /* \"#utility.yul\":9236:9338   */\n    tag_184:\n        /* \"#utility.yul\":9277:9283   */\n      0x00\n        /* \"#utility.yul\":9328:9330   */\n      0x1f\n        /* \"#utility.yul\":9324:9331   */\n      not\n        /* \"#utility.yul\":9319:9321   */\n      0x1f\n        /* \"#utility.yul\":9312:9317   */\n      dup4\n        /* \"#utility.yul\":9308:9322   */\n      add\n        /* \"#utility.yul\":9304:9332   */\n      and\n        /* \"#utility.yul\":9294:9332   */\n      swap1\n      pop\n        /* \"#utility.yul\":9236:9338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9344:9466   */\n    tag_78:\n        /* \"#utility.yul\":9417:9441   */\n      tag_196\n        /* \"#utility.yul\":9435:9440   */\n      dup2\n        /* \"#utility.yul\":9417:9441   */\n      tag_123\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":9410:9415   */\n      dup2\n        /* \"#utility.yul\":9407:9442   */\n      eq\n        /* \"#utility.yul\":9397:9460   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":9456:9457   */\n      0x00\n        /* \"#utility.yul\":9453:9454   */\n      dup1\n        /* \"#utility.yul\":9446:9458   */\n      revert\n        /* \"#utility.yul\":9397:9460   */\n    tag_197:\n        /* \"#utility.yul\":9344:9466   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9472:9622   */\n    tag_88:\n        /* \"#utility.yul\":9559:9597   */\n      tag_199\n        /* \"#utility.yul\":9591:9596   */\n      dup2\n        /* \"#utility.yul\":9559:9597   */\n      tag_174\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":9552:9557   */\n      dup2\n        /* \"#utility.yul\":9549:9598   */\n      eq\n        /* \"#utility.yul\":9539:9616   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":9612:9613   */\n      0x00\n        /* \"#utility.yul\":9609:9610   */\n      dup1\n        /* \"#utility.yul\":9602:9614   */\n      revert\n        /* \"#utility.yul\":9539:9616   */\n    tag_200:\n        /* \"#utility.yul\":9472:9622   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9628:9778   */\n    tag_92:\n        /* \"#utility.yul\":9715:9753   */\n      tag_202\n        /* \"#utility.yul\":9747:9752   */\n      dup2\n        /* \"#utility.yul\":9715:9753   */\n      tag_177\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":9708:9713   */\n      dup2\n        /* \"#utility.yul\":9705:9754   */\n      eq\n        /* \"#utility.yul\":9695:9772   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":9768:9769   */\n      0x00\n        /* \"#utility.yul\":9765:9766   */\n      dup1\n        /* \"#utility.yul\":9758:9770   */\n      revert\n        /* \"#utility.yul\":9695:9772   */\n    tag_203:\n        /* \"#utility.yul\":9628:9778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9784:9906   */\n    tag_95:\n        /* \"#utility.yul\":9857:9881   */\n      tag_205\n        /* \"#utility.yul\":9875:9880   */\n      dup2\n        /* \"#utility.yul\":9857:9881   */\n      tag_144\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":9850:9855   */\n      dup2\n        /* \"#utility.yul\":9847:9882   */\n      eq\n        /* \"#utility.yul\":9837:9900   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":9896:9897   */\n      0x00\n        /* \"#utility.yul\":9893:9894   */\n      dup1\n        /* \"#utility.yul\":9886:9898   */\n      revert\n        /* \"#utility.yul\":9837:9900   */\n    tag_206:\n        /* \"#utility.yul\":9784:9906   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205a2a63359c98b9729451e243998c7047fad3b7fe5d04ea25112b6af4ee62719e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610a68806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b9190610639565b6100b2565b60405161006d9190610764565b60405180910390f35b61007e610253565b60405161008b9190610749565b60405180910390f35b61009c610279565b6040516100a99190610749565b60405180910390f35b600061013b828473ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fe57600080fd5b505afa158015610112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013691906105c3565b61029d565b8373ffffffffffffffffffffffffffffffffffffffff166370a082318573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d591906105c3565b6040518263ffffffff1660e01b81526004016101f19190610749565b60206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610679565b61024b9190610839565b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156102bb576102ba610982565b5b6040519080825280602002602001820160405280156102e95781602001602082028036833780820191505090505b509050828160008151811061030157610300610953565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106103705761036f610953565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103e1576103e0610953565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161045892919061077f565b60006040518083038186803b15801561047057600080fd5b505afa158015610484573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104ad91906105f0565b6002815181106104c0576104bf610953565b5b602002602001015191505092915050565b60006104e46104df846107d4565b6107af565b90508083825260208201905082856020860282011115610507576105066109b6565b5b60005b85811015610537578161051d88826105ae565b84526020840193506020830192505060018101905061050a565b5050509392505050565b600081519050610550816109d6565b92915050565b600082601f83011261056b5761056a6109b1565b5b815161057b8482602086016104d1565b91505092915050565b600081359050610593816109ed565b92915050565b6000813590506105a881610a04565b92915050565b6000815190506105bd81610a1b565b92915050565b6000602082840312156105d9576105d86109c0565b5b60006105e784828501610541565b91505092915050565b600060208284031215610606576106056109c0565b5b600082015167ffffffffffffffff811115610624576106236109bb565b5b61063084828501610556565b91505092915050565b600080604083850312156106505761064f6109c0565b5b600061065e85828601610584565b925050602061066f85828601610599565b9150509250929050565b60006020828403121561068f5761068e6109c0565b5b600061069d848285016105ae565b91505092915050565b60006106b283836106be565b60208301905092915050565b6106c781610893565b82525050565b6106d681610893565b82525050565b60006106e782610810565b6106f18185610828565b93506106fc83610800565b8060005b8381101561072d57815161071488826106a6565b975061071f8361081b565b925050600181019050610700565b5085935050505092915050565b610743816108e9565b82525050565b600060208201905061075e60008301846106cd565b92915050565b6000602082019050610779600083018461073a565b92915050565b6000604082019050610794600083018561073a565b81810360208301526107a681846106dc565b90509392505050565b60006107b96107ca565b90506107c582826108f3565b919050565b6000604051905090565b600067ffffffffffffffff8211156107ef576107ee610982565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610844826108e9565b915061084f836108e9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561088857610887610924565b5b828202905092915050565b600061089e826108c9565b9050919050565b60006108b082610893565b9050919050565b60006108c282610893565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6108fc826109c5565b810181811067ffffffffffffffff8211171561091b5761091a610982565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6109df81610893565b81146109ea57600080fd5b50565b6109f6816108a5565b8114610a0157600080fd5b50565b610a0d816108b7565b8114610a1857600080fd5b50565b610a24816108e9565b8114610a2f57600080fd5b5056fea26469706673582212205a2a63359c98b9729451e243998c7047fad3b7fe5d04ea25112b6af4ee62719e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA68 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x13B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x839 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x982 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x458 SWAP3 SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4 PUSH2 0x4DF DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x9B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x537 JUMPI DUP2 PUSH2 0x51D DUP9 DUP3 PUSH2 0x5AE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x550 DUP2 PUSH2 0x9D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x57B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x593 DUP2 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A8 DUP2 PUSH2 0xA04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5BD DUP2 PUSH2 0xA1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP5 DUP3 DUP6 ADD PUSH2 0x541 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x624 JUMPI PUSH2 0x623 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH2 0x630 DUP5 DUP3 DUP6 ADD PUSH2 0x556 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x65E DUP6 DUP3 DUP7 ADD PUSH2 0x584 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x66F DUP6 DUP3 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x69D DUP5 DUP3 DUP6 ADD PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x893 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6D6 DUP2 PUSH2 0x893 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E7 DUP3 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x6F1 DUP2 DUP6 PUSH2 0x828 JUMP JUMPDEST SWAP4 POP PUSH2 0x6FC DUP4 PUSH2 0x800 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x72D JUMPI DUP2 MLOAD PUSH2 0x714 DUP9 DUP3 PUSH2 0x6A6 JUMP JUMPDEST SWAP8 POP PUSH2 0x71F DUP4 PUSH2 0x81B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x700 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x743 DUP2 PUSH2 0x8E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x75E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x779 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x73A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x794 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x73A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7A6 DUP2 DUP5 PUSH2 0x6DC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B9 PUSH2 0x7CA JUMP JUMPDEST SWAP1 POP PUSH2 0x7C5 DUP3 DUP3 PUSH2 0x8F3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EE PUSH2 0x982 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x844 DUP3 PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x84F DUP4 PUSH2 0x8E9 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x888 JUMPI PUSH2 0x887 PUSH2 0x924 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89E DUP3 PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B0 DUP3 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FC DUP3 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x91B JUMPI PUSH2 0x91A PUSH2 0x982 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9DF DUP2 PUSH2 0x893 JUMP JUMPDEST DUP2 EQ PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x8A5 JUMP JUMPDEST DUP2 EQ PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA0D DUP2 PUSH2 0x8B7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0x8E9 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x2A PUSH4 0x359C98B9 PUSH19 0x9451E243998C7047FAD3B7FE5D04EA25112B6A DELEGATECALL 0xEE PUSH3 0x719E64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "8846:698:0:-:0;;;8892:42;8870:64;;;;;;;;;;;;;;;;;;;;8963:42;8941:64;;;;;;;;;;;;;;;;;;;;9029:19;9012:36;;8846:698;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_335": {
									"entryPoint": 595,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_414": {
									"entryPoint": 178,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNB_332": {
									"entryPoint": 633,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_386": {
									"entryPoint": 669,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$317": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$329": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$317": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$329": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$317": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$329": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9909:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "837:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "847:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "862:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "856:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "847:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "905:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "878:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "878:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "815:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "823:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "831:5:1",
														"type": ""
													}
												],
												"src": "774:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1077:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1079:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1079:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1079:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1056:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1064:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1052:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1052:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1071:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1048:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1041:35:1"
															},
															"nodeType": "YulIf",
															"src": "1038:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1169:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1189:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1183:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1173:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1205:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1292:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1300:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1214:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1205:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1006:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1014:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1022:5:1",
														"type": ""
													}
												],
												"src": "940:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1407:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1429:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1416:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1407:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1486:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$317",
																	"nodeType": "YulIdentifier",
																	"src": "1445:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1375:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1383:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:1",
														"type": ""
													}
												],
												"src": "1331:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1580:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1602:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1580:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1659:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$329",
																	"nodeType": "YulIdentifier",
																	"src": "1618:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1618:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1548:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1556:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1564:5:1",
														"type": ""
													}
												],
												"src": "1504:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1740:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1750:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1765:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1759:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1750:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1808:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1781:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1781:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1718:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1726:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1734:5:1",
														"type": ""
													}
												],
												"src": "1677:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1903:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1949:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1951:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1951:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1951:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1933:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:32:1"
															},
															"nodeType": "YulIf",
															"src": "1913:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2042:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2057:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2061:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2086:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2132:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2143:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2128:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2128:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2152:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2096:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2086:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1873:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1884:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1896:6:1",
														"type": ""
													}
												],
												"src": "1826:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2285:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2331:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2306:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2315:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2302:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:32:1"
															},
															"nodeType": "YulIf",
															"src": "2295:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2424:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2439:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2463:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2474:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2459:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2459:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2453:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2443:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2524:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2526:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2526:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2526:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2496:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2504:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2493:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2490:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2621:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2692:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2703:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2688:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2712:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2631:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2621:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2255:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2266:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2278:6:1",
														"type": ""
													}
												],
												"src": "2183:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2854:419:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2900:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2902:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2902:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2902:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2875:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2871:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2867:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:32:1"
															},
															"nodeType": "YulIf",
															"src": "2864:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2993:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3008:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3022:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3012:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3037:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3086:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3097:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3082:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3082:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3106:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$317",
																			"nodeType": "YulIdentifier",
																			"src": "3047:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3037:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3134:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3149:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3153:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3179:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3228:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3239:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3224:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3248:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "3189:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3179:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2816:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2827:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2839:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2847:6:1",
														"type": ""
													}
												],
												"src": "2743:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3356:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3402:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3404:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3404:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3404:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3377:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3386:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3373:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:32:1"
															},
															"nodeType": "YulIf",
															"src": "3366:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3495:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3510:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3524:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3514:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3539:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3585:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3596:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3581:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3581:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3605:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3549:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3539:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3326:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3337:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3349:6:1",
														"type": ""
													}
												],
												"src": "3279:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3768:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3726:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3781:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3799:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3781:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3689:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3697:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3705:10:1",
														"type": ""
													}
												],
												"src": "3636:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3876:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3893:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3916:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3898:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3898:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3886:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3864:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3871:3:1",
														"type": ""
													}
												],
												"src": "3821:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4000:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4017:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4040:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4022:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4022:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4010:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3988:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3995:3:1",
														"type": ""
													}
												],
												"src": "3935:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4213:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4223:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4237:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4237:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4227:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4300:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4381:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4307:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4402:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4467:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4417:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4406:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4482:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4496:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4486:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4572:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4586:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4613:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4607:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4607:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4590:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4633:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4684:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4699:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4640:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4640:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4633:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4716:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4779:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4726:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4726:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4716:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4534:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4537:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4531:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4545:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4547:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4556:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4559:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4552:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4552:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4547:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4516:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4518:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4527:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4522:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4512:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4805:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4812:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4192:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4199:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4208:3:1",
														"type": ""
													}
												],
												"src": "4089:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4892:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4914:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4914:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4902:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4880:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4887:3:1",
														"type": ""
													}
												],
												"src": "4827:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5049:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5059:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5071:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5082:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5067:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5059:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5139:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5152:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5163:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5148:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5095:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5095:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5021:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5033:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5044:4:1",
														"type": ""
													}
												],
												"src": "4951:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5277:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5287:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5299:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5310:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5287:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5367:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5380:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5391:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5376:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5323:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5323:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5249:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5261:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5272:4:1",
														"type": ""
													}
												],
												"src": "5179:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5583:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5593:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5605:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5616:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5601:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5601:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5593:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5673:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5686:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5697:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5682:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5629:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5629:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5721:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5732:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5717:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5741:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5747:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5710:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5767:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5869:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5878:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5775:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5775:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5767:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5547:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5559:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5567:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5578:4:1",
														"type": ""
													}
												],
												"src": "5407:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5937:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5947:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5957:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5947:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6006:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5986:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5986:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5921:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5930:6:1",
														"type": ""
													}
												],
												"src": "5896:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6071:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6081:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6091:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6091:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6081:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6064:6:1",
														"type": ""
													}
												],
												"src": "6031:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6299:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6301:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6301:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6301:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6271:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6279:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6268:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:30:1"
															},
															"nodeType": "YulIf",
															"src": "6265:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6331:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6343:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6351:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6331:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6393:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6405:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6393:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6178:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6189:4:1",
														"type": ""
													}
												],
												"src": "6112:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6501:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6511:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6519:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6511:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6532:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6544:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6549:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6532:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6488:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6496:4:1",
														"type": ""
													}
												],
												"src": "6429:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6641:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6668:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6662:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6662:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6652:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6624:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6634:6:1",
														"type": ""
													}
												],
												"src": "6567:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6762:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6772:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6784:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6780:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6772:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6749:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6757:4:1",
														"type": ""
													}
												],
												"src": "6687:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6917:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6934:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6927:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6927:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6955:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6974:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6979:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6955:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6889:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6894:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6905:11:1",
														"type": ""
													}
												],
												"src": "6806:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7044:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7054:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7077:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7059:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7059:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7054:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7088:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7111:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7093:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7093:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7088:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7286:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7288:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7288:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7198:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7191:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7191:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7184:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7184:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7206:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7213:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7281:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7209:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7209:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7203:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7203:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7180:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:105:1"
															},
															"nodeType": "YulIf",
															"src": "7177:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7318:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7333:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7336:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7329:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7318:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7027:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7030:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7036:7:1",
														"type": ""
													}
												],
												"src": "6996:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7395:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7405:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7434:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7416:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7405:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7377:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7387:7:1",
														"type": ""
													}
												],
												"src": "7350:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7503:7:1",
														"type": ""
													}
												],
												"src": "7452:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7627:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7637:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7666:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7648:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7648:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7637:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7609:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7619:7:1",
														"type": ""
													}
												],
												"src": "7568:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7729:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7739:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7754:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7750:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7739:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7711:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7721:7:1",
														"type": ""
													}
												],
												"src": "7684:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7861:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7871:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7882:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7871:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7843:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7853:7:1",
														"type": ""
													}
												],
												"src": "7816:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7942:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7952:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7974:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8004:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7982:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7982:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7970:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7956:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8121:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8123:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8123:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8123:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8064:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8076:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8061:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8100:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8097:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8097:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8058:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:62:1"
															},
															"nodeType": "YulIf",
															"src": "8055:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8159:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8163:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8152:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8152:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7928:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7936:4:1",
														"type": ""
													}
												],
												"src": "7899:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8214:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8234:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8224:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8328:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8321:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8321:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8355:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8345:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8186:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8400:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8417:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8420:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8410:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8410:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8410:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8514:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8517:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8507:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8507:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8541:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8531:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8372:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8586:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8603:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8606:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8596:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8596:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8596:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8700:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8703:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8693:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8693:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8693:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8724:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8727:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8717:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8717:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8558:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8833:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8850:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8853:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8843:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8843:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8744:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8956:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8973:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8976:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8966:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8966:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8867:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9079:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9096:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9099:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9089:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8990:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9202:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9219:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9222:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9212:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9212:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9113:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9284:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9294:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9312:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9319:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9308:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9328:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9324:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9304:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9294:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9267:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9277:6:1",
														"type": ""
													}
												],
												"src": "9236:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9387:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9446:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9446:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9410:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9435:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9417:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9417:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9407:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9400:43:1"
															},
															"nodeType": "YulIf",
															"src": "9397:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9380:5:1",
														"type": ""
													}
												],
												"src": "9344:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9529:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9600:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9609:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9612:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9602:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9602:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9602:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9552:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9591:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$317",
																					"nodeType": "YulIdentifier",
																					"src": "9559:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9559:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9549:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:57:1"
															},
															"nodeType": "YulIf",
															"src": "9539:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9522:5:1",
														"type": ""
													}
												],
												"src": "9472:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9685:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9756:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9765:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9768:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9758:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9758:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9758:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9708:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9747:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$329",
																					"nodeType": "YulIdentifier",
																					"src": "9715:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9715:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9705:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9705:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9698:57:1"
															},
															"nodeType": "YulIf",
															"src": "9695:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9678:5:1",
														"type": ""
													}
												],
												"src": "9628:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9827:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9850:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9875:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9857:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9857:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9847:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9840:43:1"
															},
															"nodeType": "YulIf",
															"src": "9837:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9820:5:1",
														"type": ""
													}
												],
												"src": "9784:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$317(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$317(value)\n    }\n\n    function abi_decode_t_contract$_Router_$329(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$329(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$317(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$317(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$329(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$317(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$317(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$329(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$329(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b9190610639565b6100b2565b60405161006d9190610764565b60405180910390f35b61007e610253565b60405161008b9190610749565b60405180910390f35b61009c610279565b6040516100a99190610749565b60405180910390f35b600061013b828473ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fe57600080fd5b505afa158015610112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013691906105c3565b61029d565b8373ffffffffffffffffffffffffffffffffffffffff166370a082318573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d591906105c3565b6040518263ffffffff1660e01b81526004016101f19190610749565b60206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610679565b61024b9190610839565b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156102bb576102ba610982565b5b6040519080825280602002602001820160405280156102e95781602001602082028036833780820191505090505b509050828160008151811061030157610300610953565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106103705761036f610953565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103e1576103e0610953565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161045892919061077f565b60006040518083038186803b15801561047057600080fd5b505afa158015610484573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104ad91906105f0565b6002815181106104c0576104bf610953565b5b602002602001015191505092915050565b60006104e46104df846107d4565b6107af565b90508083825260208201905082856020860282011115610507576105066109b6565b5b60005b85811015610537578161051d88826105ae565b84526020840193506020830192505060018101905061050a565b5050509392505050565b600081519050610550816109d6565b92915050565b600082601f83011261056b5761056a6109b1565b5b815161057b8482602086016104d1565b91505092915050565b600081359050610593816109ed565b92915050565b6000813590506105a881610a04565b92915050565b6000815190506105bd81610a1b565b92915050565b6000602082840312156105d9576105d86109c0565b5b60006105e784828501610541565b91505092915050565b600060208284031215610606576106056109c0565b5b600082015167ffffffffffffffff811115610624576106236109bb565b5b61063084828501610556565b91505092915050565b600080604083850312156106505761064f6109c0565b5b600061065e85828601610584565b925050602061066f85828601610599565b9150509250929050565b60006020828403121561068f5761068e6109c0565b5b600061069d848285016105ae565b91505092915050565b60006106b283836106be565b60208301905092915050565b6106c781610893565b82525050565b6106d681610893565b82525050565b60006106e782610810565b6106f18185610828565b93506106fc83610800565b8060005b8381101561072d57815161071488826106a6565b975061071f8361081b565b925050600181019050610700565b5085935050505092915050565b610743816108e9565b82525050565b600060208201905061075e60008301846106cd565b92915050565b6000602082019050610779600083018461073a565b92915050565b6000604082019050610794600083018561073a565b81810360208301526107a681846106dc565b90509392505050565b60006107b96107ca565b90506107c582826108f3565b919050565b6000604051905090565b600067ffffffffffffffff8211156107ef576107ee610982565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610844826108e9565b915061084f836108e9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561088857610887610924565b5b828202905092915050565b600061089e826108c9565b9050919050565b60006108b082610893565b9050919050565b60006108c282610893565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6108fc826109c5565b810181811067ffffffffffffffff8211171561091b5761091a610982565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6109df81610893565b81146109ea57600080fd5b50565b6109f6816108a5565b8114610a0157600080fd5b50565b610a0d816108b7565b8114610a1857600080fd5b50565b610a24816108e9565b8114610a2f57600080fd5b5056fea26469706673582212205a2a63359c98b9729451e243998c7047fad3b7fe5d04ea25112b6af4ee62719e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x13B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x839 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x982 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x458 SWAP3 SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4 PUSH2 0x4DF DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x9B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x537 JUMPI DUP2 PUSH2 0x51D DUP9 DUP3 PUSH2 0x5AE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x550 DUP2 PUSH2 0x9D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x9B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x57B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x593 DUP2 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A8 DUP2 PUSH2 0xA04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5BD DUP2 PUSH2 0xA1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP5 DUP3 DUP6 ADD PUSH2 0x541 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x624 JUMPI PUSH2 0x623 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH2 0x630 DUP5 DUP3 DUP6 ADD PUSH2 0x556 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x65E DUP6 DUP3 DUP7 ADD PUSH2 0x584 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x66F DUP6 DUP3 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x69D DUP5 DUP3 DUP6 ADD PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x893 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6D6 DUP2 PUSH2 0x893 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E7 DUP3 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x6F1 DUP2 DUP6 PUSH2 0x828 JUMP JUMPDEST SWAP4 POP PUSH2 0x6FC DUP4 PUSH2 0x800 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x72D JUMPI DUP2 MLOAD PUSH2 0x714 DUP9 DUP3 PUSH2 0x6A6 JUMP JUMPDEST SWAP8 POP PUSH2 0x71F DUP4 PUSH2 0x81B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x700 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x743 DUP2 PUSH2 0x8E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x75E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x779 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x73A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x794 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x73A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7A6 DUP2 DUP5 PUSH2 0x6DC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B9 PUSH2 0x7CA JUMP JUMPDEST SWAP1 POP PUSH2 0x7C5 DUP3 DUP3 PUSH2 0x8F3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EE PUSH2 0x982 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x844 DUP3 PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x84F DUP4 PUSH2 0x8E9 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x888 JUMPI PUSH2 0x887 PUSH2 0x924 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89E DUP3 PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B0 DUP3 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FC DUP3 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x91B JUMPI PUSH2 0x91A PUSH2 0x982 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9DF DUP2 PUSH2 0x893 JUMP JUMPDEST DUP2 EQ PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x8A5 JUMP JUMPDEST DUP2 EQ PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA0D DUP2 PUSH2 0x8B7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0x8E9 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x2A PUSH4 0x359C98B9 PUSH19 0x9451E243998C7047FAD3B7FE5D04EA25112B6A DELEGATECALL 0xEE PUSH3 0x719E64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "8846:698:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9340:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8941:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8870;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9340:201;9423:7;9491:39;9497:13;9511:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9491:5;:39::i;:::-;9451:9;:19;;;9471:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9451:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:79;;;;:::i;:::-;9442:91;;9340:201;;;;:::o;8941:64::-;;;;;;;;;;;;;:::o;8870:::-;;;;;;;;;;;;:::o;9057:275::-;9131:4;9147:21;9185:1;9171:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:40;;9208:5;9198:4;9203:1;9198:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;9234:4;;;;;;;;;;9224;9229:1;9224:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9259:4;;;;;;;;;;;9249;9254:1;9249:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9281:13;:27;;;9309:6;;9316:4;9281:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9322:1;9281:43;;;;;;;;:::i;:::-;;;;;;;;9274:50;;;9057:275;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:143::-;831:5;862:6;856:13;847:22;;878:33;905:5;878:33;:::i;:::-;774:143;;;;:::o;940:385::-;1022:5;1071:3;1064:4;1056:6;1052:17;1048:27;1038:122;;1079:79;;:::i;:::-;1038:122;1189:6;1183:13;1214:105;1315:3;1307:6;1300:4;1292:6;1288:17;1214:105;:::i;:::-;1205:114;;1028:297;940:385;;;;:::o;1331:167::-;1391:5;1429:6;1416:20;1407:29;;1445:47;1486:5;1445:47;:::i;:::-;1331:167;;;;:::o;1504:::-;1564:5;1602:6;1589:20;1580:29;;1618:47;1659:5;1618:47;:::i;:::-;1504:167;;;;:::o;1677:143::-;1734:5;1765:6;1759:13;1750:22;;1781:33;1808:5;1781:33;:::i;:::-;1677:143;;;;:::o;1826:351::-;1896:6;1945:2;1933:9;1924:7;1920:23;1916:32;1913:119;;;1951:79;;:::i;:::-;1913:119;2071:1;2096:64;2152:7;2143:6;2132:9;2128:22;2096:64;:::i;:::-;2086:74;;2042:128;1826:351;;;;:::o;2183:554::-;2278:6;2327:2;2315:9;2306:7;2302:23;2298:32;2295:119;;;2333:79;;:::i;:::-;2295:119;2474:1;2463:9;2459:17;2453:24;2504:18;2496:6;2493:30;2490:117;;;2526:79;;:::i;:::-;2490:117;2631:89;2712:7;2703:6;2692:9;2688:22;2631:89;:::i;:::-;2621:99;;2424:306;2183:554;;;;:::o;2743:530::-;2839:6;2847;2896:2;2884:9;2875:7;2871:23;2867:32;2864:119;;;2902:79;;:::i;:::-;2864:119;3022:1;3047:67;3106:7;3097:6;3086:9;3082:22;3047:67;:::i;:::-;3037:77;;2993:131;3163:2;3189:67;3248:7;3239:6;3228:9;3224:22;3189:67;:::i;:::-;3179:77;;3134:132;2743:530;;;;;:::o;3279:351::-;3349:6;3398:2;3386:9;3377:7;3373:23;3369:32;3366:119;;;3404:79;;:::i;:::-;3366:119;3524:1;3549:64;3605:7;3596:6;3585:9;3581:22;3549:64;:::i;:::-;3539:74;;3495:128;3279:351;;;;:::o;3636:179::-;3705:10;3726:46;3768:3;3760:6;3726:46;:::i;:::-;3804:4;3799:3;3795:14;3781:28;;3636:179;;;;:::o;3821:108::-;3898:24;3916:5;3898:24;:::i;:::-;3893:3;3886:37;3821:108;;:::o;3935:118::-;4022:24;4040:5;4022:24;:::i;:::-;4017:3;4010:37;3935:118;;:::o;4089:732::-;4208:3;4237:54;4285:5;4237:54;:::i;:::-;4307:86;4386:6;4381:3;4307:86;:::i;:::-;4300:93;;4417:56;4467:5;4417:56;:::i;:::-;4496:7;4527:1;4512:284;4537:6;4534:1;4531:13;4512:284;;;4613:6;4607:13;4640:63;4699:3;4684:13;4640:63;:::i;:::-;4633:70;;4726:60;4779:6;4726:60;:::i;:::-;4716:70;;4572:224;4559:1;4556;4552:9;4547:14;;4512:284;;;4516:14;4812:3;4805:10;;4213:608;;;4089:732;;;;:::o;4827:118::-;4914:24;4932:5;4914:24;:::i;:::-;4909:3;4902:37;4827:118;;:::o;4951:222::-;5044:4;5082:2;5071:9;5067:18;5059:26;;5095:71;5163:1;5152:9;5148:17;5139:6;5095:71;:::i;:::-;4951:222;;;;:::o;5179:::-;5272:4;5310:2;5299:9;5295:18;5287:26;;5323:71;5391:1;5380:9;5376:17;5367:6;5323:71;:::i;:::-;5179:222;;;;:::o;5407:483::-;5578:4;5616:2;5605:9;5601:18;5593:26;;5629:71;5697:1;5686:9;5682:17;5673:6;5629:71;:::i;:::-;5747:9;5741:4;5737:20;5732:2;5721:9;5717:18;5710:48;5775:108;5878:4;5869:6;5775:108;:::i;:::-;5767:116;;5407:483;;;;;:::o;5896:129::-;5930:6;5957:20;;:::i;:::-;5947:30;;5986:33;6014:4;6006:6;5986:33;:::i;:::-;5896:129;;;:::o;6031:75::-;6064:6;6097:2;6091:9;6081:19;;6031:75;:::o;6112:311::-;6189:4;6279:18;6271:6;6268:30;6265:56;;;6301:18;;:::i;:::-;6265:56;6351:4;6343:6;6339:17;6331:25;;6411:4;6405;6401:15;6393:23;;6112:311;;;:::o;6429:132::-;6496:4;6519:3;6511:11;;6549:4;6544:3;6540:14;6532:22;;6429:132;;;:::o;6567:114::-;6634:6;6668:5;6662:12;6652:22;;6567:114;;;:::o;6687:113::-;6757:4;6789;6784:3;6780:14;6772:22;;6687:113;;;:::o;6806:184::-;6905:11;6939:6;6934:3;6927:19;6979:4;6974:3;6970:14;6955:29;;6806:184;;;;:::o;6996:348::-;7036:7;7059:20;7077:1;7059:20;:::i;:::-;7054:25;;7093:20;7111:1;7093:20;:::i;:::-;7088:25;;7281:1;7213:66;7209:74;7206:1;7203:81;7198:1;7191:9;7184:17;7180:105;7177:131;;;7288:18;;:::i;:::-;7177:131;7336:1;7333;7329:9;7318:20;;6996:348;;;;:::o;7350:96::-;7387:7;7416:24;7434:5;7416:24;:::i;:::-;7405:35;;7350:96;;;:::o;7452:110::-;7503:7;7532:24;7550:5;7532:24;:::i;:::-;7521:35;;7452:110;;;:::o;7568:::-;7619:7;7648:24;7666:5;7648:24;:::i;:::-;7637:35;;7568:110;;;:::o;7684:126::-;7721:7;7761:42;7754:5;7750:54;7739:65;;7684:126;;;:::o;7816:77::-;7853:7;7882:5;7871:16;;7816:77;;;:::o;7899:281::-;7982:27;8004:4;7982:27;:::i;:::-;7974:6;7970:40;8112:6;8100:10;8097:22;8076:18;8064:10;8061:34;8058:62;8055:88;;;8123:18;;:::i;:::-;8055:88;8163:10;8159:2;8152:22;7942:238;7899:281;;:::o;8186:180::-;8234:77;8231:1;8224:88;8331:4;8328:1;8321:15;8355:4;8352:1;8345:15;8372:180;8420:77;8417:1;8410:88;8517:4;8514:1;8507:15;8541:4;8538:1;8531:15;8558:180;8606:77;8603:1;8596:88;8703:4;8700:1;8693:15;8727:4;8724:1;8717:15;8744:117;8853:1;8850;8843:12;8867:117;8976:1;8973;8966:12;8990:117;9099:1;9096;9089:12;9113:117;9222:1;9219;9212:12;9236:102;9277:6;9328:2;9324:7;9319:2;9312:5;9308:14;9304:28;9294:38;;9236:102;;;:::o;9344:122::-;9417:24;9435:5;9417:24;:::i;:::-;9410:5;9407:35;9397:63;;9456:1;9453;9446:12;9397:63;9344:122;:::o;9472:150::-;9559:38;9591:5;9559:38;:::i;:::-;9552:5;9549:49;9539:77;;9612:1;9609;9602:12;9539:77;9472:150;:::o;9628:::-;9715:38;9747:5;9715:38;:::i;:::-;9708:5;9705:49;9695:77;;9768:1;9765;9758:12;9695:77;9628:150;:::o;9784:122::-;9857:24;9875:5;9857:24;:::i;:::-;9850:5;9847:35;9837:63;;9896:1;9893;9886:12;9837:63;9784:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "532800",
								"executionCost": "71208",
								"totalCost": "604008"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address)": "infinite",
								"WBNB()": "2533"
							},
							"internal": {
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8892,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8963,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9029,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9544,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a2a63359c98b9729451e243998c7047fad3b7fe5d04ea25112b6af4ee62719e64736f6c63430008070033",
									".code": [
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "344E49D9"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9491,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9497,
											"end": 9510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9511,
											"end": 9527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9527,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9491,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9491,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9491,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9451,
											"end": 9470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9470,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9471,
											"end": 9480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9471,
											"end": 9487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9487,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9451,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9442,
											"end": 9533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9442,
											"end": 9533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9185,
											"end": 9186,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9147,
											"end": 9187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9147,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9203,
											"end": 9204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9229,
											"end": 9230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9281,
											"end": 9308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 9309,
											"end": 9315,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9309,
											"end": 9315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9274,
											"end": 9324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9274,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9274,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 774,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 831,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1315,
											"end": 1318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1436,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1486,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1609,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1659,
											"end": 1664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1808,
											"end": 1813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1943,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1948,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2330,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2523,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2899,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3248,
											"end": 3255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3386,
											"end": 3395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3384,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3605,
											"end": 3612,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3916,
											"end": 3921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4040,
											"end": 4045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4384,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4393,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4544,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4699,
											"end": 4702,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4703,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4560,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4556,
											"end": 4557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4815,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4815,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4932,
											"end": 4937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5163,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5179,
											"end": 5401,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5179,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5299,
											"end": 5308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5391,
											"end": 5392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5323,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5323,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5323,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5629,
											"end": 5700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5629,
											"end": 5700,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5629,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5741,
											"end": 5745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5730,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5878,
											"end": 5882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5775,
											"end": 5883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5775,
											"end": 5883,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5775,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5896,
											"end": 6025,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5896,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6014,
											"end": 6018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5986,
											"end": 6019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5986,
											"end": 6019,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5986,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 6025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 6025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 6025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 6025,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6031,
											"end": 6106,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6031,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6064,
											"end": 6070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6112,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6112,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6298,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6351,
											"end": 6355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6339,
											"end": 6356,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6405,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6429,
											"end": 6561,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6429,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6553,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6561,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6567,
											"end": 6681,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6567,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6634,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6668,
											"end": 6673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6662,
											"end": 6674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6687,
											"end": 6800,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6687,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6800,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6806,
											"end": 6990,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6806,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 6977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 6984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 6984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6990,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6996,
											"end": 7344,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6996,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7054,
											"end": 7079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7054,
											"end": 7079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7283,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7284,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7201,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7180,
											"end": 7285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7177,
											"end": 7308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7308,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7177,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7344,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7344,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7350,
											"end": 7446,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7350,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7434,
											"end": 7439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7416,
											"end": 7440,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7416,
											"end": 7440,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7416,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7452,
											"end": 7562,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7452,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7550,
											"end": 7555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7532,
											"end": 7556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7532,
											"end": 7556,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7532,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7521,
											"end": 7556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7521,
											"end": 7556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7568,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7568,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7666,
											"end": 7671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7648,
											"end": 7672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7648,
											"end": 7672,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7648,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7678,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7684,
											"end": 7810,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7684,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7754,
											"end": 7759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7750,
											"end": 7804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7816,
											"end": 7893,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7816,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7871,
											"end": 7887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7871,
											"end": 7887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7893,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7899,
											"end": 8180,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7899,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 7982,
											"end": 8009,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7982,
											"end": 8009,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7982,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 8010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8097,
											"end": 8119,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8064,
											"end": 8074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8095,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8120,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 8055,
											"end": 8143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8143,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 8055,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8152,
											"end": 8174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 8180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 8180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 8180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 8180,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8186,
											"end": 8366,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8186,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8311,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8231,
											"end": 8232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8224,
											"end": 8312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8335,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8321,
											"end": 8336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8360,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8552,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 8372,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8497,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8517,
											"end": 8521,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8514,
											"end": 8515,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8507,
											"end": 8522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8545,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8738,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 8558,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8683,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8603,
											"end": 8604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8707,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8693,
											"end": 8708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8731,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8724,
											"end": 8725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8717,
											"end": 8732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 8855,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8867,
											"end": 8984,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 8867,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8976,
											"end": 8977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8973,
											"end": 8974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9107,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 8990,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9099,
											"end": 9100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9101,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9113,
											"end": 9230,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9113,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9224,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9338,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9236,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9324,
											"end": 9331,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9319,
											"end": 9321,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9312,
											"end": 9317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9304,
											"end": 9332,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9344,
											"end": 9466,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9344,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 9435,
											"end": 9440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9417,
											"end": 9441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9417,
											"end": 9441,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 9417,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9442,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 9397,
											"end": 9460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 9397,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9466,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9472,
											"end": 9622,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9472,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 9591,
											"end": 9596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9559,
											"end": 9597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9559,
											"end": 9597,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 9559,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9598,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9539,
											"end": 9616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9612,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9602,
											"end": 9614,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9616,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9539,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9622,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9628,
											"end": 9778,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 9628,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9747,
											"end": 9752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 9715,
											"end": 9753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9715,
											"end": 9753,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9715,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9754,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9695,
											"end": 9772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9770,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9772,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9695,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9778,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9784,
											"end": 9906,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 9784,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9875,
											"end": 9880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 9857,
											"end": 9881,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9857,
											"end": 9881,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9857,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9850,
											"end": 9855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9882,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9837,
											"end": 9900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9893,
											"end": 9894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 9898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9900,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9837,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9906,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address)": "344e49d9",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x5f0326e16075943c3598fe709a65be5785297d5b7f0301eae7633d1f37e2226d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed21aefc1f2ae438272584a6f30b5b4f1c9caec1b00442af39a798503f4804c\",\"dweb:/ipfs/QmTomQZiCD3Ltgo2iduFv7D1LDDbQUZtzGRbxanGfKFCRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 338,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x5f0326e16075943c3598fe709a65be5785297d5b7f0301eae7633d1f37e2226d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed21aefc1f2ae438272584a6f30b5b4f1c9caec1b00442af39a798503f4804c\",\"dweb:/ipfs/QmTomQZiCD3Ltgo2iduFv7D1LDDbQUZtzGRbxanGfKFCRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							317
						],
						"LpUtils": [
							415
						],
						"Router": [
							329
						]
					},
					"id": 416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 416,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "IERC20",
							"nameLocation": "8348:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8445:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8456:2:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "8482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8481:9:0"
									},
									"scope": 317,
									"src": "8436:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "8508:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8514:2:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8540:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8539:9:0"
									},
									"scope": 317,
									"src": "8499:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "8566:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8572:2:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "8598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:9:0"
									},
									"scope": 317,
									"src": "8557:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8624:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:17:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:9:0"
									},
									"scope": 317,
									"src": "8615:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 416,
							"src": "8338:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8752:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"nodeType": "ArrayTypeName",
													"src": "8752:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:38:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8816:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"nodeType": "ArrayTypeName",
													"src": "8816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:23:0"
									},
									"scope": 329,
									"src": "8714:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 416,
							"src": "8690:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 415,
							"linearizedBaseContracts": [
								415
							],
							"name": "LpUtils",
							"nameLocation": "8855:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 332,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8885:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 415,
									"src": "8870:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8870:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8892:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 335,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8956:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 415,
									"src": "8941:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8941:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8963:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9020:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 415,
									"src": "9012:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9012:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9029:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "9136:196:0",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9164:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "9147:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 350,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 351,
															"nodeType": "ArrayTypeName",
															"src": "9147:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9171:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 353,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9175:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 354,
															"nodeType": "ArrayTypeName",
															"src": "9175:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9171:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9147:40:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 359,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 361,
														"indexExpression": {
															"hexValue": "30",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9203:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 362,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "9208:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9198:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "9198:15:0"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 365,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 367,
														"indexExpression": {
															"hexValue": "31",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9229:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9234:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9224:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "9224:14:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 371,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9249:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 373,
														"indexExpression": {
															"hexValue": "32",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9254:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9259:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9249:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "9249:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 379,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "9309:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 380,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "9316:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 377,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9281:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$329",
																	"typeString": "contract Router"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 328,
															"src": "9281:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9281:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 383,
													"indexExpression": {
														"hexValue": "32",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9322:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9281:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 384,
												"nodeType": "Return",
												"src": "9274:50:0"
											}
										]
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "9066:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9079:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9072:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9072:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9102:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9071:37:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9131:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9130:6:0"
									},
									"scope": 415,
									"src": "9057:275:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "9431:110:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 399,
																						"name": "lpAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 389,
																						"src": "9471:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$317",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 304,
																					"src": "9471:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																						"typeString": "function () view external returns (address)"
																					}
																				},
																				"id": 401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9471:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "lpAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "9451:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$317",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 316,
																			"src": "9451:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9451:39:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 404,
																				"name": "routerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "9497:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Router_$329",
																					"typeString": "contract Router"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 405,
																						"name": "lpAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 389,
																						"src": "9511:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$317",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 406,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 304,
																					"src": "9511:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																						"typeString": "function () view external returns (address)"
																					}
																				},
																				"id": 407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9511:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Router_$329",
																					"typeString": "contract Router"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 403,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "9491:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$329_$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (contract Router,address) view returns (uint256)"
																			}
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9491:39:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9451:79:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 410,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9450:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 411,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9449:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 412,
												"nodeType": "Return",
												"src": "9442:91:0"
											}
										]
									},
									"functionSelector": "344e49d9",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "9349:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9368:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9361:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 387,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9361:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9361:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9386:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9379:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 390,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9379:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9360:40:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9422:9:0"
									},
									"scope": 415,
									"src": "9340:201:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 416,
							"src": "8846:698:0",
							"usedErrors": []
						}
					],
					"src": "33:9511:0"
				},
				"id": 0
			}
		}
	}
}